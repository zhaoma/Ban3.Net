<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ban3.Infrastructures.NativeLibs</name>
    </assembly>
    <members>
        <member name="T:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32">
            <summary>
            winefs.h This header is used by Data Access and Storage.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/
            </summary>
            <summary>
            winreg.h This header is used by multiple technologies.
                Developer Notes
                Hyper-V WMI Provider
                Security and Identity
                System Services
            This file is Developer Notes parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regclosekey
            </summary>
            <summary>
            evntcons.h This header is used by Event Tracing.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/
            </summary>
            <summary>
            evntprov.h This header is used by multiple technologies.
                Driver Development Tools Reference
                Event Tracing
            This file is Event Tracing parts.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/
            </summary>
            <summary>
            evntrace.h This header is used by multiple technologies.
                Event Tracing
                Kernel-Mode Driver Reference
            This file is Event Tracing parts.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/
            </summary>
            <summary>
            securitybaseapi.h This header is used by multiple technologies.
                Event Tracing
                Security and Identity
            This file is Event Tracing parts.
            https://learn.microsoft.com/en-us/windows/win32/api/securitybaseapi/
            https://learn.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-cveeventwrite
            </summary>
            <summary>
            winbase.h This header is used by multiple technologies.
                Application Installation and Servicing
                Application Recovery and Restart
                Backup
                Data Access and Storage
                Data Exchange
                Developer Notes
                eventlogprov
                Hardware Counter Profiling
                Internationalization for Windows Applications
                Menus and Other Resources
                Operation Recorder
                Remote Desktop Services
                Security and Identity
                System Services
                Window Stations and Desktops
                Windows and Messages
            This file is Operation Recorder parts.
            https://learn.microsoft.com/en-us/windows/win32/api/_oprec/
            </summary>
            <summary>
            aclapi.h This header is used by Security and Identity.
            https://learn.microsoft.com/en-us/windows/win32/api/aclapi/
            </summary>
            <summary>
            ntsecapi.h This header is used by Security and Identity.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/
            </summary>
            <summary>
            This header is used by Security and Identity.
            https://learn.microsoft.com/en-us/windows/win32/api/sddl/
            </summary>
            <summary>
            securitybaseapi.h This header is used by multiple technologies.
                Event Tracing
                Security and Identity
            This file is Security and Identity parts.
            https://learn.microsoft.com/en-us/windows/win32/api/securitybaseapi/
            https://learn.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-accesscheck
            </summary>
            <summary>
            winbase.h This header is used by multiple technologies.
                Application Installation and Servicing
                Application Recovery and Restart
                Backup
                Data Access and Storage
                Data Exchange
                Developer Notes
                eventlogprov
                Hardware Counter Profiling
                Internationalization for Windows Applications
                Menus and Other Resources
                Operation Recorder
                Remote Desktop Services
                Security and Identity
                System Services
                Window Stations and Desktops
                Windows and Messages
            This file is Security and Identity parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-accesscheckandauditalarma
            </summary>
            <summary>
            wincrypt.h This header is used by Security and Identity.
            https://learn.microsoft.com/en-us/windows/win32/api/wincrypt/nf-wincrypt-cryptacquirecertificateprivatekey
            </summary>
            <summary>
            winsvc.h This header is used by multiple technologies.
                Security and Identity
                System Services
            This file is Security and Identity parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winsvc/
            </summary>
            <summary>
            winbase.h This header is used by multiple technologies.
            This file is System Services parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-backupeventloga
            </summary>
            <summary>
            winreg.h This header is used by multiple technologies.
                Developer Notes
                Hyper-V WMI Provider
                Security and Identity
                System Services
            This file is System Services parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-abortsystemshutdowna
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.AddUsersToEncryptedFile(System.Text.StringBuilder,Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_LIST)">
            <summary>
            Adds user keys to the specified encrypted file.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/nf-winefs-adduserstoencryptedfile
            </summary>
            <param name="lpFileName">The name of the encrypted file.</param>
            <param name="EncryptionCertificates">
            A pointer to an ENCRYPTION_CERTIFICATE_LIST structure that contains the list of new user keys to be added to the file.
            </param>
            <returns>
            If the function succeeds, the return value is ERROR_SUCCESS.
            If the function fails, the return value is a system error code. For a complete list of error codes, see System Error Codes or the header file WinError.h.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.DuplicateEncryptionInfoFile(System.String,System.String,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@)">
            <summary>
            Copies the EFS metadata from one file or directory to another.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/nf-winefs-duplicateencryptioninfofile
            </summary>
            <param name="SrcFileName">
            The name of the file or directory from which the EFS metadata is to be copied. This source file or directory must be encrypted.
            </param>
            <param name="DstFileName">
            The name of the file or directory to which the EFS metadata is to be copied.
            This destination file or directory does not have to be encrypted before the call to this function; 
            however if this function completes successfully, it will be encrypted.
            </param>
            <param name="dwCreationDistribution">
            Describes how the destination file or directory identified by the DstFileName parameter value is to be opened.
            CREATE_ALWAYS=2;    Always create the destination file or directory. Any value passed in this parameter other than CREATE_NEW will be processed as CREATE_ALWAYS.
            CREATE_NEW=1;       Create the destination file or directory only if it does not already exist. If it does exist, and this value is specified, this function will fail.
            </param>
            <param name="dwAttributes">
            The file attributes of the destination file or directory. The FILE_READ_ONLY attribute is currently not processed by this function.
            </param>
            <param name="lpSecurityAttributes">
            A pointer to a SECURITY_ATTRIBUTES structure that specifies the security attributes of the destination file or directory, 
            if it does not already exist. If you specify NULL, the file or directory gets a default security descriptor.
            </param>
            <returns>
            If the function succeeds, the return value is ERROR_SUCCESS.
            If the function fails, the return value is a system error code. For a complete list of error codes, see System Error Codes or the header file WinError.h.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EncryptionDisable(System.String,System.Boolean)">
            <summary>
            Disables or enables encryption of the specified directory and the files in it. 
            It does not affect encryption of subdirectories below the indicated directory.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/nf-winefs-encryptiondisable
            </summary>
            <param name="DirPath">The name of the directory for which to enable or disable encryption.</param>
            <param name="Disable">Indicates whether to disable encryption (TRUE) or enable it (FALSE).</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.FreeEncryptionCertificateHashList(Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH_LIST@)">
            <summary>
            Frees a certificate hash list.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/nf-winefs-freeencryptioncertificatehashlist
            </summary>
            <param name="pUsers">
            A pointer to a certificate hash list structure, ENCRYPTION_CERTIFICATE_HASH_LIST, 
            which was returned by the QueryUsersOnEncryptedFile or QueryRecoveryAgentsOnEncryptedFile function.
            </param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.QueryRecoveryAgentsOnEncryptedFile(System.String,System.IntPtr@)">
            <summary>
            Retrieves a list of recovery agents for the specified file.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/nf-winefs-queryrecoveryagentsonencryptedfile
            </summary>
            <param name="lpFileName">The name of the file.</param>
            <param name="pRecoveryAgents">
            A pointer to a ENCRYPTION_CERTIFICATE_HASH_LIST structure that receives a list of recovery agents.
            </param>
            <returns>
            If the function succeeds, the return value is ERROR_SUCCESS.
            If the function fails, the return value is a system error code. 
            For a complete list of error codes, see System Error Codes or the header file WinError.h.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.QueryUsersOnEncryptedFile(System.String,System.IntPtr@)">
            <summary>
            Retrieves a list of users for the specified file.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/nf-winefs-queryusersonencryptedfile
            </summary>
            <param name="lpFileName">The name of the file.</param>
            <param name="pUsers">
            A pointer to a ENCRYPTION_CERTIFICATE_HASH_LIST structure that receives the list of users.
            </param>
            <returns>
            If the function succeeds, the return value is ERROR_SUCCESS.
            If the function fails, the return value is a system error code. For a complete list of error codes, see System Error Codes or the header file WinError.h.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RemoveUsersFromEncryptedFile(System.String,Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH_LIST@)">
            <summary>
            Removes specified certificate hashes from a specified file.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/nf-winefs-removeusersfromencryptedfile
            </summary>
            <param name="lpFileName">The name of the file.</param>
            <param name="pHashes">
            A pointer to an ENCRYPTION_CERTIFICATE_HASH_LIST structure that contains a list of certificate hashes to be removed from the file.
            </param>
            <returns>
            If the function succeeds, the return value is ERROR_SUCCESS.
            If the function fails, the return value is a system error code. For a complete list of error codes, see System Error Codes or the header file WinError.h.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.SetUserFileEncryptionKey(Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE@)">
            <summary>
            Sets the user's current key to the specified certificate.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/nf-winefs-setuserfileencryptionkey
            </summary>
            <param name="pEncryptionCertificate">
            A pointer to a certificate that will be the user's key. This parameter is a pointer to an ENCRYPTION_CERTIFICATE structure.
            </param>
            <returns>
            If the function succeeds, the return value is ERROR_SUCCESS.
            If the function fails, the return value is a system error code. For a complete list of error codes, see System Error Codes or the header file WinError.h.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCloseKey(System.IntPtr)">
            <summary>
            Closes a handle to the specified registry key.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regclosekey
            </summary>
            <param name="hKey">
            A handle to the open key to be closed. 
            The handle must have been opened by the RegCreateKeyEx, RegCreateKeyTransacted, RegOpenKeyEx, RegOpenKeyTransacted, or RegConnectRegistry function.
            </param>
            <returns>
            If the function succeeds, the return value is ERROR_SUCCESS.
            If the function fails, the return value is a nonzero error code defined in Winerror.h.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegConnectRegistryA(System.String,System.IntPtr,System.IntPtr)">
            <summary>
            Establishes a connection to a predefined registry key on another computer.
            </summary>
            <param name="lpMachineName">
            The name of the remote computer. The string has the following form:\\computername
            The caller must have access to the remote computer or the function fails.
            If this parameter is NULL, the local computer name is used.
            </param>
            <param name="hKey">
            A predefined registry handle. 
            This parameter can be one of the following predefined keys on the remote computer.
            HKEY_LOCAL_MACHINE HKEY_PERFORMANCE_DATA HKEY_USERS
            </param>
            <param name="phkResult">
            A pointer to a variable that receives a key handle identifying the predefined handle on the remote computer.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegConnectRegistryW(System.String,System.IntPtr,System.IntPtr)">
            almost same as RegConnectRegistryA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCopyTreeA(System.IntPtr,System.String,System.IntPtr)">
            <summary>
            Copies the specified registry key, along with its values and subkeys, to the specified destination key.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regcopytreea
            </summary>
            <param name="hKeySrc">
            A handle to an open registry key. The key must have been opened with the KEY_READ access right.
            </param>
            <param name="lpSubKey">
            The name of the key. This key must be a subkey of the key identified by the hKeySrc parameter. This parameter can also be NULL.
            </param>
            <param name="hKeyDest">
            A handle to the destination key. The calling process must have KEY_CREATE_SUB_KEY access to the key.
            This handle is returned by the RegCreateKeyEx or RegOpenKeyEx function, or it can be one of the predefined keys.
            </param>
            <returns>
            If the function succeeds, the return value is ERROR_SUCCESS.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCopyTreeW(System.IntPtr,System.String,System.IntPtr)">
            almost same as RegCopyTreeA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCreateKeyA(System.IntPtr,System.String,System.IntPtr@)">
            <summary>
            Creates the specified registry key. If the key already exists in the registry, the function opens it.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regcreatekeya
            </summary>
            <param name="hKey">
            A handle to an open registry key. The calling process must have KEY_CREATE_SUB_KEY access to the key.
            Access for key creation is checked against the security descriptor of the registry key, not the access mask specified when the handle was obtained.
            </param>
            <param name="lpSubKey">
            The name of a key that this function opens or creates. This key must be a subkey of the key identified by the hKey parameter.
            </param>
            <param name="phkResult">
            A pointer to a variable that receives a handle to the opened or created key. 
            If the key is not one of the predefined registry keys, call the RegCloseKey function after you have finished using the handle.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCreateKeyW(System.IntPtr,System.String,System.IntPtr@)">
            almost same as RegCreateKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCreateKeyExA(System.IntPtr,System.String,System.UInt32,System.String,System.UInt64,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@,System.IntPtr@,System.UInt32@)">
            <summary>
            Creates the specified registry key. If the key already exists, the function opens it. Note that key names are not case sensitive.
            </summary>
            <param name="hKey">A handle to an open registry key.</param>
            <param name="lpSubKey">
            The name of a subkey that this function opens or creates.
            The subkey specified must be a subkey of the key identified by the hKey parameter; it can be up to 32 levels deep in the registry tree.
            </param>
            <param name="Reserved">This parameter is reserved and must be zero.</param>
            <param name="lpClass">The user-defined class type of this key. This parameter may be ignored. This parameter can be NULL.</param>
            <param name="dwOptions"></param>
            <param name="samDesired"></param>
            <param name="lpSecurityAttributes"></param>
            <param name="phkResult"></param>
            <param name="lpdwDisposition"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCreateKeyExW(System.IntPtr,System.String,System.UInt32,System.String,System.UInt64,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@,System.IntPtr@,System.UInt32@)">
            almost same as RegCreateKeyExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCreateKeyTransactedA(System.IntPtr,System.String,System.UInt32,System.String,System.UInt64,Ban3.Infrastructures.NativeLibs.Enums.RegKeyDesired,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@,System.IntPtr@,System.UInt32@,System.IntPtr,System.IntPtr)">
            <summary>
            Creates the specified registry key and associates it with a transaction. 
            If the key already exists, the function opens it. 
            Note that key names are not case sensitive.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="Reserved"></param>
            <param name="lpClass"></param>
            <param name="dwOptions"></param>
            <param name="samDesired"></param>
            <param name="lpSecurityAttributes"></param>
            <param name="phkResult"></param>
            <param name="lpdwDisposition"></param>
            <param name="hTransaction"></param>
            <param name="pExtendedParemeter"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegCreateKeyTransactedW(System.IntPtr,System.String,System.UInt32,System.String,System.UInt64,Ban3.Infrastructures.NativeLibs.Enums.RegKeyDesired,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@,System.IntPtr@,System.UInt32@,System.IntPtr,System.IntPtr)">
            almost same as RegCreateKeyTransactedA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteKeyA(System.IntPtr,System.String)">
            <summary>
            Deletes a subkey and its values. Note that key names are not case sensitive.
            64-bit Windows:  On WOW64, 32-bit applications view a registry tree that is separate from the registry tree that 64-bit applications view. 
            To enable an application to delete an entry in the alternate registry view, use the RegDeleteKeyEx function.
            </summary>
            <param name="hKey">A handle to an open registry key.</param>
            <param name="lpSubKey">
            The name of the key to be deleted. 
            It must be a subkey of the key that hKey identifies, but it cannot have subkeys. 
            This parameter cannot be NULL.
            The function opens the subkey with the DELETE access right.
            Key names are not case sensitive.
            </param>
            <returns>If the function succeeds, the return value is ERROR_SUCCESS.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteKeyW(System.IntPtr,System.String)">
            almost same as RegDeleteKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteKeyExA(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Enums.RegKeyDesired,System.UInt32)">
            <summary>
            
            </summary>
            <param name="hKey">A handle to an open registry key.</param>
            <param name="lpSubKey">The name of the key to be deleted. </param>
            <param name="samDesired">
            An access mask the specifies the platform-specific view of the registry.
            </param>
            <param name="Reserved"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteKeyExW(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Enums.RegKeyDesired,System.UInt32)">
            almost same as RegDeleteKeyExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteKeyTransactedA(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Enums.RegKeyDesired,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Deletes a subkey and its values from the specified platform-specific view of the registry as a transacted operation. 
            Note that key names are not case sensitive.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="samDesired"></param>
            <param name="Reserved"></param>
            <param name="hTransaction"></param>
            <param name="pExtendedParemeter"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteKeyTransactedW(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Enums.RegKeyDesired,System.UInt32,System.IntPtr,System.IntPtr)">
            almost same as RegDeleteKeyTransactedA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteKeyValueA(System.IntPtr,System.String,System.String)">
            <summary>
            Removes the specified value from the specified registry key and subkey.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="lpValueName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteKeyValueW(System.IntPtr,System.String,System.String)">
            almost same as RegDeleteKeyValueA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteTreeA(System.IntPtr,System.String)">
            <summary>
            Deletes the subkeys and values of the specified key recursively.
            </summary>
            <param name="hKey">A handle to an open registry key.</param>
            <param name="lpSubKey">
            The name of the key. This key must be a subkey of the key identified by the hKey parameter. 
            If this parameter is NULL, the subkeys and values of hKey are deleted.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteTreeW(System.IntPtr,System.String)">
            almost same as RegDeleteTreeA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteValueA(System.IntPtr,System.String)">
            <summary>
            Removes a named value from the specified registry key. Note that value names are not case sensitive.
            </summary>
            <param name="hKey">A handle to an open registry key.</param>
            <param name="lpValueName">
            The registry value to be removed. 
            If this parameter is NULL or an empty string, the value set by the RegSetValueEx function is removed.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDeleteValueW(System.IntPtr,System.String)">
            almost same as RegDeleteValueA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDisablePredefinedCache">
            <summary>
            Disables handle caching of the predefined registry handle for HKEY_CURRENT_USER for the current process. 
            This function does not work on a remote computer.
            To disables handle caching of all predefined registry handles, use the RegDisablePredefinedCacheEx function.
            </summary>
            <returns>If the function succeeds, the return value is ERROR_SUCCESS.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDisablePredefinedCacheEx">
            <summary>
            Disables handle caching for all predefined registry handles for the current process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegDisableReflectionKey(System.IntPtr)">
            <summary>
            Disables registry reflection for the specified key. 
            Disabling reflection for a key does not affect reflection of any subkeys.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regdisablereflectionkey
            </summary>
            <param name="hBase">A handle to an open registry key.</param>
            <returns>If the function succeeds, the return value is ERROR_SUCCESS.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegEnableReflectionKey(System.IntPtr)">
            <summary>
            Restores registry reflection for the specified disabled key. 
            Restoring reflection for a key does not affect reflection of any subkeys.
            </summary>
            <param name="hBase">A handle to the registry key that was previously disabled using the RegDisableReflectionKey function.</param>
            <returns>If the function succeeds, the return value is ERROR_SUCCESS.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegEnumKeyA(System.IntPtr,System.UInt32,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Enumerates the subkeys of the specified open registry key. 
            The function retrieves the name of one subkey each time it is called.
            Note  This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegEnumKeyEx function.
            </summary>
            <param name="hKey"></param>
            <param name="dwIndex"></param>
            <param name="lpName"></param>
            <param name="cchName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegEnumKeyW(System.IntPtr,System.UInt32,System.Text.StringBuilder,System.UInt32)">
            almost same as RegEnumKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegEnumKeyExA(System.IntPtr,System.UInt32,System.Text.StringBuilder,System.UInt32@,System.UInt32@,System.Text.StringBuilder,System.UInt32@,Ban3.Infrastructures.NativeLibs.Structs.FILETIME@)">
            <summary>
            Enumerates the subkeys of the specified open registry key. 
            The function retrieves information about one subkey each time it is called.
            </summary>
            <param name="hKey"></param>
            <param name="dwIndex"></param>
            <param name="lpName"></param>
            <param name="lpcchName"></param>
            <param name="lpReserved">This parameter is reserved and must be NULL.</param>
            <param name="lpClass">A pointer to a buffer that receives the user-defined class of the enumerated subkey. This parameter can be NULL.</param>
            <param name="lpcchClass"></param>
            <param name="lpftLastWriteTime">A pointer to FILETIME structure that receives the time at which the enumerated subkey was last written. This parameter can be NULL.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegEnumKeyExW(System.IntPtr,System.UInt32,System.Text.StringBuilder,System.UInt32@,System.UInt32@,System.Text.StringBuilder,System.UInt32@,Ban3.Infrastructures.NativeLibs.Structs.FILETIME@)">
            almost same as RegEnumKeyExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegEnumValueA(System.IntPtr,System.UInt32,System.Text.StringBuilder,System.UInt32@,System.UInt32@,System.UInt32@,System.Byte@,System.UInt32@)">
            <summary>
            Enumerates the values for the specified open registry key. 
            The function copies one indexed value name and data block for the key each time it is called.
            </summary>
            <param name="hKey"></param>
            <param name="dwIndex"></param>
            <param name="lpValueName"></param>
            <param name="lpcchValueName"></param>
            <param name="lpReserved">This parameter is reserved and must be NULL.</param>
            <param name="lpType"></param>
            <param name="lpData"></param>
            <param name="lpcbData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegEnumValueW(System.IntPtr,System.UInt32,System.Text.StringBuilder,System.UInt32@,System.UInt32@,System.UInt32@,System.Byte@,System.UInt32@)">
            almost same as RegEnumValueA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegFlushKey(System.IntPtr)">
            <summary>
            Writes all the attributes of the specified open registry key into the registry.
            </summary>
            <param name="hKey"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegGetValueA(System.IntPtr,System.String,System.String,System.UInt32,System.UInt32@,System.IntPtr,System.UInt32@)">
            <summary>
            Retrieves the type and data for the specified registry value.
            </summary>
            <param name="hkey"></param>
            <param name="lpSubKey"></param>
            <param name="lpValue"></param>
            <param name="dwFlags"></param>
            <param name="pdwType"></param>
            <param name="pvData"></param>
            <param name="pcbData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegGetValueW(System.IntPtr,System.String,System.String,System.UInt32,System.UInt32@,System.IntPtr,System.UInt32@)">
            almost same as RegGetValueA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegLoadAppKeyA(System.String,System.IntPtr@,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Loads the specified registry hive as an application hive.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-regloadappkeya
            </summary>
            <param name="lpFile">
            The name of the hive file. 
            This hive must have been created with the RegSaveKey or RegSaveKeyEx function. 
            If the file does not exist, an empty hive file is created with the specified name.
            </param>
            <param name="phkResult">Pointer to the handle for the root key of the loaded hive.</param>
            <param name="samDesired">A mask that specifies the access rights requested for the returned root key.</param>
            <param name="dwOptions"></param>
            <param name="Reserved"></param>
            <returns>If the function succeeds, the return value is ERROR_SUCCESS.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegLoadAppKeyW(System.String,System.IntPtr@,System.UInt32,System.UInt32,System.UInt32)">
            almost same as RegLoadAppKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegLoadKeyA(System.IntPtr,System.String,System.String)">
            <summary>
            Creates a subkey under HKEY_USERS or HKEY_LOCAL_MACHINE and loads the data from the specified registry hive into that subkey.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="lpFile"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegLoadKeyW(System.IntPtr,System.String,System.String)">
            almost same as RegLoadKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegLoadMUIStringA(System.IntPtr,System.String,System.Text.StringBuilder,System.UInt32,System.UInt32@,System.UInt32,System.String)">
            <summary>
            Loads the specified string from the specified key and subkey.
            </summary>
            <param name="hKey"></param>
            <param name="pszValue"></param>
            <param name="pszOutBuf"></param>
            <param name="cbOutBuf"></param>
            <param name="pcbData"></param>
            <param name="Flags"></param>
            <param name="pszDirectory"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegLoadMUIStringW(System.IntPtr,System.String,System.Text.StringBuilder,System.UInt32,System.UInt32@,System.UInt32,System.String)">
            almost same as RegLoadMUIStringA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegNotifyChangeKeyValue(System.IntPtr,System.Boolean,System.UInt64,System.IntPtr,System.Boolean)">
            <summary>
            Notifies the caller about changes to the attributes or contents of a specified registry key.
            </summary>
            <param name="hKey">A handle to an open registry key.</param>
            <param name="bWatchSubtree">
            If this parameter is TRUE, the function reports changes in the specified key and its subkeys. 
            If the parameter is FALSE, the function reports changes only in the specified key.
            </param>
            <param name="dwNotifyFilter">
            A value that indicates the changes that should be reported. This parameter can be one or more of the [Enums/RegNotifyFilter].
            </param>
            <param name="hEvent">
            A handle to an event. If the fAsynchronous parameter is TRUE, 
            the function returns immediately and changes are reported by signaling this event. 
            If fAsynchronous is FALSE, hEvent is ignored.
            </param>
            <param name="fAsynchronous">
            If this parameter is TRUE, the function returns immediately and reports changes by signaling the specified event. 
            If this parameter is FALSE, the function does not return until a change has occurred.
            If hEvent does not specify a valid event, the fAsynchronous parameter cannot be TRUE.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOpenCurrentUser(System.UInt32,System.IntPtr@)">
            <summary>
            Retrieves a handle to the HKEY_CURRENT_USER key for the user the current thread is impersonating.
            </summary>
            <param name="samDesired">A mask that specifies the desired access rights to the key.</param>
            <param name="phkResult">A pointer to a variable that receives a handle to the opened key.</param>
            <returns>If the function succeeds, the return value is ERROR_SUCCESS.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOpenKeyA(System.IntPtr,System.String,System.IntPtr@)">
            <summary>
            Opens the specified registry key.
            Note  This function is provided only for compatibility with 16-bit versions of Windows. 
            Applications should use the RegOpenKeyEx function.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="phkResult"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOpenKeyW(System.IntPtr,System.String,System.IntPtr@)">
            amost same as RegOpenKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOpenKeyExA(System.IntPtr,System.String,System.UInt32,System.UInt32,System.IntPtr@)">
            <summary>
            Opens the specified registry key. Note that key names are not case sensitive.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="ulOptions"></param>
            <param name="samDesired"></param>
            <param name="phkResult"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOpenKeyExW(System.IntPtr,System.String,System.UInt32,System.UInt32,System.IntPtr@)">
            amost same as RegOpenKeyExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOpenKeyTransactedA(System.IntPtr,System.String,System.UInt32,System.UInt32,System.IntPtr@,System.IntPtr,System.IntPtr)">
            <summary>
            Opens the specified registry key and associates it with a transaction. 
            Note that key names are not case sensitive.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="ulOptions"></param>
            <param name="samDesired"></param>
            <param name="phkResult"></param>
            <param name="hTransaction"></param>
            <param name="pExtendedParemeter"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOpenKeyTransactedW(System.IntPtr,System.String,System.UInt32,System.UInt32,System.IntPtr@,System.IntPtr,System.IntPtr)">
            amost same as RegOpenKeyTransactedA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOpenUserClassesRoot(System.IntPtr,System.UInt32,System.UInt32,System.IntPtr@)">
            <summary>
            Retrieves a handle to the HKEY_CLASSES_ROOT key for a specified user.
            </summary>
            <param name="hToken"></param>
            <param name="dwOptions"></param>
            <param name="samDesired"></param>
            <param name="phkResult"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegOverridePredefKey(System.IntPtr,System.IntPtr)">
            <summary>
            Maps a predefined registry key to the specified registry key.
            </summary>
            <param name="hKey"></param>
            <param name="hNewHKey"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryInfoKeyA(System.IntPtr,System.Text.StringBuilder,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,Ban3.Infrastructures.NativeLibs.Structs.FILETIME)">
            <summary>
            Retrieves information about the specified registry key.
            </summary>
            <param name="hKey"></param>
            <param name="lpClass"></param>
            <param name="lpcchClass"></param>
            <param name="lpReserved"></param>
            <param name="lpcSubKeys"></param>
            <param name="lpcbMaxSubKeyLen"></param>
            <param name="lpcbMaxClassLen"></param>
            <param name="lpcValues"></param>
            <param name="lpcbMaxValueNameLen"></param>
            <param name="lpcbMaxValueLen"></param>
            <param name="lpcbSecurityDescriptor"></param>
            <param name="lpftLastWriteTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryInfoKeyW(System.IntPtr,System.Text.StringBuilder,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@,Ban3.Infrastructures.NativeLibs.Structs.FILETIME)">
            amost same as RegQueryInfoKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryMultipleValuesA(System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.VALENTA[]@,System.UInt32,System.Text.StringBuilder,System.UInt32@)">
            <summary>
            Retrieves the type and data for a list of value names associated with an open registry key.
            </summary>
            <param name="hKey"></param>
            <param name="val_list"></param>
            <param name="num_vals"></param>
            <param name="lpValueBuf"></param>
            <param name="ldwTotsize"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryMultipleValuesW(System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.VALENTW[]@,System.UInt32,System.Text.StringBuilder,System.UInt32@)">
            amost same as RegQueryMultipleValuesA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryMultipleValuesW(System.IntPtr,System.Boolean@)">
            <summary>
            Determines whether reflection has been disabled or enabled for the specified key.
            </summary>
            <param name="hBase"></param>
            <param name="bIsReflectionDisabled">
            A value that indicates whether reflection has been disabled through RegDisableReflectionKey or enabled through RegEnableReflectionKey.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryValueA(System.IntPtr,System.String,System.Text.StringBuilder,System.Int32@)">
            <summary>
            Retrieves the data associated with the default or unnamed value of a specified registry key. 
            The data must be a null-terminated string.
            Note  This function is provided only for compatibility with 16-bit versions of Windows. Applications should use the RegQueryValueEx function.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="lpData"></param>
            <param name="lpcbData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryValueW(System.IntPtr,System.String,System.Text.StringBuilder,System.Int32@)">
            amost same as RegQueryValueA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryValueExA(System.IntPtr,System.String,System.UInt32,System.UInt32@,System.Byte@,System.UInt32@)">
            <summary>
            Retrieves the type and data for the specified value name associated with an open registry key.
            Warning
            If the value being queried is a string (REG_SZ, REG_MULTI_SZ, and REG_EXPAND_SZ) the value 
            returned is NOT guaranteed to be null-terminated. 
            Use the RegGetValue function if you want to ensure returned string values are null-terminated. 
            </summary>
            <param name="hKey"></param>
            <param name="lpValueName"></param>
            <param name="lpReserved"></param>
            <param name="lpType"></param>
            <param name="lpData"></param>
            <param name="lpcbData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegQueryValueExW(System.IntPtr,System.String,System.UInt32,System.UInt32@,System.Byte@,System.UInt32@)">
            amost same as RegQueryValueExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegRenameKey(System.IntPtr,System.String,System.String)">
            <summary>
            Changes the name of the specified registry key.
            </summary>
            <param name="hKey">A handle to the key to be renamed.</param>
            <param name="lpValueName">The name of the subkey to be renamed.</param>
            <param name="lpNewKeyName">The new name of the key. The new name must not already exist.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegReplaceKeyA(System.IntPtr,System.String,System.String,System.String)">
            <summary>
            Replaces the file backing a registry key and all its subkeys with another file, 
            so that when the system is next started, the key and subkeys will have the values stored in the new file.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="lpNewFile"></param>
            <param name="lpOldFile"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegReplaceKeyW(System.IntPtr,System.String,System.String,System.String)">
            amost same as RegReplaceKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegRestoreKeyA(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Enums.RegRestoreFlags)">
            <summary>
            Reads the registry information in a specified file and copies it over the specified key. 
            This registry information may be in the form of a key and multiple levels of subkeys.
            
            Applications that back up or restore system state including system files 
            and registry hives should use the Volume Shadow Copy Service instead of the registry functions.
            </summary>
            <param name="hKey"></param>
            <param name="lpFile"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegRestoreKeyW(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Enums.RegRestoreFlags)">
            amost same as RegRestoreKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSaveKeyA(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES)">
            <summary>
            Saves the specified key and all of its subkeys and values to a new file, in the standard format.
            </summary>
            <param name="hKey"></param>
            <param name="lpFile"></param>
            <param name="lpSecurityAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSaveKeyW(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES)">
            amost same as RegSaveKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSaveKeyExA(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES,Ban3.Infrastructures.NativeLibs.Enums.REG_SAVE_FLAGS)">
            <summary>
            Saves the specified key and all of its subkeys and values to a registry file, in the specified format.
            </summary>
            <param name="hKey"></param>
            <param name="lpFile"></param>
            <param name="lpSecurityAttributes"></param>
            <param name="Flags"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSaveKeyExW(System.IntPtr,System.String,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES,Ban3.Infrastructures.NativeLibs.Enums.REG_SAVE_FLAGS)">
            amost same as RegSaveKeyExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSetKeyValueA(System.IntPtr,System.String,System.String,System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            Sets the data for the specified value in the specified registry key and subkey.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="lpValueName"></param>
            <param name="dwType"></param>
            <param name="lpData"></param>
            <param name="cbData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSetKeyValueW(System.IntPtr,System.String,System.String,System.UInt32,System.IntPtr,System.UInt32)">
            amost same as RegSetKeyValueA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSetValueA(System.IntPtr,System.String,System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            Sets the data for the default or unnamed value of a specified registry key. 
            The data must be a text string.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <param name="dwType"></param>
            <param name="lpData"></param>
            <param name="cbData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSetValueW(System.IntPtr,System.String,System.UInt32,System.IntPtr,System.UInt32)">
            amost same as RegSetValueA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSetValueExA(System.IntPtr,System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            Sets the data and type of a specified value under a registry key.
            </summary>
            <param name="hKey"></param>
            <param name="lpValueName"></param>
            <param name="Reserved"></param>
            <param name="dwType"></param>
            <param name="lpData"></param>
            <param name="cbData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegSetValueExW(System.IntPtr,System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32)">
            amost same as RegSetValueExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegUnLoadKeyA(System.IntPtr,System.String)">
            <summary>
            Unloads the specified registry key and its subkeys from the registry.
            </summary>
            <param name="hKey"></param>
            <param name="lpSubKey"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegUnLoadKeyW(System.IntPtr,System.String)">
            almost same as RegUnLoadKeyA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EtwGetTraitFromProviderTraits(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.ETW_PROVIDER_TRAIT_TYPE,System.IntPtr@,System.UInt16@)">
            <summary>
            Retrieves an individual trait from the ETW provider.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/nf-evntcons-etwgettraitfromprovidertraits
            </summary>
            <param name="ProviderTraits">The Provider traits.</param>
            <param name="TraitType">The ETW_PROVIDER_TRAIT_TYPE.</param>
            <param name="Trait">The Provider trait.</param>
            <param name="Size">The trait size.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.GetEventProcessorIndex(System.IntPtr)">
            <summary>
            Retrieves the Event Processor index.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/nf-evntcons-geteventprocessorindex
            </summary>
            <param name="EventRecord">The event record.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventAccessControl(Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.UInt32,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS,System.Byte)">
             <summary>
             Adds or modifies the permissions of the specified provider or session.
             https://learn.microsoft.com/en-us/windows/win32/api/evntcons/nf-evntcons-eventaccesscontrol
             </summary>
             <param name="Guid">
             GUID that uniquely identifies the provider or session whose permissions you want to add or modify.
             </param>
             <param name="Operation">
             Type of operation to perform, for example, add a DACL to the session's GUID or provider's GUID.
             </param>
             <param name="Sid">
             The security identifier (SID) of the user or group to whom you want to grant or deny permissions.
             </param>
             <param name="Rights">
            
             </param>
             <param name="AllowOrDeny"></param>
             <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventAccessQuery(Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.IntPtr,System.UInt32@)">
            <summary>
            Retrieves the permissions for the specified controller or provider.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/nf-evntcons-eventaccessquery
            </summary>
            <param name="Guid">GUID that uniquely identifies the provider or session.</param>
            <param name="Buffer">
            Application-allocated buffer that will contain the security descriptor of the controller or provider.
            </param>
            <param name="BufferSize">
            Size of the security descriptor buffer, in bytes.
            If the function succeeds, this parameter receives the size of the buffer used.
            If the buffer is too small, the function returns ERROR_MORE_DATA and this parameter receives the required buffer size.
            If the buffer size is zero on input, no data is returned in the buffer and this parameter receives the required buffer size.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventAccessRemove(Ban3.Infrastructures.NativeLibs.Structs.GUID@)">
            <summary>
            Removes the permissions defined in the registry for the specified provider or session.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/nf-evntcons-eventaccessremove
            </summary>
            <param name="Guid">
            GUID that uniquely identifies the provider or session whose permissions you want to remove from the registry.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventActivityIdControl(Ban3.Infrastructures.NativeLibs.Enums.EVENT_ACTIVITY_CTRLCODE,Ban3.Infrastructures.NativeLibs.Structs.GUID@)">
            <summary>
            Creates, queries, and sets activity identifiers for use in ETW events.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventactivityidcontrol
            </summary>
            <param name="ControlCode"></param>
            <param name="ActivityId">
            A pointer to a buffer that contains a 128-bit activity ID.
            This buffer may be read-from and/or written-to, depending on the value of the ControlCode parameter.
            </param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventEnabled(System.IntPtr,System.IntPtr)">
            <summary>
            Determines whether an event provider should generate a particular event based on the event's EVENT_DESCRIPTOR.
            Returns FALSE if ETW can quickly determine that no session is listening for a specified event from the given provider. Otherwise returns TRUE.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventenabled
            </summary>
            <param name="RegHandle">
            Registration handle of the provider.
            The handle comes from EventRegister.
            If RegHandle is NULL, EventEnabled will return FALSE.
            </param>
            <param name="EventDescriptor">
            EVENT_DESCRIPTOR that provides information that will be used to determine whether the event is enabled.
            This includes the event's Level (severity) and Keyword (categories).
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventProviderEnabled(System.IntPtr,System.Byte,System.UInt64)">
            <summary>
            Determines whether an event provider should generate a particular event based on the event's Level and Keyword.
            Returns FALSE if ETW can quickly determine that no session is listening for a specified event from the given provider. Otherwise returns TRUE.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventproviderenabled
            </summary>
            <param name="RegHandle">
            Registration handle of the provider. The handle comes from EventRegister.
            If RegHandle is NULL, EventProviderEnabled will return FALSE.
            </param>
            <param name="Level">
            An 8-bit number used to describe an event's severity or importance.
            See EVENT_DESCRIPTOR for more information about event level values.
            </param>
            <param name="Keyword">
            A 64-bit bitmask used to indicate an event's membership in a set of event categories.
            See EVENT_DESCRIPTOR for more information about event keyword values.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventRegister(Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Registers an ETW event provider, creating a handle that can be used to write ETW events.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventregister
            </summary>
            <param name="ProviderId">
            GUID that uniquely identifies the provider, sometimes called a control GUID.
            This must be a stable identifier so that trace controllers can use the GUID to subscribe to events from this provider.
            </param>
            <param name="EnableCallback">
            Optional EnableCallback that ETW will invoke when a trace session enables or disables this provider. Use NULL if no callback is needed.
            </param>
            <param name="CallbackContext">
            Optional context data that ETW will provide when invoking EnableCallback. Use NULL if no callback context is needed.
            </param>
            <param name="RegHandle">
            Receives the event provider registration handle. The handle is used in subsequent calls to provider APIs such as EventWrite, EventProviderEnabled, and EventRegister.
            Before your provider unloads or exits, free the provider registration handle by calling EventUnregister. A DLL that unloads without freeing all of the provider handles that it registered may cause the process to crash.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventSetInformation(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.EVENT_INFO_CLASS,System.IntPtr,System.UInt32)">
            <summary>
            Configures an ETW event provider.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventsetinformation
            </summary>
            <param name="RegHandle">Event provider registration handle. This is a handle returned by EventRegister.</param>
            <param name="InformationClass">EVENT_INFO_CLASS value that specifies the configuration operation to be performed on the event provider.</param>
            <param name="EventInformation">
            Pointer to a buffer that contains data to be used when configuring the event provider.
            The format of the data in this buffer depends on the value specified in the InformationClass parameter.
            This value may be NULL if InformationLength is zero.
            </param>
            <param name="InformationLength">The size (in bytes) of the data in the EventInformation buffer.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventUnregister(System.IntPtr)">
            <summary>
            Unregisters an ETW event provider.
            All event providers registered by a component must be unregistered before the component unloads.
            If a DLL registers an event provider and then unloads without unregistering the event provider, the process may crash.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventunregister
            </summary>
            <param name="RegHandle">Event provider registration handle returned by EventRegister.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventWrite(System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr)">
            <summary>
            Writes an ETW event that uses the current thread's activity ID.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventwrite
            </summary>
            <param name="RegHandle">
            Registration handle of the provider. The handle comes from EventRegister.
            The generated event will use the ProviderId associated with the handle.
            </param>
            <param name="EventDescriptor">
            EVENT_DESCRIPTOR with event information (metadata) including ID, Version, Level, Keyword, Channel, Opcode, and Task.
            </param>
            <param name="UserDataCount">Number of EVENT_DATA_DESCRIPTOR structures in UserData. The maximum number is 128.</param>
            <param name="UserData">
            An array of UserDataCount EVENT_DATA_DESCRIPTOR structures that describe the data to be included in the event.
            UserData may be NULL if UserDataCount is zero.
            Each EVENT_DATA_DESCRIPTOR describes one block of memory to be included in the event.
            The specified blocks will be concatenated in order with no padding or alignment to form the event content.
            If using manifest-based decoding, the event content must match the layout specified in the template associated with the event in the manifest.
            </param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventWriteEx(System.IntPtr,System.IntPtr,System.UInt64,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.GUID@,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.UInt32,System.IntPtr)">
            <summary>
            Writes an ETW event with an activity ID, an optional related activity ID, session filters, and special options.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventwriteex
            </summary>
            <param name="RegHandle"></param>
            <param name="EventDescriptor"></param>
            <param name="Filter"></param>
            <param name="Flags"></param>
            <param name="ActivityId"></param>
            <param name="RelatedActivityId"></param>
            <param name="UserDataCount"></param>
            <param name="UserData"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventWriteStartScenario">
            <summary>
            @ ntdll
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventWriteString(System.IntPtr,System.Byte,System.UInt64,System.String)">
            <summary>
            Writes an ETW event that contains a string as its data. This function should not be used.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventwritestring
            </summary>
            <param name="RegHandle"></param>
            <param name="Level"></param>
            <param name="Keyword"></param>
            <param name="String"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EventWriteTransfer(System.IntPtr,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID@,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.UInt32,System.IntPtr)">
            <summary>
            Writes an ETW event with an activity ID and an optional related activity ID.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/nf-evntprov-eventwritetransfer
            </summary>
            <param name="RegHandle"></param>
            <param name="EventDescriptor"></param>
            <param name="ActivityId"></param>
            <param name="RelatedActivityId"></param>
            <param name="UserDataCount"></param>
            <param name="UserData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.CloseTrace(System.IntPtr)">
            <summary>
            The CloseTrace function closes a trace processing session that was created with OpenTrace.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-closetrace
            </summary>
            <param name="TraceHandle">
            Handle to the trace processing session to close.
            The OpenTrace function returns this handle.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ControlTraceA(System.IntPtr,System.String,System.IntPtr,System.UInt32)">
            <summary>
            The ControlTrace function flushes, queries, updates, or stops the specified event tracing session.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-controltracea
            </summary>
            <param name="TraceHandle"></param>
            <param name="InstanceName"></param>
            <param name="Properties"></param>
            <param name="ControlCode"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ControlTraceW(System.IntPtr,System.String,System.IntPtr,System.UInt32)">
            almost same as ControlTraceA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.CreateTraceInstanceId(System.IntPtr,System.IntPtr@)">
            <summary>
            A RegisterTraceGuids-based ("Classic") event provider may use the CreateTraceInstanceId function to create a unique transaction identifier and map it to a registration handle.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-createtraceinstanceid
            </summary>
            <param name="RegHandle"></param>
            <param name="InstInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EnableTrace(System.UInt32,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.IntPtr)">
            <summary>
            A trace session controller calls EnableTrace to configure how an ETW event provider logs events to a trace session.
            This function is obsolete. The EnableTraceEx2 function supersedes this function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-enabletrace
            </summary>
            <param name="Enable"></param>
            <param name="EnableFlag"></param>
            <param name="EnableLevel"></param>
            <param name="ControlGuid"></param>
            <param name="TraceHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EnableTraceEx(Ban3.Infrastructures.NativeLibs.Structs.GUID@,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.IntPtr,System.UInt32,System.Byte,System.UInt64,System.UInt64,System.UInt32,System.IntPtr)">
            <summary>
            A trace session controller calls EnableTraceEx to configure how an ETW event provider logs events to a trace session.
            This function is obsolete. The EnableTraceEx2 function supersedes this function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-enabletraceex
            </summary>
            <param name="ProviderId"></param>
            <param name="SourceId"></param>
            <param name="TraceHandle"></param>
            <param name="IsEnabled"></param>
            <param name="Level"></param>
            <param name="MatchAnyKeyword"></param>
            <param name="MatchAllKeyword"></param>
            <param name="EnableProperty"></param>
            <param name="EnableFilterDesc"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EnableTraceEx2(System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.UInt32,System.Byte,System.UInt64,System.UInt64,System.UInt32,System.IntPtr)">
            <summary>
            A trace session controller calls EnableTraceEx2 to configure how an ETW event provider logs events to a trace session.
            This function supersedes the EnableTrace and EnableTraceEx functions.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-enabletraceex2
            </summary>
            <param name="TraceHandle"></param>
            <param name="ProviderId"></param>
            <param name="ControlCode"></param>
            <param name="Level"></param>
            <param name="MatchAnyKeyword"></param>
            <param name="MatchAllKeyword"></param>
            <param name="Timeout"></param>
            <param name="EnableParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EnumerateTraceGuids(System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The EnumerateTraceGuids function retrieves information about event trace providers that are currently running on the computer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-enumeratetraceguids
            </summary>
            <param name="GuidPropertiesArray"></param>
            <param name="PropertyArrayCount"></param>
            <param name="GuidCount"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.EnumerateTraceGuidsEx(System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr@,System.UInt32@,System.UInt32@)">
            <summary>
            Retrieves information about event trace providers that are currently running on the computer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-enumeratetraceguidsex
            </summary>
            <param name="TraceQueryInfoClass"></param>
            <param name="InBuffer"></param>
            <param name="InBufferSize"></param>
            <param name="OutBuffer"></param>
            <param name="OutBufferSize"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.FlushTraceA(System.IntPtr,System.String,System.IntPtr@)">
            <summary>
            The FlushTrace function causes an event tracing session to immediately deliver buffered events for the specified session. By default, an event tracing session will deliver events when an the buffer is full, the session's FlushTimer expires, or the session is closed.
            This function is obsolete. The ControlTrace function supersedes this function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-flushtracea
            </summary>
            <param name="TraceHandle"></param>
            <param name="InstanceName"></param>
            <param name="Properties"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.FlushTraceW(System.IntPtr,System.String,System.IntPtr@)">
            almost same as FlushTraceA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.GetTraceEnableFlags(System.IntPtr)">
            <summary>
            A RegisterTraceGuids-based ("Classic") event provider uses the GetTraceEnableFlags function to retrieve the enable flags specified by the trace controller to indicate which category of events to trace.
            Providers call this function from their ControlCallback function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-gettraceenableflags
            </summary>
            <param name="TraceHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.GetTraceEnableLevel(System.IntPtr)">
            <summary>
            A RegisterTraceGuids-based ("Classic") event provider uses the GetTraceEnableLevel function to retrieve the enable level specified by the trace controller to indicate which level of events to trace.
            Providers call this function from their ControlCallback function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-gettraceenablelevel
            </summary>
            <param name="TraceHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.GetTraceLoggerHandle(System.IntPtr)">
            <summary>
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-gettraceloggerhandle
            </summary>
            <param name="Buffer"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.OpenTraceA(System.IntPtr)">
            <summary>
            The OpenTrace function opens an ETW trace processing handle for consuming events from an ETW real-time trace session or an ETW log file.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-opentracea
            </summary>
            <param name="Logfile"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.OpenTraceW(System.IntPtr)">
            almost same as OpenTraceA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ProcessTrace(System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.FILETIME@,Ban3.Infrastructures.NativeLibs.Structs.FILETIME@)">
            <summary>
            The ProcessTrace function delivers events from one or more ETW trace processing sessions to the consumer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-processtrace
            </summary>
            <param name="HandleArray"></param>
            <param name="HandleCount"></param>
            <param name="StartTime"></param>
            <param name="EndTime"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.QueryAllTracesA(System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            The QueryAllTraces function retrieves the properties and statistics for all event tracing sessions for which the caller has permissions to query.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-queryalltracesa
            </summary>
            <param name="PropertyArray"></param>
            <param name="PropertyArrayCount"></param>
            <param name="LoggerCount"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.QueryAllTracesW(System.IntPtr@,System.UInt32,System.UInt32@)">
            almost same as QueryAllTracesA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.QueryTraceA(System.IntPtr,System.String,System.IntPtr)">
            <summary>
            The QueryTrace function retrieves the property settings and session statistics for the specified event tracing session.
            This function is obsolete. The ControlTrace function supersedes this function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-querytracea
            </summary>
            <param name="TraceHandle"></param>
            <param name="InstanceName"></param>
            <param name="Properties"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.QueryTraceW(System.IntPtr,System.String,System.IntPtr)">
            almost same as QueryTraceA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.QueryTraceProcessingHandle(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.ETW_PROCESS_HANDLE_INFO_TYPE,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            Retrieves information about an ETW trace processing session opened by OpenTrace.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-querytraceprocessinghandle
            </summary>
            <param name="ProcessingHandle"></param>
            <param name="InformationClass"></param>
            <param name="InBuffer"></param>
            <param name="InBufferSize"></param>
            <param name="OutBuffer"></param>
            <param name="OutBufferSize"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegisterTraceGuidsA(System.IntPtr,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.UInt32,System.IntPtr,System.String,System.String,System.IntPtr)">
            <summary>
            The RegisterTraceGuids function registers a Classic (Windows 2000-style) ETW event trace provider and the event trace classes that it uses to generate events.
            This function also specifies the callback function the system uses to enable and disable tracing from the provider.
            This function is obsolete. New code should use EventRegister to register a Windows Vista-style (Crimson) ETW event trace provider.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-registertraceguidsa
            </summary>
            <param name="RequestAddress"></param>
            <param name="RequestContext"></param>
            <param name="ControlGuid"></param>
            <param name="GuidCount"></param>
            <param name="TraceGuidReg"></param>
            <param name="MofImagePath"></param>
            <param name="MofResourceName"></param>
            <param name="RegistrationHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegisterTraceGuidsW(System.IntPtr,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.UInt32,System.IntPtr,System.String,System.String,System.IntPtr)">
            almost same as RegisterTraceGuidsA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RemoveTraceCallback(Ban3.Infrastructures.NativeLibs.Structs.GUID@)">
            <summary>
            Do not use this function. It may be unavailable in subsequent versions.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-removetracecallback
            </summary>
            <param name="pGuid"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.SetTraceCallback(Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.IntPtr)">
            <summary>
            Do not use this function; it may be unavailable in subsequent versions. Instead, filter for the event trace class in your EventRecordCallback function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-settracecallback
            </summary>
            <param name="pGuid"></param>
            <param name="EventCallback"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.StartTraceA(System.IntPtr@,System.String,System.IntPtr)">
            <summary>
            The StartTrace function registers and starts an event tracing session.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-starttracea
            </summary>
            <param name="TraceHandle"></param>
            <param name="InstanceName"></param>
            <param name="Properties"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.StartTraceW(System.IntPtr@,System.String,System.IntPtr)">
            almost same as StartTraceA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.StopTraceA(System.IntPtr,System.String,System.IntPtr)">
            <summary>
            The StopTrace function stops the specified event tracing session.
            This function is obsolete. The ControlTrace function supersedes this function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-stoptracea
            </summary>
            <param name="TraceHandle"></param>
            <param name="InstanceName"></param>
            <param name="Properties"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.StopTraceW(System.IntPtr,System.String,System.IntPtr)">
            almost same as StopTraceA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.TraceEvent(System.IntPtr,System.IntPtr)">
            <summary>
            A RegisterTraceGuids-based ("Classic") event provider uses the TraceEvent function to send a structured event to an event tracing session.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-traceevent
            </summary>
            <param name="TraceHandle"></param>
            <param name="EventTrace"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.TraceEventInstance(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            A RegisterTraceGuids-based ("Classic") event provider uses the TraceEventInstance function to send a structured event to an event tracing session with an instance identifier.
            The event uses an instance identifier to associate the event with a transaction. This function may also be used to trace hierarchical relationships between related events.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-traceeventinstance
            </summary>
            <param name="TraceHandle"></param>
            <param name="EventTrace"></param>
            <param name="InstInfo"></param>
            <param name="ParentInstInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.TraceMessageVa(System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.UInt16,System.IntPtr)">
            <summary>
            A RegisterTraceGuids-based ("Classic") event provider uses the TraceMessageVa function to send a message-based (TMF-based WPP) event to an event tracing session using va_list parameters.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-tracemessageva
            </summary>
            <param name="LoggerHandle"></param>
            <param name="MessageFlags"></param>
            <param name="MessageGuid"></param>
            <param name="MessageNumber"></param>
            <param name="MessageArgList"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.TraceQueryInformation(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.TRACE_QUERY_INFO_CLASS,System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            The TraceQueryInformation function provides information about an event tracing session.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-tracequeryinformation
            </summary>
            <param name="SessionHandle"></param>
            <param name="InformationClass"></param>
            <param name="TraceInformation"></param>
            <param name="InformationLength"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.TraceQueryInformation(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.TRACE_QUERY_INFO_CLASS,System.IntPtr,System.UInt32)">
            <summary>
            The TraceSetInformation function configures event tracing session settings.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-tracesetinformation
            </summary>
            <param name="SessionHandle"></param>
            <param name="InformationClass"></param>
            <param name="TraceInformation"></param>
            <param name="InformationLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.UnregisterTraceGuids(System.IntPtr)">
            <summary>
            The UnregisterTraceGuids function unregisters a Classic (Windows 2000-style) ETW event trace provider that was registered using RegisterTraceGuids.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-unregistertraceguids
            </summary>
            <param name="RegistrationHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.UpdateTraceA(System.IntPtr,System.String,System.IntPtr)">
            <summary>
            The UpdateTrace function updates the property setting of the specified event tracing session.
            This function is obsolete. The ControlTrace function supersedes this function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/nf-evntrace-updatetracea
            </summary>
            <param name="TraceHandle"></param>
            <param name="InstanceName"></param>
            <param name="Properties"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.UpdateTraceW(System.IntPtr,System.String,System.IntPtr)">
            almost same as StopTraceA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.CveEventWrite(System.String,System.String)">
            <summary>
            A tracing function for publishing events when an attempted security vulnerability exploit is detected in your user-mode application.
            https://learn.microsoft.com/en-us/windows/win32/api/securitybaseapi/nf-securitybaseapi-cveeventwrite
            </summary>
            <param name="CveId">
            A pointer to the CVE ID associated with the vulnerability for which this event is being raised.
            </param>
            <param name="AdditionalDetails">
            A pointer to a string giving additional details that the event producer may want to provide to the consumer of this event.
            </param>
            <returns>
            Returns ERROR_SUCCESS if successful or one of the following values on error.
            ERROR_INVALID_PARAMETER
            ERROR_ARITHMETIC_OVERFLOW
            ERROR_MORE_DATA
            ERROR_NOT_ENOUGH_MEMORY
            STATUS_LOG_FILE_FULL
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.OperationEnd(Ban3.Infrastructures.NativeLibs.Structs.OPERATION_END_PARAMETERS)">
            <summary>
            Notifies the system that the application is about to end an operation
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-operationend
            </summary>
            <param name="OperationStartParams">
            An _OPERATION_END_PARAMETERS structure that specifies VERSION, OPERATION_ID and FLAGS.
            </param>
            <returns>
            TRUE for all valid parameters and FALSE otherwise. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.OperationStart(Ban3.Infrastructures.NativeLibs.Structs.OPERATION_START_PARAMETERS)">
            <summary>
            Notifies the system that the application is about to start an operation.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-operationstart
            </summary>
            <param name="OperationStartParams">
            An _OPERATION_START_PARAMETERS structure that specifies VERSION, OPERATION_ID and FLAGS.
            </param>
            <returns>
            TRUE for all valid parameters and FALSE otherwise. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildExplicitAccessWithNameA(System.IntPtr@,System.String,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MODE,System.UInt32)">
            <summary>
            The BuildExplicitAccessWithName function initializes an EXPLICIT_ACCESS structure with data specified by the caller. The trustee is identified by a name string.
            https://learn.microsoft.com/en-us/windows/win32/api/aclapi/nf-aclapi-buildexplicitaccesswithnamea
            </summary>
            <param name="pExplicitAccess"></param>
            <param name="pTrusteeName"></param>
            <param name="AccessPermissions"></param>
            <param name="AccessMode"></param>
            <param name="Inheritance"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildExplicitAccessWithNameW(System.IntPtr@,System.String,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MODE,System.UInt32)">
            almost same as BuildExplicitAccessWithNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildSecurityDescriptorA(System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr,System.UInt32@,System.IntPtr@)">
            <summary>
            The BuildSecurityDescriptor function allocates and initializes a new security descriptor.
            </summary>
            <param name="pOwner"></param>
            <param name="pGroup"></param>
            <param name="cCountOfAccessEntries"></param>
            <param name="pListOfAccessEntries"></param>
            <param name="cCountOfAuditEntries"></param>
            <param name="pListOfAuditEntries"></param>
            <param name="pOldSD"></param>
            <param name="pSizeNewSD"></param>
            <param name="pNewSD"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildSecurityDescriptorW(System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr,System.UInt32@,System.IntPtr@)">
            almost same as BuildSecurityDescriptorA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildTrusteeWithNameA(System.IntPtr@,System.String)">
            <summary>
            The BuildTrusteeWithName function initializes a TRUSTEE structure.
            The caller specifies the trustee name.
            The function sets other members of the structure to default values.
            https://learn.microsoft.com/en-us/windows/win32/api/aclapi/nf-aclapi-buildtrusteewithnamea
            </summary>
            <param name="pTrustee"></param>
            <param name="pName"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildTrusteeWithNameW(System.IntPtr@,System.String)">
            almost same as BuildTrusteeWithNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildTrusteeWithObjectsAndNameA(System.IntPtr@,System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.SE_OBJECT_TYPE,System.String,System.String,System.String)">
            <summary>
            The BuildTrusteeWithObjectsAndName function initializes a TRUSTEE structure
            with the object-specific access control entry (ACE) information and initializes the remaining members of the structure to default values.
            The caller also specifies the name of the trustee.
            https://learn.microsoft.com/en-us/windows/win32/api/aclapi/nf-aclapi-buildtrusteewithobjectsandnamea
            </summary>
            <param name="pTrustee"></param>
            <param name="pObjName"></param>
            <param name="ObjectType"></param>
            <param name="ObjectTypeName"></param>
            <param name="InheritedObjectTypeName"></param>
            <param name="Name"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildTrusteeWithObjectsAndNameW(System.IntPtr@,System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.SE_OBJECT_TYPE,System.String,System.String,System.String)">
            almost same as BuildTrusteeWithObjectsAndNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildTrusteeWithObjectsAndSidA(System.IntPtr@,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID@,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.IntPtr)">
            <summary>
            The BuildTrusteeWithObjectsAndSid function initializes a TRUSTEE structure
            with the object-specific access control entry (ACE) information and initializes the remaining members of the structure to default values.
            The caller also specifies the SID structure that represents the security identifier of the trustee.
            https://learn.microsoft.com/en-us/windows/win32/api/aclapi/nf-aclapi-buildtrusteewithobjectsandsida
            </summary>
            <param name="pTrustee">
            A pointer to a TRUSTEE structure to initialize. The BuildTrusteeWithObjectsAndSid function does not allocate any memory.
            If this parameter is NULL or a pointer that is not valid, the results are undefined.
            </param>
            <param name="pObjSid">
            A pointer to an OBJECTS_AND_SID structure that contains information about the trustee and the securable object.
            </param>
            <param name="pObjectGuid">
            A pointer to a GUID structure that describes the ObjectType GUID to be added to the TRUSTEE structure.
            </param>
            <param name="pInheritedObjectGuid">
            A pointer to a GUID structure that describes the InheritedObjectType GUID to be added to the TRUSTEE structure.
            </param>
            <param name="pSid">
            A pointer to a SID structure that identifies the trustee.
            </param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildTrusteeWithObjectsAndSidW(System.IntPtr@,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID@,Ban3.Infrastructures.NativeLibs.Structs.GUID@,System.IntPtr)">
            almost same as BuildTrusteeWithObjectsAndSidA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildTrusteeWithSidA(System.IntPtr@,System.IntPtr)">
            <summary>
            The BuildTrusteeWithSid function initializes a TRUSTEE structure.
            The caller specifies the security identifier (SID) of the trustee.
            The function sets other members of the structure to default values and does not look up the name associated with the SID.
            https://learn.microsoft.com/en-us/windows/win32/api/aclapi/nf-aclapi-buildtrusteewithsida
            </summary>
            <param name="pTrustee"></param>
            <param name="pSid"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BuildTrusteeWithSidW(System.IntPtr@,System.IntPtr)">
            almost same as BuildTrusteeWithSidA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ConvertSecurityDescriptorToStringSecurityDescriptorA(System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION,System.Text.StringBuilder,System.UInt64@)">
            <summary>
            The ConvertSecurityDescriptorToStringSecurityDescriptor function converts a security descriptor to a string format.
            https://learn.microsoft.com/en-us/windows/win32/api/sddl/nf-sddl-convertsecuritydescriptortostringsecuritydescriptora
            </summary>
            <param name="SecurityDescriptor"></param>
            <param name="RequestedStringSDRevision"></param>
            <param name="SecurityInformation"></param>
            <param name="StringSecurityDescriptor">
            [out] LPSTR *StringSecurityDescriptor,
            </param>
            <param name="StringSecurityDescriptorLen"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ConvertSecurityDescriptorToStringSecurityDescriptorW(System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION,System.Text.StringBuilder,System.UInt64@)">
            almost same as ConvertSecurityDescriptorToStringSecurityDescriptorA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ConvertSidToStringSidA(System.IntPtr,System.Text.StringBuilder)">
            <summary>
            The ConvertSidToStringSid function converts a security identifier (SID) to a string format suitable for display, storage, or transmission.
            https://learn.microsoft.com/en-us/windows/win32/api/sddl/nf-sddl-convertsidtostringsida
            </summary>
            <param name="Sid">A pointer to the SID structure to be converted.</param>
            <param name="StringSid">
            A pointer to a variable that receives a pointer to a null-terminated SID string.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ConvertSidToStringSidW(System.IntPtr,System.Text.StringBuilder)">
            amost same as ConvertSidToStringSidA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ConvertStringSecurityDescriptorToSecurityDescriptorA(System.Text.StringBuilder,System.UInt32,System.IntPtr@,System.UInt64@)">
            <summary>
            
            
            </summary>
            <param name="StringSecurityDescriptor"></param>
            <param name="StringSDRevision"></param>
            <param name="SecurityDescriptor"></param>
            <param name="SecurityDescriptorSize"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.AccessCheckAndAuditAlarmA(System.String,System.IntPtr,System.Text.StringBuilder,System.Text.StringBuilder,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING@,System.Boolean,System.UInt32@,System.Int32@,System.Int32@)">
            <summary>
            The AccessCheckAndAuditAlarm function determines whether a security descriptor grants a specified set of access rights to the client being impersonated by the calling thread.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-accesscheckandauditalarma
            </summary>
            <param name="SubsystemName"></param>
            <param name="HandleId"></param>
            <param name="ObjectTypeName"></param>
            <param name="ObjectName"></param>
            <param name="SecurityDescriptor"></param>
            <param name="DesiredAccess"></param>
            <param name="GenericMapping"></param>
            <param name="ObjectCreation"></param>
            <param name="GrantedAccess"></param>
            <param name="AccessStatus"></param>
            <param name="pfGenerateOnClose"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.AccessCheckByTypeAndAuditAlarmA(System.String,System.IntPtr,System.String,System.String,System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.AUDIT_EVENT_TYPE,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.OBJECT_TYPE_LIST@,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING@,System.Boolean,System.UInt32@,System.Int32@,System.Int32@)">
            <summary>
            The AccessCheckByTypeAndAuditAlarm function determines whether a security descriptor grants a specified set of access rights to the client being impersonated by the calling thread.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-accesscheckbytypeandauditalarma
            </summary>
            <param name="SubsystemName"></param>
            <param name="HandleId"></param>
            <param name="ObjectTypeName"></param>
            <param name="ObjectName"></param>
            <param name="SecurityDescriptor"></param>
            <param name="PrincipalSelfSid"></param>
            <param name="DesiredAccess"></param>
            <param name="AuditType"></param>
            <param name="Flags"></param>
            <param name="ObjectTypeList"></param>
            <param name="ObjectTypeListLength"></param>
            <param name="GenericMapping"></param>
            <param name="ObjectCreation"></param>
            <param name="GrantedAccess"></param>
            <param name="AccessStatus"></param>
            <param name="pfGenerateOnClose"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.AccessCheckByTypeResultListAndAuditAlarmA(System.String,System.IntPtr,System.String,System.String,System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.AUDIT_EVENT_TYPE,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.OBJECT_TYPE_LIST@,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING@,System.Boolean,System.UInt32@,System.UInt32@,System.Int32@)">
            <summary>
            The AccessCheckByTypeResultListAndAuditAlarm function determines whether a security descriptor grants a specified set of access rights to the client being impersonated by the calling thread.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-accesscheckbytyperesultlistandauditalarma
            </summary>
            <param name="SubsystemName"></param>
            <param name="HandleId"></param>
            <param name="ObjectTypeName"></param>
            <param name="ObjectName"></param>
            <param name="SecurityDescriptor"></param>
            <param name="PrincipalSelfSid"></param>
            <param name="DesiredAccess"></param>
            <param name="AuditType"></param>
            <param name="Flags"></param>
            <param name="ObjectTypeList"></param>
            <param name="ObjectTypeListLength"></param>
            <param name="GenericMapping"></param>
            <param name="ObjectCreation"></param>
            <param name="GrantedAccess"></param>
            <param name="AccessStatusList"></param>
            <param name="pfGenerateOnClose"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.AccessCheckByTypeResultListAndAuditAlarmByHandleA(System.String,System.IntPtr,System.IntPtr,System.String,System.String,System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.AUDIT_EVENT_TYPE,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.OBJECT_TYPE_LIST@,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING@,System.Boolean,System.UInt32@,System.UInt32@,System.Int32@)">
            <summary>
            The AccessCheckByTypeResultListAndAuditAlarmByHandle function determines whether a security descriptor grants a specified set of access rights to the client that the calling thread is impersonating.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-accesscheckbytyperesultlistandauditalarmbyhandlea
            </summary>
            <param name="SubsystemName"></param>
            <param name="HandleId"></param>
            <param name="ClientToken"></param>
            <param name="ObjectTypeName"></param>
            <param name="ObjectName"></param>
            <param name="SecurityDescriptor"></param>
            <param name="PrincipalSelfSid"></param>
            <param name="DesiredAccess"></param>
            <param name="AuditType"></param>
            <param name="Flags"></param>
            <param name="ObjectTypeList"></param>
            <param name="ObjectTypeListLength"></param>
            <param name="GenericMapping"></param>
            <param name="ObjectCreation"></param>
            <param name="GrantedAccess"></param>
            <param name="AccessStatusList"></param>
            <param name="pfGenerateOnClose"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.AddConditionalAce(Ban3.Infrastructures.NativeLibs.Structs.ACL@,System.UInt32,System.UInt32,System.Byte,System.UInt32,System.IntPtr,System.IntPtr,System.UInt32@)">
            <summary>
            The AddConditionalAce function adds a conditional access control entry (ACE) to the specified access control list (ACL).
            A conditional ACE specifies a logical condition that is evaluated during access checks.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-addconditionalace
            </summary>
            <param name="pAcl"></param>
            <param name="dwAceRevision"></param>
            <param name="AceFlags"></param>
            <param name="AceType"></param>
            <param name="AccessMask"></param>
            <param name="pSid"></param>
            <param name="ConditionStr"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.GetFileSecurityA(System.String,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The GetFileSecurity function obtains specified information about the security of a file or directory.
            The information obtained is constrained by the caller's access rights and privileges.
            The GetNamedSecurityInfo function provides functionality similar to GetFileSecurity for files as well as other types of objects.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getfilesecuritya
            </summary>
            <param name="lpFileName"></param>
            <param name="RequestedInformation"></param>
            <param name="pSecurityDescriptor"></param>
            <param name="nLength"></param>
            <param name="lpnLengthNeeded"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LogonUserA(System.String,System.String,System.String,System.UInt32,System.UInt32,System.IntPtr@)">
            <summary>
            The LogonUser function attempts to log a user on to the local computer.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-logonusera
            </summary>
            <param name="lpszUsername"></param>
            <param name="lpszDomain"></param>
            <param name="lpszPassword"></param>
            <param name="dwLogonType"></param>
            <param name="dwLogonProvider"></param>
            <param name="phToken"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LogonUserW(System.String,System.String,System.String,System.UInt32,System.UInt32,System.IntPtr@)">
            almost same as LogonUserA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LogonUserExA(System.String,System.String,System.String,System.UInt32,System.UInt32,System.IntPtr@,System.IntPtr@,System.IntPtr@,System.UInt32@,Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS@)">
            <summary>
            The LogonUserEx function attempts to log a user on to the local computer.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-logonuserexa
            </summary>
            <param name="lpszUsername"></param>
            <param name="lpszDomain"></param>
            <param name="lpszPassword"></param>
            <param name="dwLogonType"></param>
            <param name="dwLogonProvider"></param>
            <param name="phToken"></param>
            <param name="ppLogonSid"></param>
            <param name="ppProfileBuffer"></param>
            <param name="pdwProfileLength"></param>
            <param name="pQuotaLimits"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LogonUserExW(System.String,System.String,System.String,System.UInt32,System.UInt32,System.IntPtr@,System.IntPtr@,System.IntPtr@,System.UInt32@,Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS@)">
            almost same as LogonUserExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupAccountNameA(System.String,System.String,System.IntPtr,System.UInt32@,System.Text.StringBuilder,System.UInt32@,Ban3.Infrastructures.NativeLibs.Enums.SID_NAME_USE@)">
            <summary>
            The LookupAccountName function accepts the name of a system and an account as input.
            It retrieves a security identifier (SID) for the account and the name of the domain on which the account was found.
            The LsaLookupNames function can also retrieve computer accounts.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lookupaccountnamea
            </summary>
            <param name="lpSystemName"></param>
            <param name="lpAccountName"></param>
            <param name="Sid"></param>
            <param name="cbSid"></param>
            <param name="ReferencedDomainName"></param>
            <param name="cchReferencedDomainName"></param>
            <param name="peUse"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupAccountNameW(System.String,System.String,System.IntPtr,System.UInt32@,System.Text.StringBuilder,System.UInt32@,Ban3.Infrastructures.NativeLibs.Enums.SID_NAME_USE@)">
            almost same as LookupAccountNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupAccountSidA(System.String,System.IntPtr,System.Text.StringBuilder,System.UInt32@,System.Text.StringBuilder,System.UInt32@,Ban3.Infrastructures.NativeLibs.Enums.SID_NAME_USE@)">
            <summary>
            The LookupAccountSid function accepts a security identifier (SID) as input.
            It retrieves the name of the account for this SID and the name of the first domain on which this SID is found.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lookupaccountsida
            </summary>
            <param name="lpSystemName"></param>
            <param name="Sid"></param>
            <param name="Name"></param>
            <param name="cchName"></param>
            <param name="ReferencedDomainName"></param>
            <param name="cchReferencedDomainName"></param>
            <param name="peUse"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupAccountSidW(System.String,System.IntPtr,System.Text.StringBuilder,System.UInt32@,System.Text.StringBuilder,System.UInt32@,Ban3.Infrastructures.NativeLibs.Enums.SID_NAME_USE@)">
            almost same as LookupAccountSidA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupPrivilegeDisplayNameA(System.String,System.String,System.Text.StringBuilder,System.UInt32@,System.UInt32@)">
            <summary>
            The LookupPrivilegeDisplayName function retrieves the display name that represents a specified privilege.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lookupprivilegedisplaynamea
            </summary>
            <param name="lpSystemName"></param>
            <param name="lpName"></param>
            <param name="lpDisplayName"></param>
            <param name="cchDisplayName"></param>
            <param name="lpLanguageId"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupPrivilegeDisplayNameW(System.String,System.String,System.Text.StringBuilder,System.UInt32@,System.UInt32@)">
            almost same as LookupPrivilegeDisplayNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupPrivilegeNameA(System.String,Ban3.Infrastructures.NativeLibs.Structs.LUID@,System.Text.StringBuilder,System.UInt32@)">
            <summary>
            The LookupPrivilegeName function retrieves the name that corresponds to the privilege represented on a specific system by a specified locally unique identifier (LUID).
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lookupprivilegenamea
            </summary>
            <param name="lpSystemName"></param>
            <param name="lpLuid"></param>
            <param name="lpName"></param>
            <param name="cchName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupPrivilegeNameW(System.String,Ban3.Infrastructures.NativeLibs.Structs.LUID@,System.Text.StringBuilder,System.UInt32@)">
            almost same as LookupPrivilegeNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupPrivilegeValueA(System.String,System.String,Ban3.Infrastructures.NativeLibs.Structs.LUID@)">
            <summary>
            The LookupPrivilegeValue function retrieves the locally unique identifier (LUID) used on a specified system to locally represent the specified privilege name.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-lookupprivilegevaluea
            </summary>
            <param name="lpSystemName"></param>
            <param name="lpName"></param>
            <param name="lpLuid"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.LookupPrivilegeValueW(System.String,System.String,Ban3.Infrastructures.NativeLibs.Structs.LUID@)">
            almost same as LookupPrivilegeValueA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ObjectCloseAuditAlarmA(System.String,System.IntPtr,System.Boolean)">
            <summary>
            The ObjectCloseAuditAlarm function generates an audit message in the security event log when a handle to a private object is deleted.
            Alarms are not currently supported.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-objectcloseauditalarma
            </summary>
            <param name="SubsystemName"></param>
            <param name="HandleId"></param>
            <param name="GenerateOnClose"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ObjectDeleteAuditAlarmA(System.String,System.IntPtr,System.Boolean)">
            <summary>
            The ObjectDeleteAuditAlarm function generates audit messages when an object is deleted.
            Alarms are not currently supported.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-objectdeleteauditalarma
            </summary>
            <param name="SubsystemName"></param>
            <param name="HandleId"></param>
            <param name="GenerateOnClose"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ObjectOpenAuditAlarmA(System.String,System.IntPtr,System.Text.StringBuilder,System.Text.StringBuilder,System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.PRIVILEGE_SET@,System.Boolean,System.Boolean,System.Int32@)">
            <summary>
            The ObjectOpenAuditAlarm function generates audit messages when a client application attempts to gain access to an object or to create a new one.
            Alarms are not currently supported.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-objectopenauditalarma
            </summary>
            <param name="SubsystemName"></param>
            <param name="HandleId"></param>
            <param name="ObjectTypeName"></param>
            <param name="ObjectName"></param>
            <param name="pSecurityDescriptor"></param>
            <param name="ClientToken"></param>
            <param name="DesiredAccess"></param>
            <param name="GrantedAccess"></param>
            <param name="Privileges"></param>
            <param name="ObjectCreation"></param>
            <param name="AccessGranted"></param>
            <param name="GenerateOnClose"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ObjectPrivilegeAuditAlarmA(System.String,System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.PRIVILEGE_SET@,System.Boolean)">
            <summary>
            The ObjectPrivilegeAuditAlarm function generates an audit message in the security event log.
            A protected server can use this function to log attempts by a client to use a specified set of privileges with an open handle to a private object.
            Alarms are not currently supported.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-objectprivilegeauditalarma
            </summary>
            <param name="SubsystemName"></param>
            <param name="HandleId"></param>
            <param name="ClientToken"></param>
            <param name="DesiredAccess"></param>
            <param name="Privileges"></param>
            <param name="AccessGranted"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.PrivilegedServiceAuditAlarmA(System.String,System.String,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.PRIVILEGE_SET@,System.Boolean)">
            <summary>
            The PrivilegedServiceAuditAlarm function generates an audit message in the security event log.
            A protected server can use this function to log attempts by a client to use a specified set of privileges.
            Alarms are not currently supported.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-privilegedserviceauditalarma
            </summary>
            <param name="SubsystemName"></param>
            <param name="ServiceName"></param>
            <param name="ClientToken"></param>
            <param name="Privileges"></param>
            <param name="AccessGranted"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.SetFileSecurityA(System.String,System.UInt32,System.IntPtr)">
            <summary>
            The SetFileSecurity function sets the security of a file or directory object.
            This function is obsolete. Use the SetNamedSecurityInfo function instead.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-setfilesecuritya
            </summary>
            <param name="lpFileName"></param>
            <param name="SecurityInformation"></param>
            <param name="pSecurityDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BackupEventLogA(System.IntPtr,System.String)">
            <summary>
            Saves the specified event log to a backup file. The function does not clear the event log.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-backupeventloga
            </summary>
            <param name="hEventLog">
            A handle to the open event log. The OpenEventLog function returns this handle.
            </param>
            <param name="lpBackupFileName">
            The absolute or relative path of the backup file.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.BackupEventLogW(System.IntPtr,System.String)">
            almost same as BackupEventLogA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ClearEventLogA(System.IntPtr,System.String)">
            <summary>
            Clears the specified event log, and optionally saves the current copy of the log to a backup file.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-cleareventloga
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ClearEventLogW(System.IntPtr,System.String)">
            almost same as ClearEventLogA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.CloseEventLog(System.IntPtr@)">
            <summary>
            Closes the specified event log.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-closeeventlog
            </summary>
            <param name="hEventLog"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.GetEventLogInformation(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            Retrieves information about the specified event log.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-geteventloginformation
            </summary>
            <param name="hEventLog">
            A handle to the event log. The OpenEventLog or RegisterEventSource function returns this handle.
            </param>
            <param name="dwInfoLevel"></param>
            <param name="lpBuffer"></param>
            <param name="cbBufSize"></param>
            <param name="pcbBytesNeeded"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.GetNumberOfEventLogRecords(System.IntPtr,System.UInt32@)">
            <summary>
            Retrieves the number of records in the specified event log.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getnumberofeventlogrecords
            </summary>
            <param name="hEventLog">
            A handle to the open event log. 
            The OpenEventLog or OpenBackupEventLog function returns this handle.
            </param>
            <param name="NumberOfRecords"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.GetOldestEventLogRecord(System.IntPtr,System.UInt32@)">
            <summary>
            Retrieves the absolute record number of the oldest record in the specified event log.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-getoldesteventlogrecord
            </summary>
            <param name="hEventLog">
            A handle to the open event log. 
            The OpenEventLog or OpenBackupEventLog function returns this handle.
            </param>
            <param name="OldestRecord"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.NotifyChangeEventLog(System.IntPtr,System.IntPtr)">
            <summary>
            Enables an application to receive notification 
            when an event is written to the specified event log. 
            When the event is written to the log, 
            the specified event object is set to the signaled state.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-notifychangeeventlog
            </summary>
            <param name="hEventLog"></param>
            <param name="hEvent">
            A handle to a manual-reset or auto-reset event object. 
            Use the CreateEvent function to create the event object.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.OpenBackupEventLogA(System.String,System.String)">
            <summary>
            Opens a handle to a backup event log created by the BackupEventLog function.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-openbackupeventloga
            </summary>
            <param name="lpUNCServerName"></param>
            <param name="lpFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.OpenBackupEventLogW(System.String,System.String)">
            almost same as OpenBackupEventLogA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.OpenEventLogA(System.String,System.String)">
            <summary>
            Opens a handle to the specified event log.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-openeventloga
            </summary>
            <param name="lpUNCServerName">
            The Universal Naming Convention (UNC) name of the remote server on which the event log is to be opened.
            If this parameter is NULL, the local computer is used.
            </param>
            <param name="lpSourceName">
            The name of the log.
            If you specify a custom log and it cannot be found, the event logging service opens the Application log;
            however, there will be no associated message or category string file.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.OpenEventLogW(System.String,System.String)">
            almost same as OpenEventLogA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ReadEventLogA(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.READ_EVENTLOG_FLAGS,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,System.UInt32@)">
            <summary>
            Reads the specified number of entries from the specified event log.
            The function can be used to read log entries in chronological or reverse chronological order.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-readeventloga
            </summary>
            <param name="hEventLog"></param>
            <param name="dwReadFlags"></param>
            <param name="dwRecordOffset"></param>
            <param name="lpBuffer"></param>
            <param name="nNumberOfBytesToRead"></param>
            <param name="pnBytesRead"></param>
            <param name="pnMinNumberOfBytesNeeded"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.ReadEventLogW(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.READ_EVENTLOG_FLAGS,System.UInt32,System.IntPtr,System.UInt32,System.UInt32@,System.UInt32@)">
            almost same as ReadEventLogA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegisterEventSourceA(System.String,System.String)">
            <summary>
            Retrieves a registered handle to the specified event log.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-registereventsourcea
            </summary>
            <param name="lpUNCServerName"></param>
            <param name="lpSourceName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.RegisterEventSourceW(System.String,System.String)">
            almost same as RegisterEventSourceA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.AbortSystemShutdownA(System.Text.StringBuilder)">
            <summary>
            Stops a system shutdown that has been initiated.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-abortsystemshutdowna
            </summary>
            <param name="lpMachineName">
            The network name of the computer where the shutdown is to be stopped. 
            If lpMachineName is NULL or an empty string, the function stops the shutdown on the local computer.
            </param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.AbortSystemShutdownW(System.Text.StringBuilder)">
            almost same as AbortSystemShutdownA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.InitiateShutdownA(System.Text.StringBuilder,System.Text.StringBuilder,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Initiates a shutdown and restart of the specified computer, 
            and restarts any applications that have been registered for restart.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-initiateshutdowna
            </summary>
            <param name="lpMachineName">The name of the computer to be shut down. If the value of this parameter is NULL, the local computer is shut down.</param>
            <param name="lpMessage">The message to be displayed in the interactive shutdown dialog box.</param>
            <param name="dwGracePeriod">
            The number of seconds to wait before shutting down the computer. 
            If the value of this parameter is zero, the computer is shut down immediately. 
            This value is limited to MAX_SHUTDOWN_TIMEOUT.
            If the value of this parameter is greater than zero, 
            and the dwShutdownFlags parameter specifies the flag SHUTDOWN_GRACE_OVERRIDE, 
            the function fails and returns the error code ERROR_BAD_ARGUMENTS.
            </param>
            <param name="dwShutdownFlags">
            One or more bit flags that specify options for the shutdown. The following values are defined.
            </param>
            <param name="dwReason"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.InitiateShutdownW(System.Text.StringBuilder,System.Text.StringBuilder,System.UInt32,System.UInt32,System.UInt32)">
            almost same as InitiateShutdownA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.InitiateSystemShutdownA(System.Text.StringBuilder,System.Text.StringBuilder,System.UInt32,System.Boolean,System.Boolean)">
            <summary>
            Initiates a shutdown and optional restart of the specified computer.
            To record a reason for the shutdown in the event log, call the InitiateSystemShutdownEx function.
            https://learn.microsoft.com/en-us/windows/win32/api/winreg/nf-winreg-initiatesystemshutdowna
            </summary>
            <param name="lpMachineName">The network name of the computer to be shut down. If lpMachineName is NULL or an empty string, the function shuts down the local computer.</param>
            <param name="lpMessage">
            The message to be displayed in the shutdown dialog box. 
            This parameter can be NULL if no message is required.
            Windows Server 2003 and Windows XP:  This string is also stored as a comment in the event log entry.
            Windows Server 2003 and Windows XP with SP1:  The string is limited to 3072 TCHARs.
            </param>
            <param name="dwTimeout">
            The length of time that the shutdown dialog box should be displayed, in seconds. 
            While this dialog box is displayed, the shutdown can be stopped by the AbortSystemShutdown function.
            If dwTimeout is not zero, InitiateSystemShutdown displays a dialog box on the specified computer.
            If dwTimeout is zero, the computer shuts down without displaying the dialog box, and the shutdown cannot be stopped by AbortSystemShutdown.
            </param>
            <param name="bForceAppsClosed">
            If this parameter is TRUE, applications with unsaved changes are to be forcibly closed. Note that this can result in data loss.
            If this parameter is FALSE, the system displays a dialog box instructing the user to close the applications.
            </param>
            <param name="bRebootAfterShutdown">
            If this parameter is TRUE, the computer is to restart immediately after shutting down. 
            If this parameter is FALSE, the system flushes all caches to disk and safely powers down the system.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.InitiateSystemShutdownW(System.Text.StringBuilder,System.Text.StringBuilder,System.UInt32,System.Boolean,System.Boolean)">
            almost same as InitiateSystemShutdownA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.InitiateSystemShutdownExA(System.Text.StringBuilder,System.Text.StringBuilder,System.UInt32,System.Boolean,System.Boolean,System.UInt32)">
            <summary>
            Initiates a shutdown and optional restart of the specified computer, 
            and optionally records the reason for the shutdown.
            </summary>
            <param name="lpMachineName">The network name of the computer to be shut down. If lpMachineName is NULL or an empty string, the function shuts down the local computer.</param>
            <param name="lpMessage">The message to be displayed in the shutdown dialog box. This parameter can be NULL if no message is required.</param>
            <param name="dwTimeout">The length of time that the shutdown dialog box should be displayed, in seconds.</param>
            <param name="bForceAppsClosed">
            If this parameter is TRUE, applications with unsaved changes are to be forcibly closed. 
            If this parameter is FALSE, the system displays a dialog box instructing the user to close the applications.
            </param>
            <param name="bRebootAfterShutdown">
            If this parameter is TRUE, the computer is to restart immediately after shutting down. 
            If this parameter is FALSE, the system flushes all caches to disk and safely powers down the system.
            </param>
            <param name="dwReason">The reason for initiating the shutdown. This parameter must be one of the system shutdown reason codes(Enums).</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.ADVAPI32.InitiateSystemShutdownExW(System.Text.StringBuilder,System.Text.StringBuilder,System.UInt32,System.Boolean,System.Boolean,System.UInt32)">
            almost same as InitiateSystemShutdownExA
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Documented.HTTPAPI">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32">
            <summary>
            winbase.h This header is used by multiple technologies.
            This file is Application Installation and Servicing parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/ns-winbase-actctxa
            </summary>
            <summary>
            winbase.h This header is used by multiple technologies.
            This file is Backup parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-addintegritylabeltoboundarydescriptor
            </summary>
            <summary>
            The following functions are used to access a console.
            https://learn.microsoft.com/en-us/windows/console/console-functions
            </summary>
            <summary>
            fileapi.h This header is used by multiple technologies.
                Data Access and Storage
                System Services
            This file is Data Access and Storage parts.
            https://learn.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-arefileapisansi
            </summary>
            <summary>
            winbase.h This header is used by multiple technologies.
            This file is Data Access and Storage parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-checknamelegaldos8dot3a
            </summary>
            <summary>
            winbase.h This header is used by multiple technologies.
            This file is Data Exchange parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/
            </summary>
            <summary>
            winnls.h This header is used by Internationalization for Windows Applications.
            https://learn.microsoft.com/en-us/windows/win32/api/winnls/
            </summary>
            <summary>
            processthreadsapi.h This header is used by multiple technologies.
                Processes and threads
                Remote Desktop Services
                Security and Identity
            This file is Processes and threads parts.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/
            </summary>
            <summary>
            winbase.h This header is used by multiple technologies.
            This file is Remote Desktop Services parts.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-wtsgetactiveconsolesessionid
            </summary>
            <summary>
            heapapi.h This header is used by System Services.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/
            </summary>
            <summary>
            libloaderapi.h      This header is used by multiple technologies.
            https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-adddlldirectory
            </summary>
            <summary>
            profileapi.h This header is used by System Services.
            https://learn.microsoft.com/en-us/windows/win32/api/profileapi/
            </summary>
            <summary>
            tlhelp32.h
            https://learn.microsoft.com/en-us/windows/win32/api/tlhelp32/
            </summary>
            <summary>
            provided for compatibility with 16-bit versions of Windows. 
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-_lclose
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ActivateActCtx(System.IntPtr,System.IntPtr@)">
            <summary>
            activates the specified activation context. 
            It does this by pushing the specified activation context to the top of the activation stack. 
            The specified activation context is thus associated with the current thread and any appropriate side-by-side API functions.
            </summary>
            <param name="hActCtx">Handle to an ACTCTX structure that contains information on the activation context that is to be made active.</param>
            <param name="lpCookie"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AddRefActCtx(System.IntPtr)">
            <summary>
            The AddRefActCtx function increments the reference count of the specified activation context.
            </summary>
            <param name="hActCtx">Handle to an ACTCTX structure that contains information on the activation context for which the reference count is to be incremented.</param>
            <param name=""></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateActCtx(System.IntPtr@)">
            <summary>
            The CreateActCtx function creates an activation context.
            </summary>
            <param name="hActCtx">Pointer to an ACTCTX structure that contains information about the activation context to be created.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.DeactivateActCtx(System.Int32,System.IntPtr)">
            <summary>
            The DeactivateActCtx function deactivates the activation context corresponding to the specified cookie.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-deactivateactctx
            </summary>
            <param name="dwFlags"></param>
            <param name="ulCookie"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.FindActCtxSectionGuid(System.Int32,System.String,System.Int32,System.String,Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA@)">
            <summary>
            The FindActCtxSectionGuid function retrieves information on a specific GUID 
            in the current activation context and returns a ACTCTX_SECTION_KEYED_DATA structure.
            </summary>
            <param name="dwFlags"></param>
            <param name="lpExtensionGuid"></param>
            <param name="ulSectionId"></param>
            <param name="lpGuidToFind"></param>
            <param name="ReturnedData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.FindActCtxSectionString(System.Int32,System.String,System.Int32,System.String,Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA@)">
            <summary>
            The FindActCtxSectionString function retrieves information on a specific string 
            in the current activation context and returns a ACTCTX_SECTION_KEYED_DATA structure.
            </summary>
            <param name="dwFlags">
            Flags that determine how this function is to operate. 
            Only the following flag is currently defined.
            </param>
            <param name="lpExtensionGuid"></param>
            <param name="ulSectionId"></param>
            <param name="lpStringToFind"></param>
            <param name="ReturnedData"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetCurrentActCtx(System.IntPtr@)">
            <summary>
            The GetCurrentActCtx function returns the handle to the active activation context of the calling thread.
            </summary>
            <param name="lphActCtx">
            Pointer to the returned ACTCTX structure that contains information on the active activation context.
            </param>
            <returns>
            If the function succeeds, it returns TRUE. Otherwise, it returns FALSE.
            This function sets errors that can be retrieved by calling GetLastError. 
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.QueryActCtxSettings(System.Int32,System.IntPtr,System.String,System.String,System.Byte[]@,System.Int32,System.Int32@)">
            <summary>
            The QueryActCtxSettingsW function specifies the activation context, and the namespace and name of the attribute that is to be queried.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-queryactctxsettingsw
            </summary>
            <param name="dwFlags"></param>
            <param name="hActCtx"></param>
            <param name="settingsNameSpace"></param>
            <param name="settingName"></param>
            <param name="pvBuffer"></param>
            <param name="dwBuffer"></param>
            <param name="pdwWrittenOrRequired"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.QueryActCtx(System.Int32,System.IntPtr,System.IntPtr,System.Byte[]@,System.Int32,System.Int32@)">
            <summary>
            The QueryActCtxW function queries the activation context.
            </summary>
            <param name="dwFlags"></param>
            <param name="hActCtx"></param>
            <param name="pvSubInstance"></param>
            <param name="pvBuffer"></param>
            <param name="cbBuffer"></param>
            <param name="pcbWrittenOrRequired"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ReleaseActCtx(System.IntPtr@)">
            <summary>
            The ReleaseActCtx function decrements the reference count of the specified activation context.
            </summary>
            <param name="hActCtx"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ZombifyActCtx(System.IntPtr@)">
            <summary>
            The ZombifyActCtx function deactivates the specified activation context, but does not deallocate it.
            </summary>
            <param name="hActCtx">
            Handle to the activation context that is to be deactivated.
            </param>
            <returns>
            If the function succeeds, it returns TRUE. 
            If a null handle is passed in the hActCtx parameter, NULL_INVALID_PARAMETER will be returned. 
            Otherwise, it returns FALSE.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.BackupRead(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,System.Boolean,System.Boolean,System.IntPtr@)">
            <summary>
            BackupRead
            </summary>
            <param name="hFile"></param>
            <param name="lpBuffer"></param>
            <param name="nNumberOfBytesToRead"></param>
            <param name="lpNumberOfBytesRead"></param>
            <param name="bAbort"></param>
            <param name="bProcessSecurity"></param>
            <param name="lpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.BackupWrite(System.IntPtr,System.IntPtr,System.UInt32,System.UInt32@,System.Boolean,System.Boolean,System.IntPtr@)">
            <summary>
            BackupWrite
            </summary>
            <param name="hFile"></param>
            <param name="lpBuffer"></param>
            <param name="nNumberOfBytesToWrite"></param>
            <param name="lpNumberOfBytesWritten"></param>
            <param name="bAbort"></param>
            <param name="bProcessSecurity"></param>
            <param name="lpContext"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AddConsole(System.String,System.String,System.String)">
            <summary>
            AddConsoleAliasA;AddConsoleAliasW
            </summary>
            <param name="Source"></param>
            <param name="Target"></param>
            <param name="ExeName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AllocConsole">
            <summary>
            AllocConsole
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AttachConsole(System.UInt32)">
            <summary>
            AttachConsole
            </summary>
            <param name="dwProcessId"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AddLocalAlternateComputerName(System.String,System.UInt32)">
            <summary>
            Adds an alternate local network name for the computer from which it is called.
            AddLocalAlternateComputerNameA;AddLocalAlternateComputerNameW
            </summary>
            <param name="lpDnsFQHostname"></param>
            <param name="ulFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AssignProcessToJobObject(System.IntPtr,System.IntPtr)">
            <summary>
            AssignProcessToJobObject
            </summary>
            <param name="hJob"></param>
            <param name="hProcess"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.Beep(System.UInt32,System.UInt32)">
            <summary>
            Generates simple tones on the speaker. 
            The function is synchronous; it performs an alertable wait and does not return control to its caller until the sound finishes.
            utilapiset.h
            </summary>
            <param name="dwFreq"></param>
            <param name="dwDuration"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.BeginUpdateResource(System.String,System.Boolean)">
            <summary>
            BeginUpdateResourceA;BeginUpdateResourceW
            </summary>
            <param name="pFileName"></param>
            <param name="bDeleteExistingResources"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AreFileApisANSI">
            <summary>
            AreFileApisANSI
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AddAtom(System.String)">
            <summary>
            AddAtomA;AddAtomW
            </summary>
            <param name="lpString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.DeleteAtom(System.UInt16)">
            <summary>
            Decrements the reference count of a local string atom. 
            If the atom's reference count is reduced to zero, 
            DeleteAtom removes the string associated with the atom from the local atom table.
            </summary>
            <param name="nAtom"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.InitAtomTable(System.Int32)">
            <summary>
            The number of hash buckets to use for the atom table. 
            If this parameter is zero, the default number of hash buckets are created.
            </summary>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.WTSGetActiveConsoleSessionId">
            <summary>
            Retrieves the session identifier of the console session.
            The console session is the session that is currently attached to the physical console.
            Note that it is not necessary that Remote Desktop Services be running for this function to succeed.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-wtsgetactiveconsolesessionid
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CloseHandle(System.IntPtr)">
            <summary>
            Closes an open object handle.
            https://learn.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-closehandle
            </summary>
            <param name="hObject">A valid handle to an open object.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.DuplicateHandle(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32,System.Boolean,Ban3.Infrastructures.NativeLibs.Enums.DUPLICATE_HANDLE_OPTIONS)">
            <summary>
            Duplicates an object handle.
            https://learn.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-duplicatehandle
            </summary>
            <param name="hSourceProcessHandle">
            A handle to the process with the handle to be duplicated.
            The handle must have the PROCESS_DUP_HANDLE access right.
            </param>
            <param name="hSourceHandle">
            The handle to be duplicated.
            This is an open object handle that is valid in the context of the source process.
            For a list of objects whose handles can be duplicated, see the following Remarks section.
            </param>
            <param name="hTargetProcessHandle"></param>
            <param name="lpTargetHandle"></param>
            <param name="dwDesiredAccess"></param>
            <param name="bInheritHandle"></param>
            <param name="dwOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetHandleInformation(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.OBJECT_HANDLE_FLAGS@)">
            <summary>
            Retrieves certain properties of an object handle.
            https://learn.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-gethandleinformation
            </summary>
            <param name="hObject">A handle to an object whose information is to be retrieved.</param>
            <param name="lpdwFlags">
            A pointer to a variable that receives a set of bit flags that specify properties of the object handle or 0.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SetHandleInformation(System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.OBJECT_HANDLE_FLAGS)">
            <summary>
            Sets certain properties of an object handle.
            https://learn.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-sethandleinformation
            </summary>
            <param name="hObject">
            A handle to an object whose information is to be set.
            </param>
            <param name="dwMask">A mask that specifies the bit flags to be changed. Use the same constants shown in the description of dwFlags.</param>
            <param name="dwFlags">
            Set of bit flags that specifies properties of the object handle.
            This parameter can be 0 or one or more of the following values.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetProcessHeap">
            <summary>
            Retrieves a handle to the default heap of the calling process. This handle can then be used in subsequent calls to the heap functions.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-getprocessheap
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetProcessHeaps(System.UInt32,System.IntPtr@)">
            <summary>
            Returns the number of active heaps and retrieves handles to all of the active heaps for the calling process.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-getprocessheaps
            </summary>
            <param name="NumberOfHeaps"></param>
            <param name="ProcessHeaps"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapAlloc(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Allocates a block of memory from a heap. The allocated memory is not movable.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapalloc
            </summary>
            <param name="hHeap"></param>
            <param name="dwFlags"></param>
            <param name="dwBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapCompact(System.IntPtr,System.UInt32)">
            <summary>
            Returns the size of the largest committed free block in the specified heap.
            If the Disable heap coalesce on free global flag is set, this function also coalesces adjacent free blocks of memory in the heap.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapcompact
            </summary>
            <param name="hHeap"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapCreate(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates a private heap object that can be used by the calling process.
            The function reserves space in the virtual address space of the process and allocates physical storage for a specified initial portion of this block.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapcreate
            </summary>
            <param name="flOptions"></param>
            <param name="dwInitialSize"></param>
            <param name="dwMaximumSize"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapDestroy(System.IntPtr)">
            <summary>
            Destroys the specified heap object.
            It decommits and releases all the pages of a private heap object, and it invalidates the handle to the heap.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapdestroy
            </summary>
            <param name="hHeap"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapFree(System.IntPtr,System.UInt32,System.IntPtr)">
            <summary>
            Frees a memory block allocated from a heap by the HeapAlloc or HeapReAlloc function.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapfree
            </summary>
            <param name="hHeap"></param>
            <param name="dwFlags"></param>
            <param name="lpMem"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapLock(System.IntPtr)">
            <summary>
            Attempts to acquire the critical section object, or lock, that is associated with a specified heap.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heaplock
            </summary>
            <param name="hHeap"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapQueryInformation(System.IntPtr,System.UInt32,System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            Retrieves information about the specified heap.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapqueryinformation
            </summary>
            <param name="hHeap"></param>
            <param name="HeapInformationClass"></param>
            <param name="HeapInformation"></param>
            <param name="HeapInformationLength"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapReAlloc(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            Reallocates a block of memory from a heap.
            This function enables you to resize a memory block and change other memory block properties.
            The allocated memory is not movable.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heaprealloc
            </summary>
            <param name="hHeap"></param>
            <param name="dwFlags"></param>
            <param name="lpMem"></param>
            <param name="dwBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapSetInformation(System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Enables features for a specified heap.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapsetinformation
            </summary>
            <param name="hHeap"></param>
            <param name="HeapInformationClass"></param>
            <param name="HeapInformation"></param>
            <param name="HeapInformationLength"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapSize(System.IntPtr,System.UInt32,System.IntPtr)">
            <summary>
            Retrieves the size of a memory block allocated from a heap by the HeapAlloc or HeapReAlloc function.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapsize
            </summary>
            <param name="hHeap">
            A handle to the heap in which the memory block resides.
            This handle is returned by either the HeapCreate or GetProcessHeap function.
            </param>
            <param name="dwFlags"></param>
            <param name="lpMem"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapUnlock(System.IntPtr)">
            <summary>
            Releases ownership of the critical section object, or lock, that is associated with a specified heap.
            It reverses the action of the HeapLock function.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapunlock
            </summary>
            <param name="hHeap">
            A handle to the heap to be unlocked.
            This handle is returned by either the HeapCreate or GetProcessHeap function.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapValidate(System.IntPtr,System.UInt32,System.IntPtr)">
            <summary>
            Validates the specified heap.
            The function scans all the memory blocks in the heap and verifies that the heap control structures maintained by the heap manager are in a consistent state.
            You can also use the HeapValidate function to validate a single memory block within a specified heap without checking the validity of the entire heap.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapvalidate
            </summary>
            <param name="hHeap">A handle to the heap to be validated.</param>
            <param name="dwFlags">
            The heap access options. This parameter can be the following value.
            HEAP_NO_SERIALIZE   0x00000001  Serialized access will not be used.
            </param>
            <param name="lpMem">A pointer to a memory block within the specified heap. This parameter may be NULL.</param>
            <returns>If the specified heap or memory block is valid, the return value is nonzero.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.HeapWalk(System.IntPtr,System.IntPtr@)">
            <summary>
            Enumerates the memory blocks in the specified heap.
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/nf-heapapi-heapwalk
            </summary>
            <param name="hHeap">A handle to the heap. This handle is returned by either the HeapCreate or GetProcessHeap function.</param>
            <param name="lpEntry">A pointer to a PROCESS_HEAP_ENTRY structure that maintains state information for a particular heap enumeration.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AddDllDirectory(System.String)">
            <summary>
            Adds a directory to the process DLL search path.
            https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-adddlldirectory
            </summary>
            <param name="NewDirectory">
            An absolute path to the directory to add to the search path. 
            For example, to add the directory Dir2 to the process DLL search path, specify \Dir2.
            </param>
            <returns>
            If the function succeeds, 
            the return value is an opaque pointer that can be passed to RemoveDllDirectory to remove the DLL from the process DLL search path.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.RemoveDllDirectory(System.Int32)">
            <summary>
            The cookie returned by AddDllDirectory when the directory was added to the search path.
            </summary>
            <param name="Cookie"></param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SetDefaultDllDirectories(System.UInt32)">
            <summary>
            Specifies a default set of directories to search when the calling process loads a DLL. 
            This search path is used when LoadLibraryEx is called with no LOAD_LIBRARY_SEARCH flags.
            </summary>
            <param name="DirectoryFlags">The directories to search.(Flags Enums)</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.DisableThreadLibraryCalls(System.IntPtr)">
            <summary>
            Disables the DLL_THREAD_ATTACH and DLL_THREAD_DETACH notifications for the specified dynamic-link library (DLL). 
            This can reduce the size of the working set for some applications.
            https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-disablethreadlibrarycalls
            </summary>
            <param name="hLibModule">
            A handle to the DLL module for which the DLL_THREAD_ATTACH and DLL_THREAD_DETACH notifications are to be disabled. 
            The LoadLibrary, LoadLibraryEx, or GetModuleHandle function returns this handle. 
            Note that you cannot call GetModuleHandle with NULL because this returns the base address of the executable image, not the DLL image.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. The DisableThreadLibraryCalls function fails if the DLL specified by hModule has active static thread local storage, or if hModule is an invalid module handle.
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.FreeLibrary(System.IntPtr)">
            <summary>
            Frees the loaded dynamic-link library (DLL) module and, 
            if necessary, decrements its reference count. 
            When the reference count reaches zero, 
            the module is unloaded from the address space of the calling process and the handle is no longer valid.
            https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-freelibrary
            </summary>
            <param name="hLibModule">
            A handle to the loaded library module. 
            The LoadLibrary, LoadLibraryEx,GetModuleHandle, or GetModuleHandleEx function returns this handle.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call the GetLastError function.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.FreeLibraryAndExitThread(System.IntPtr,System.Int32)">
            <summary>
            Decrements the reference count of a loaded dynamic-link library (DLL) by one, 
            then calls ExitThread to terminate the calling thread. 
            The function does not return.
            https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-freelibraryandexitthread
            </summary>
            <param name="hLibModule">A handle to the DLL module whose reference count the function decrements.</param>
            <param name="dwExitCode">The exit code for the calling thread.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetModuleFileNameA(System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves the fully qualified path for the file that contains the specified module. 
            The module must have been loaded by the current process.
            https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-getmodulefilenamea
            </summary>
            <param name="hModule">
            A handle to the loaded module whose path is being requested.
            If this parameter is NULL, GetModuleFileName retrieves the path of the executable file of the current process.
            </param>
            <param name="lpFilename">A pointer to a buffer that receives the fully qualified path of the module.</param>
            <param name="nSize">The size of the lpFilename buffer, in TCHARs.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetModuleFileNameW(System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            same as GetModuleFileNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetModuleHandleA(System.Text.StringBuilder)">
            <summary>
            Retrieves a module handle for the specified module. The module must have been loaded by the calling process.
            To avoid the race conditions described in the Remarks section, use the GetModuleHandleEx function.
            </summary>
            <param name="lpModuleName">
            The name of the loaded module (either a .dll or .exe file). 
            If the file name extension is omitted, the default library extension .dll is appended.
            </param>
            <returns>
            If the function succeeds, the return value is a handle to the specified module.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetModuleHandleW(System.Text.StringBuilder)">
            same as GetModuleHandleA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetModuleHandleExA(System.UInt32,System.Text.StringBuilder,System.IntPtr@)">
            <summary>
            Retrieves a module handle for the specified module and increments the module's reference count unless GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT is specified.
            The module must have been loaded by the calling process.
            </summary>
            <param name="dwFlags"></param>
            <param name="lpModuleName"></param>
            <param name="phModule"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetModuleHandleExW(System.UInt32,System.Text.StringBuilder,System.IntPtr@)">
            same as GetModuleHandleExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            Retrieves the address of an exported function (also known as a procedure) or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="lib">A handle to the DLL module that contains the function or variable.</param>
            <param name="funcName">
            The function or variable name, or the function's ordinal value. 
            If this parameter is an ordinal value, 
            it must be in the low-order word; the high-order word must be zero.
            </param>
            <returns>
            If the function succeeds, the return value is the address of the exported function or variable.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            public delegate int FARPROC();
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.LoadLibraryA(System.String)">
            <summary>
            Loads the specified module into the address space of the calling process.
            </summary>
            <param name="lpLibFileName">
            The name of the module. 
            This can be either a library module (a .dll file) 
            or an executable module (an .exe file). If the specified module is an executable module, 
            static imports are not loaded; instead, 
            the module is loaded as if by LoadLibraryEx with the DONT_RESOLVE_DLL_REFERENCES flag.
            </param>
            <returns>
            If the function succeeds, the return value is a handle to the module.
            If the function fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.LoadLibraryW(System.String)">
            same as LoadLibraryA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.LoadLibraryExA(System.String,System.IntPtr,System.UInt32)">
            <summary>
            Loads the specified module into the address space of the calling process. 
            The specified module may cause other modules to be loaded.
            https://learn.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibraryexa
            </summary>
            <param name="lpLibFileName">A string that specifies the file name of the module to load.</param>
            <param name="hFile">This parameter is reserved for future use. It must be NULL.</param>
            <param name="dwFlags">The action to be taken when loading the module. If no flags are specified, the behavior of this function is identical to that of the LoadLibrary function.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.LoadLibraryExW(System.String,System.IntPtr,System.UInt32)">
            same as LoadLibraryExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AllocateUserPhysicalPages(System.IntPtr,System.UInt32@,System.IntPtr@)">
            <summary>
            Allocates physical memory pages to be mapped and unmapped within any Address Windowing Extensions (AWE) region of a specified process.
            64-bit Windows on Itanium-based systems:  Due to the difference in page sizes, AllocateUserPhysicalPages is not supported for 32-bit applications.
            https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-allocateuserphysicalpages
            </summary>
            <param name="hProcess"></param>
            <param name="NumberOfPages"></param>
            <param name="PageArray"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AllocateUserPhysicalPagesNuma(System.IntPtr,System.UInt32@,System.IntPtr@,System.UInt32)">
            <summary>
            Allocates physical memory pages to be mapped and unmapped within any Address Windowing Extensions (AWE) region of a specified process and specifies the NUMA node for the physical memory.
            https://learn.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-allocateuserphysicalpagesnuma
            </summary>
            <param name="hProcess"></param>
            <param name="NumberOfPages"></param>
            <param name="PageArray"></param>
            <param name="nndPreferred"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.QueryPerformanceCounter(Ban3.Infrastructures.NativeLibs.Structs.LARGE_INTEGER@)" -->
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.QueryPerformanceFrequency(Ban3.Infrastructures.NativeLibs.Structs.LARGE_INTEGER@)">
            <summary>
            Retrieves the frequency of the performance counter.
            The frequency of the performance counter is fixed at system boot and is consistent across all processors.
            Therefore, the frequency need only be queried upon application initialization, and the result can be cached.
            https://learn.microsoft.com/en-us/windows/win32/api/profileapi/nf-profileapi-queryperformancefrequency
            </summary>
            <param name="lpFrequency">
            A pointer to a variable that receives the current performance-counter frequency,
            in counts per second. If the installed hardware doesn't support a high-resolution performance counter,
            this parameter can be zero (this will not occur on systems that run Windows XP or later).
            </param>
            <returns>
            If the installed hardware supports a high-resolution performance counter, the return value is nonzero.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AcquireSRWLockExclusive(System.IntPtr@)">
            <summary>
            Acquires a slim reader/writer (SRW) lock in exclusive mode.
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-acquiresrwlockexclusive
            </summary>
            <param name="srwLock">A pointer to the SRW lock.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.AcquireSRWLockShared(System.IntPtr@)">
            <summary>
            Acquires a slim reader/writer (SRW) lock in shared mode.
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-acquiresrwlockshared
            </summary>
            <param name="srwLock">A pointer to the SRW lock.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CancelWaitableTimer(System.IntPtr)">
            <summary>
            Sets the specified waitable timer to the inactive state.
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-cancelwaitabletimer
            </summary>
            <param name="hTimer">
            A handle to the timer object.
            The CreateWaitableTimer or OpenWaitableTimer function returns this handle.
            The handle must have the TIMER_MODIFY_STATE access right.
            </param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateEvent(System.IntPtr,System.Boolean,System.Boolean,System.String)">
            <summary>
            Creates or opens a named or unnamed event object.
            CreateEventA/CreateEventW
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-createeventa
            </summary>
            <param name="lpEventAttributes">
            A pointer to a SECURITY_ATTRIBUTES structure. 
            If this parameter is NULL, the handle cannot be inherited by child processes.</param>
            <param name="bManualReset">If this parameter is TRUE, the function creates a manual-reset event object, 
            which requires the use of the ResetEvent function to set the event state to nonsignaled. 
            If this parameter is FALSE, the function creates an auto-reset event object, 
            and system automatically resets the event state to nonsignaled after a single waiting thread has been released.</param>
            <param name="bInitialState">If this parameter is TRUE, the initial state of the event object is signaled; otherwise, it is nonsignaled.</param>
            <param name="lpName">The name of the event object. The name is limited to MAX_PATH characters. Name comparison is case sensitive.
            If lpName matches the name of an existing named event object, 
            this function requests the EVENT_ALL_ACCESS access right. In this case, 
            the bManualReset and bInitialState parameters are ignored because they have already been set by the creating process. 
            If the lpEventAttributes parameter is not NULL, it determines whether the handle can be inherited, but its security-descriptor member is ignored.
            If lpName is NULL, the event object is created without a name.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateEventEx(System.IntPtr,System.String,System.UInt32,System.UInt32)">
            <summary>
            Creates or opens a named or unnamed event object and returns a handle to the object.
            CreateEventExA/CreateEventExW
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-createeventexa
            </summary>
            <param name="lpEventAttributes"></param>
            <param name="lpName"></param>
            <param name="dwFlags">
            This parameter can be one or more of the following values.
            CREATE_EVENT_INITIAL_SET        0x00000002      The initial state of the event object is signaled; 
                                                            otherwise, it is nonsignaled.
            CREATE_EVENT_MANUAL_RESET       0x00000001      The event must be manually reset using the ResetEvent function.
                                                            Any number of waiting threads, or threads that subsequently 
                                                            begin wait operations for the specified event object, 
                                                            can be released while the object's state is signaled.
                                                            If this flag is not specified, the system automatically 
                                                            resets the event after releasing a single waiting thread.
            </param>
            <param name="dwDesiredAccess">The access mask for the event object. 
            For a list of access rights, see Synchronization Object Security and Access Rights.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateMutex(System.IntPtr,System.Boolean,System.String)">
            <summary>
            Creates or opens a named or unnamed mutex object.
            </summary>
            <param name="lpMutexAttributes"></param>
            <param name="bInitialOwner"></param>
            <param name="lpName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateMutexEx(System.IntPtr,System.String,System.UInt32,System.UInt32)">
            <summary>
            Creates or opens a named or unnamed mutex object and returns a handle to the object.
            </summary>
            <param name="lpMutexAttributes"></param>
            <param name="lpName"></param>
            <param name="dwFlags"></param>
            <param name="dwDesiredAccess"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateSemaphore(Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES,System.Int32,System.Int32,System.String)">
            <summary>
            Creates or opens a named or unnamed semaphore object.
            </summary>
            <param name="lpSemaphoreAttributes"></param>
            <param name="lInitialCount"></param>
            <param name="lMaximumCount"></param>
            <param name="lpName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateSemaphoreEx(Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES,System.Int32,System.Int32,System.String,System.UInt32,System.UInt32)">
            <summary>
            Creates or opens a named or unnamed semaphore object and returns a handle to the object.
            </summary>
            <param name="lpSemaphoreAttributes"></param>
            <param name="lInitialCount"></param>
            <param name="lMaximumCount"></param>
            <param name="lpName"></param>
            <param name="dwFlags"></param>
            <param name="dwDesiredAccess"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateWaitableTimer(Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES,System.Boolean,System.String)">
            <summary>
            Creates or opens a waitable timer object.
            </summary>
            <param name="lpTimerAttributes"></param>
            <param name="bManualReset"></param>
            <param name="lpTimerName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.CreateWaitableTimerEx(Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES,System.String,System.UInt32,System.UInt32)">
            <summary>
            Creates or opens a waitable timer object and returns a handle to the object.
            </summary>
            <param name="lpTimerAttributes"></param>
            <param name="lpTimerName"></param>
            <param name="dwFlags"></param>
            <param name="dwDesiredAccess"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.DeleteCriticalSection(Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION)">
            <summary>
            Releases all resources used by an unowned critical section object.
            </summary>
            <param name="lpCriticalSection"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.DeleteSynchronizationBarrier(System.IntPtr)">
            <summary>
            Deletes a synchronization barrier.
            </summary>
            <param name="lpBarrier"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.EnterCriticalSection(Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION)">
            <summary>
            Waits for ownership of the specified critical section object. 
            The function returns when the calling thread is granted ownership.
            </summary>
            <param name="lpCriticalSection"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.EnterSynchronizationBarrier(System.IntPtr,System.UInt32)">
            <summary>
            Causes the calling thread to wait at a synchronization barrier 
            until the maximum number of threads have entered the barrier.
            </summary>
            <param name="lpBarrier"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.InitializeCriticalSection(Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION@)">
            <summary>
            Initializes a critical section object.
            </summary>
            <param name="lpCriticalSection">A pointer to the critical section object.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.InitializeCriticalSectionAndSpinCount(Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION@,System.Int32)">
            <summary>
            Initializes a critical section object and sets the spin count for the critical section. 
            When a thread tries to acquire a critical section that is locked, 
            the thread spins: it enters a loop which iterates spin count times, checking to see if the lock is released. 
            If the lock is not released before the loop finishes, 
            the thread goes to sleep to wait for the lock to be released.
            </summary>
            <param name="lpCriticalSection">A pointer to the critical section object.</param>
            <param name="dwSpinCount">The spin count for the critical section object.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.OpenEvent(System.UInt32,System.Boolean,System.String)">
            <summary>
            Opens an existing named event object.
            </summary>
            <param name="dwDesiredAccess">
            The access to the event object. 
            The function fails if the security descriptor of the specified object does not permit 
            the requested access for the calling process. 
            For a list of access rights, /Enums/SyncObjectAccess
            </param>
            <param name="bInheritHandle">
            If this value is TRUE, processes created by this process will inherit the handle. 
            Otherwise, the processes do not inherit this handle.</param>
            <param name="lpName">The name of the event to be opened. Name comparisons are case sensitive.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.OpenMutex(System.UInt32,System.Boolean,System.String)">
            <summary>
            Opens an existing named mutex object.
            </summary>
            <param name="dwDesiredAccess"></param>
            <param name="bInheritHandle"></param>
            <param name="lpName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.OpenSemaphore(System.UInt32,System.Boolean,System.String)">
            <summary>
            Opens an existing named semaphore object.
            </summary>
            <param name="dwDesiredAccess"></param>
            <param name="bInheritHandle"></param>
            <param name="lpName"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.OpenWaitableTimer(System.UInt32,System.Boolean,System.String)">
            <summary>
            Opens an existing named waitable timer object.
            </summary>
            <param name="dwDesiredAccess"></param>
            <param name="bInheritHandle"></param>
            <param name="lpName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ReleaseMutex(System.IntPtr)">
            <summary>
            Releases ownership of the specified mutex object.
            </summary>
            <param name="hMutex"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ReleaseMutexWhenCallbackReturns(System.IntPtr@,System.IntPtr)">
            <summary>
            Specifies the mutex that the thread pool will release when the current callback completes.
            threadpoolapiset.h
            </summary>
            <param name="pci">A pointer to a TP_CALLBACK_INSTANCE structure that defines the callback instance. 
            The pointer is passed to the callback function.</param>
            <param name="hMutex"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ReleaseSemaphore(System.IntPtr,System.Int32,System.Int32@)">
            <summary>
            Increases the count of the specified semaphore object by a specified amount.
            </summary>
            <param name="hSemaphore"></param>
            <param name="lReleaseCount"></param>
            <param name="lpPreviousCount"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ReleaseSemaphoreWhenCallbackReturns(System.IntPtr@,System.IntPtr,System.Int32)">
            <summary>
            Specifies the semaphore that the thread pool will release when the current callback completes.
            threadpoolapiset.h
            https://learn.microsoft.com/en-us/windows/win32/api/threadpoolapiset/nf-threadpoolapiset-releasesemaphorewhencallbackreturns
            </summary>
            <param name="pci"></param>
            <param name="sem"></param>
            <param name="crel"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ReleaseSRWLockExclusive(System.IntPtr@)">
            <summary>
            Releases a slim reader/writer (SRW) lock that was acquired in exclusive mode.
            </summary>
            <param name="srwLock">[in, out] SRWLock:A pointer to the SRW lock.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ReleaseSRWLockShared(System.IntPtr@)">
            <summary>
            Releases a slim reader/writer (SRW) lock that was acquired in shared mode.
            </summary>
            <param name="srwLock">[in, out] SRWLock:A pointer to the SRW lock.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.ResetEvent(System.IntPtr@)">
            <summary>
            Sets the specified event object to the nonsignaled state.
            </summary>
            <param name="hEvent">
            A handle to the event object. 
            The CreateEvent or OpenEvent function returns this handle.
            The handle must have the EVENT_MODIFY_STATE access right.
            </param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SetCriticalSectionSpinCount(Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION@,System.Int32)">
            <summary>
            Sets the spin count for the specified critical section. 
            Spinning means that when a thread tries to acquire a critical section that is locked, the thread enters a loop, 
            checks to see if the lock is released, and if the lock is not released, the thread goes to sleep.
            The function returns the previous spin count for the critical section.
            </summary>
            <param name="lpCriticalSection"></param>
            <param name="dwSpinCount"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SetEvent(System.IntPtr)">
            <summary>
            Sets the specified event object to the signaled state.
            </summary>
            <param name="hEvent"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SetEventWhenCallbackReturns(System.IntPtr@,System.IntPtr)">
            <summary>
            Specifies the event that the thread pool will set when the current callback completes.
            </summary>
            <param name="pci"></param>
            <param name="evt"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SetWaitableTimer(System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.LARGE_INTEGER@,System.Int32,System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            Activates the specified waitable timer. 
            When the due time arrives, the timer is signaled and the thread that set the timer calls the optional completion routine.
            </summary>
            <param name="hTimer">
            A handle to the timer object. The CreateWaitableTimer or OpenWaitableTimer function returns this handle.
            The handle must have the TIMER_MODIFY_STATE access right. 
            </param>
            <param name="lpDueTime">The time after which the state of the timer is to be set to signaled, in 100 nanosecond intervals.</param>
            <param name="lPeriod">
            The period of the timer, in milliseconds. If lPeriod is zero, the timer is signaled once. 
            If lPeriod is greater than zero, the timer is periodic.
            </param>
            <param name="pfnCompletionRoutine">
            A pointer to an optional completion routine. 
            The completion routine is application-defined function of type PTIMERAPCROUTINE to be executed when the timer is signaled.
            </param>
            <param name="lpArgToCompletionRoutine">A pointer to a structure that is passed to the completion routine.</param>
            <param name="fResume">If this parameter is TRUE, restores a system in suspended power conservation mode when the timer state is set to signaled. </param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SetWaitableTimerEx(System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.LARGE_INTEGER,System.Int32,System.IntPtr,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.REASON_CONTEXT,System.Int32)">
            <summary>
            Activates the specified waitable timer and provides context information for the timer. 
            When the due time arrives, the timer is signaled and the thread that set the timer calls the optional completion routine.
            </summary>
            <param name="hTimer"></param>
            <param name="lpDueTime"></param>
            <param name="lPeriod"></param>
            <param name="pfnCompletionRoutine"></param>
            <param name="lpArgToCompletionRoutine"></param>
            <param name="WakeContext"></param>
            <param name="TolerableDelay"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SignalObjectAndWait(System.IntPtr,System.IntPtr,System.Int32,System.Boolean)">
            <summary>
            Signals one object and waits on another object as a single operation.
            </summary>
            <param name="hObjectToSignal">A handle to the object to be signaled. This object can be a semaphore, a mutex, or an event.</param>
            <param name="hObjectToWaitOn">A handle to the object to wait on. The SYNCHRONIZE access right is required.</param>
            <param name="dwMilliseconds">The time-out interval, in milliseconds.</param>
            <param name="bAlertable">
            If this parameter is TRUE, the function returns when the system queues an I/O completion routine or APC function, 
            and the thread calls the function. 
            If FALSE, the function does not return, and the thread does not call the completion routine or APC function.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.Sleep(System.UInt32)">
            <summary>
            Suspends the execution of the current thread until the time-out interval elapses.
            </summary>
            <param name="dwMilliseconds">The time interval for which execution is to be suspended, in milliseconds.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SleepConditionVariableCS(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION@,System.UInt32)">
            <summary>
            Sleeps on the specified condition variable and releases the specified critical section as an atomic operation.
            </summary>
            <param name="ConditionVariable"></param>
            <param name="CriticalSection"></param>
            <param name="dwMilliseconds"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SleepConditionVariableSRW(System.IntPtr@,System.IntPtr@,System.UInt32,System.UInt32)">
            <summary>
            Sleeps on the specified condition variable and releases the specified lock as an atomic operation.
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-sleepconditionvariablesrw
            </summary>
            <param name="ConditionVariable">A pointer to the condition variable. This variable must be initialized using the InitializeConditionVariable function.</param>
            <param name="SRWLock">A pointer to the lock. This lock must be held in the manner specified by the Flags parameter.</param>
            <param name="dwMilliseconds">
            The time-out interval, in milliseconds. 
            The function returns if the interval elapses. 
            If dwMilliseconds is zero, the function tests the states of the specified objects and returns immediately. 
            If dwMilliseconds is INFINITE, the function's time-out interval never elapses.
            </param>
            <param name="Flags">
            If this parameter is CONDITION_VARIABLE_LOCKMODE_SHARED, 
            the SRW lock is in shared mode. Otherwise, the lock is in exclusive mode.
            </param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.SleepEx(System.UInt32,System.Boolean)">
            <summary>
            Suspends the current thread until the specified condition is met. 
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-sleepex
            </summary>
            <param name="dwMilliseconds"></param>
            <param name="bAlertable"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.TryAcquireSRWLockExclusive(System.IntPtr@)">
            <summary>
            Attempts to acquire a slim reader/writer (SRW) lock in exclusive mode. 
            If the call is successful, the calling thread takes ownership of the lock.
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-tryacquiresrwlockexclusive
            </summary>
            <param name="SRWLock">A pointer to the SRW lock.</param>
            <returns>
            If the lock is successfully acquired, the return value is nonzero.
            if the current thread could not acquire the lock, the return value is zero.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.TryAcquireSRWLockShared(System.IntPtr@)">
            <summary>
            Attempts to acquire a slim reader/writer (SRW) lock in shared mode. 
            If the call is successful, the calling thread takes ownership of the lock.
            https://learn.microsoft.com/en-us/windows/win32/api/synchapi/nf-synchapi-tryacquiresrwlockshared
            </summary>
            <param name="SRWLock">A pointer to the SRW lock.</param>
            <returns>
            If the lock is successfully acquired, the return value is nonzero.
            if the current thread could not acquire the lock, the return value is zero.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.TryEnterCriticalSection(Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION@)">
            <summary>
            Attempts to enter a critical section without blocking. 
            If the call is successful, the calling thread takes ownership of the critical section.
            </summary>
            <param name="lpCriticalSection">A pointer to the critical section object.</param>
            <returns>
            If the critical section is successfully entered or the current thread already owns the critical section, the return value is nonzero.
            If another thread already owns the critical section, the return value is zero.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.WaitForMultipleObjects(System.UInt32,System.IntPtr[],System.Boolean,System.Int32)">
            <summary>
            Waits until one or all of the specified objects are in the signaled state or the time-out interval elapses.
            </summary>
            <param name="nCount"></param>
            <param name="lpHandles"></param>
            <param name="bWaitAll"></param>
            <param name="dwMilliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.WaitForMultipleObjectsEx(System.UInt32,System.IntPtr[],System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Waits until one or all of the specified objects are in the signaled state, 
            an I/O completion routine or asynchronous procedure call (APC) is queued to the thread, 
            or the time-out interval elapses.
            </summary>
            <param name="nCount"></param>
            <param name="lpHandles"></param>
            <param name="bWaitAll"></param>
            <param name="dwMilliseconds"></param>
            <param name="bAlertable"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.WaitForSingleObject(System.IntPtr,System.Int32)">
            <summary>
            Waits until the specified object is in the signaled state or the time-out interval elapses.
            </summary>
            <param name="hHandle"></param>
            <param name="dwMilliseconds"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.WaitForSingleObjectEx(System.IntPtr,System.Int32,System.Boolean)">
            <summary>
            Waits until the specified object is in the signaled state, 
            an I/O completion routine or asynchronous procedure call (APC) is queued to the thread, 
            or the time-out interval elapses.
            </summary>
            <param name="hHandle"></param>
            <param name="dwMilliseconds"></param>
            <param name="bAlertable"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.WakeAllConditionVariable(System.IntPtr@)">
            <summary>
            Wake all threads waiting on the specified condition variable.
            </summary>
            <param name="ConditionVariable"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32.WakeConditionVariable(System.IntPtr@)">
            <summary>
            Wake a single thread waiting on the specified condition variable.
            </summary>
            <param name="ConditionVariable">A pointer to the condition variable.</param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32._lclose(System.Int32)">
            <summary>
            The _lclose function closes the specified file so that it is no longer available for reading or writing. 
            This function is provided for compatibility with 16-bit versions of Windows. 
            Win32-based applications should use the CloseHandle function.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-_lclose
            </summary>
            <param name="hFile"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32._lcreat(System.String,System.Int32)">
            <summary>
            Creates or opens the specified file. This documentation is included only for troubleshooting existing code.
            </summary>
            <param name="lpPathName"></param>
            <param name="hFile"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32._llseek(System.Int32,System.Int32,System.Int32)">
            <summary>
            Repositions the file pointer for the specified file.
            </summary>
            <param name="hFile"></param>
            <param name="lOffset"></param>
            <param name="iOrigin"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32._lopen(System.String,System.Int32)">
            <summary>
            The _lopen function opens an existing file and sets the file pointer to the beginning of the file. 
            This function is provided for compatibility with 16-bit versions of Windows. 
            Win32-based applications should use the CreateFile function.
            </summary>
            <param name="lpPathName"></param>
            <param name="iReadWrite"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32._lread(System.Int32,System.Byte[],System.UInt32)">
            <summary>
            The _lread function reads data from the specified file. 
            This function is provided for compatibility with 16-bit versions of Windows. 
            Win32-based applications should use the ReadFile function.
            </summary>
            <param name="hFile"></param>
            <param name="lpBuffer"></param>
            <param name="uBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.KERNEL32._lwrite(System.Int32,System.Byte[],System.UInt32)">
            <summary>
            Writes data to the specified file.
            </summary>
            <param name="hFile"></param>
            <param name="lpBuffer"></param>
            <param name="uBytes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.NtCommitComplete(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwCommitComplete routine notifies KTM that the calling resource manager has finished committing a transaction's data.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-ntcommitcomplete
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="TmVirtualClock"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.NtCommitEnlistment(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwCommitEnlistment routine initiates the commit operation for a specified enlistment's transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-ntcommitenlistment
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="TmVirtualClock"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.NtCommitTransaction(System.IntPtr,System.Boolean)">
            <summary>
            The ZwCommitTransaction routine initiates a commit operation for a specified transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-ntcommittransaction
            </summary>
            <param name="TransactionHandle"></param>
            <param name="Wait"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlAppendUnicodeStringToString(System.IntPtr,System.IntPtr)">
            <summary>
            The RtlAppendUnicodeStringToString routine concatenates two Unicode strings.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlappendunicodestringtostring
            </summary>
            <param name="Destination"></param>
            <param name="Source"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlAppendUnicodeToString(System.IntPtr,System.String)">
            <summary>
            The RtlAppendUnicodeToString routine concatenates the supplied Unicode string to a buffered Unicode string.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlappendunicodetostring
            </summary>
            <param name="Destination"></param>
            <param name="Source"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlAreBitsClear(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The RtlAreBitsClear routine determines whether a given range of bits within a bitmap variable is clear.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlarebitsclear
            </summary>
            <param name="BitMapHeader"></param>
            <param name="StartingIndex"></param>
            <param name="Length"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlAreBitsSet(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The RtlAreBitsSet routine determines whether a given range of bits within a bitmap variable is set.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlarebitsset
            </summary>
            <param name="BitMapHeader"></param>
            <param name="StartingIndex"></param>
            <param name="Length"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlCheckRegistryKey(System.UInt32,System.String)">
            <summary>
            The RtlCheckRegistryKey routine checks for the existence of a given named key in the registry.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlcheckregistrykey
            </summary>
            <param name="RelativeTo"></param>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlClearAllBits(System.IntPtr)">
            <summary>
            The RtlClearAllBits routine sets all bits in a given bitmap variable to zero.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlclearallbits
            </summary>
            <param name="BitMapHeader"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlClearBit(System.IntPtr,System.UInt32)">
            <summary>
            The RtlClearBit routine sets the specified bit in a bitmap to zero.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlclearbit
            </summary>
            <param name="BitMapHeader"></param>
            <param name="BitNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlClearBits(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The RtlClearBits routine sets all bits in the specified range of bits in the bitmap to zero.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlclearbits
            </summary>
            <param name="BitMapHeader"></param>
            <param name="StartingIndex"></param>
            <param name="NumberToClear"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlCmDecodeMemIoResource(System.IntPtr,System.UInt64@)">
            <summary>
            The RtlCmDecodeMemIoResource routine provides the starting address and length of a CM_PARTIAL_RESOURCE_DESCRIPTOR structure that describes a range of memory or I/O port addresses.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlcmdecodememioresource
            </summary>
            <param name="Descriptor"></param>
            <param name="Start"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlCmEncodeMemIoResource(System.IntPtr,System.Byte,System.UInt64,System.UInt64)">
            <summary>
            The RtlCmEncodeMemIoResource routine updates a CM_PARTIAL_RESOURCE_DESCRIPTOR structure to describe a range of memory or I/O port addresses.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlcmencodememioresource
            </summary>
            <param name="Descriptor"></param>
            <param name="Type"></param>
            <param name="Length"></param>
            <param name="Start"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlCompareMemory(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            The RtlCompareMemory routine compares two blocks of memory and returns the number of bytes that match until the first difference.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlcomparememory
            </summary>
            <param name="Source1"></param>
            <param name="Source2"></param>
            <param name="Length"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlCompareUnicodeString(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            The RtlCompareUnicodeString routine compares two Unicode strings.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlcompareunicodestring
            </summary>
            <param name="String1"></param>
            <param name="String2"></param>
            <param name="CaseInSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlConvertLongToLargeInteger(System.Int64)">
            <summary>
            The RtlConvertLongToLargeInteger routine converts the input signed integer to a signed large integer.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlconvertlongtolargeinteger
            </summary>
            <param name="SignedInteger"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlConvertUlongToLargeInteger">
            <summary>
            The RtlConvertUlongToLargeInteger routine converts the input unsigned integer to a signed large integer.
            For Windows XP and later versions of Windows, do not use this routine; use the native support for __int64.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlconvertulongtolargeinteger
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlCreateRegistryKey(System.UInt32,System.String)">
            <summary>
            The RtlCreateRegistryKey routine adds a key object in the registry along a given relative path.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlcreateregistrykey
            </summary>
            <param name="RelativeTo"></param>
            <param name="Path"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlCreateSecurityDescriptor(System.IntPtr,System.UInt32)">
            <summary>
            The RtlCreateSecurityDescriptor routine initializes a new absolute-format security descriptor.
            On return,the security descriptor is initialized with no system ACL,
            no discretionary ACL, no owner, no primary group, and all control flags set to zero.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlcreatesecuritydescriptor
            </summary>
            <param name="SecurityDescriptor"></param>
            <param name="Revision"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlDeleteRegistryValue(System.UInt32,System.String,System.String)">
            <summary>
            The RtlDeleteRegistryValue routine removes the specified entry name and the associated values from the registry along the given relative path.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtldeleteregistryvalue
            </summary>
            <param name="RelativeTo"></param>
            <param name="Path"></param>
            <param name="ValueName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlDowncaseUnicodeChar(System.Char)">
            <summary>
            The RtlDowncaseUnicodeChar routine converts the specified Unicode character to lowercase.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtldowncaseunicodechar
            </summary>
            <param name="SourceCharacter"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlEqualUnicodeString(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            The RtlEqualUnicodeString routine compares two Unicode strings to determine whether they are equal.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlequalunicodestring
            </summary>
            <param name="String1"></param>
            <param name="String2"></param>
            <param name="CaseInSensitive"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFillMemory(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The RtlFillMemory routine fills a block of memory with the specified fill value.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfillmemory
            </summary>
            <param name="Destination"></param>
            <param name="Length"></param>
            <param name="Fill"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindClearBits(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The RtlFindClearBits routine searches for a range of clear bits of a requested size within a bitmap.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindclearbits
            </summary>
            <param name="BitMapHeader"></param>
            <param name="NumberToFind"></param>
            <param name="HintIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindClearBitsAndSet(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The RtlFindClearBitsAndSet routine searches for a range of clear bits of a requested size within a bitmap and sets all bits in the range when it has been located.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindclearbitsandset
            </summary>
            <param name="BitMapHeader"></param>
            <param name="NumberToFind"></param>
            <param name="HintIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindClearRuns(System.IntPtr,System.IntPtr@,System.UInt32,System.Boolean)">
            <summary>
            The RtlFindClearRuns routine finds the specified number of runs of clear bits within a given bitmap.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindclearruns
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindLastBackwardRunClear(System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The RtlFindLastBackwardRunClear routine searches a given bitmap for the preceding clear run of bits, starting from the specified index position.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindlastbackwardrunclear
            </summary>
            <param name="BitMapHeader"></param>
            <param name="FromIndex"></param>
            <param name="StartingRunIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindLeastSignificantBit(System.UInt64)">
            <summary>
            The RtlFindLeastSignificantBit routine returns the zero-based position of the least significant nonzero bit in its parameter.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindleastsignificantbit
            </summary>
            <param name="Set"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindLongestRunClear(System.IntPtr,System.UInt32@)">
            <summary>
            The RtlFindLongestRunClear routine searches for the largest contiguous range of clear bits within a given bitmap.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindlongestrunclear
            </summary>
            <param name="BitMapHeader"></param>
            <param name="StartingRunIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindMostSignificantBit(System.UInt64)">
            <summary>
            The RtlFindMostSignificantBit routine returns the zero-based position of the most significant nonzero bit in its parameter.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindmostsignificantbit
            </summary>
            <param name="Set"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindNextForwardRunClear(System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The RtlFindNextForwardRunClear routine searches a given bitmap variable for the next clear run of bits, starting from the specified index position.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindnextforwardrunclear
            </summary>
            <param name="BitMapHeader"></param>
            <param name="Index"></param>
            <param name="StartingRunIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindSetBits(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The RtlFindSetBits routine searches for a range of set bits of a requested size within a bitmap.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindsetbits
            </summary>
            <param name="BitMapHeader"></param>
            <param name="NumberToFind"></param>
            <param name="HintIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFindSetBitsAndClear(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The RtlFindSetBitsAndClear routine searches for a range of set bits of a requested size within a bitmap and clears all bits in the range when it has been located.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfindsetbitsandclear
            </summary>
            <param name="BitMapHeader"></param>
            <param name="NumberToFind"></param>
            <param name="HintIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFreeAnsiString(System.IntPtr)">
            <summary>
            The RtlFreeAnsiString routine releases storage that was allocated by RtlUnicodeStringToAnsiString.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfreeansistring
            </summary>
            <param name="AnsiString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFreeUTF8String(System.IntPtr)">
            <summary>
            The RtlFreeUTF8String function releases storage that was allocated by RtlUnicodeStringToUTF8String.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfreeutf8string
            </summary>
            <param name="utf8String"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlFreeUnicodeString(System.IntPtr)">
            <summary>
            The RtlFreeUnicodeString routine releases storage that was allocated by RtlAnsiStringToUnicodeString or RtlUpcaseUnicodeString.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlfreeunicodestring
            </summary>
            <param name="UnicodeString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlGUIDFromString(System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID@)">
            <summary>
            The RtlGUIDFromString routine converts the given Unicode string to a GUID in binary format.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlguidfromstring
            </summary>
            <param name="GuidString"></param>
            <param name="Guid"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlGetVersion(System.IntPtr@)">
            <summary>
            The RtlGetVersion routine returns version information about the currently running operating system.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlgetversion
            </summary>
            <param name="lpVersionInformation"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlHashUnicodeString(System.IntPtr,System.Byte,System.UInt32,System.UInt32@)">
            <summary>
            The RtlHashUnicodeString routine creates a hash value from a given Unicode string and hash algorithm.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlhashunicodestring
            </summary>
            <param name="String"></param>
            <param name="CaseInSensitive"></param>
            <param name="HashAlgorithm"></param>
            <param name="HashValue"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlInitAnsiString(System.IntPtr@,System.String)">
            <summary>
            The RtlInitAnsiString routine initializes a counted string of ANSI characters.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlinitansistring
            </summary>
            <param name="DestinationString"></param>
            <param name="SourceString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlInitString(System.IntPtr@,System.String)">
            <summary>
            The RtlInitString routine initializes a counted string of 8-bit characters.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlinitstring
            </summary>
            <param name="DestinationString"></param>
            <param name="SourceString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlInitStringEx(System.IntPtr@,System.String)">
            <summary>
            The RtlInitStringEx routine initializes a counted string of 8-bit characters.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlinitstringex
            </summary>
            <param name="DestinationString"></param>
            <param name="SourceString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlInitUTF8String(System.IntPtr,System.String)">
            <summary>
            The RtlInitUTF8String function initializes a counted string of UTF-8 characters.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlinitutf8string
            </summary>
            <param name="DestinationString"></param>
            <param name="SourceString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlInitUTF8StringEx(System.IntPtr,System.String)">
            <summary>
            The RtlInitUTF8StringEx routine initializes a counted string of UTF-8 characters.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlinitutf8stringex
            </summary>
            <param name="DestinationString"></param>
            <param name="SourceString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlInitializeBitMap(System.IntPtr@,System.UInt32,System.UInt32)">
            <summary>
            The RtlInitializeBitMap routine initializes the header of a bitmap variable.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlinitializebitmap
            </summary>
            <param name="BitMapHeader"></param>
            <param name="BitMapBuffer"></param>
            <param name="SizeOfBitMap"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlInt64ToUnicodeString(System.UInt32,System.UInt32,System.IntPtr@)">
            <summary>
            The RtlInt64ToUnicodeString routine converts a specified unsigned 64-bit integer value to a Unicode string that represents the value in a specified base.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlint64tounicodestring
            </summary>
            <param name="Value"></param>
            <param name="Base">
            
            </param>
            <param name="String"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlIntegerToUnicodeString(System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            The RtlIntegerToUnicodeString routine converts an unsigned integer value to a null-terminated string of one or more Unicode characters in the specified base.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlintegertounicodestring
            </summary>
            <param name="Value"></param>
            <param name="Base"></param>
            <param name="String"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlIoDecodeMemIoResource(System.IntPtr,System.UInt64@,System.UInt64@,System.UInt64@)">
            <summary>
            The RtlIoDecodeMemIoResource routine provides the address information that is contained in an IO_RESOURCE_DESCRIPTOR structure that describes a range of memory or I/O port addresses.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtliodecodememioresource
            </summary>
            <param name="Descriptor"></param>
            <param name="Alignment"></param>
            <param name="MinimumAddress"></param>
            <param name="MaximumAddress"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlIoEncodeMemIoResource(System.IntPtr,System.Byte,System.UInt64,System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            The RtlIoEncodeMemIoResource routine updates an IO_RESOURCE_DESCRIPTOR structure to describe a range of memory or I/O port addresses.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlioencodememioresource
            </summary>
            <param name="Descriptor"></param>
            <param name="Type"></param>
            <param name="Length"></param>
            <param name="Alignment"></param>
            <param name="MinimumAddress"></param>
            <param name="MaximumAddress"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlLengthSecurityDescriptor(System.IntPtr)">
            <summary>
            The RtlLengthSecurityDescriptor routine returns the size of a given security descriptor.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtllengthsecuritydescriptor
            </summary>
            <param name="SecurityDescriptor">Pointer to a SECURITY_DESCRIPTOR.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlMoveMemory(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
            The RtlMoveMemory routine copies the contents of a source memory block to a destination memory block,
            and supports overlapping source and destination memory blocks.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlmovememory
            </summary>
            <param name="Destination">A pointer to the destination memory block to copy the bytes to.</param>
            <param name="Source">A pointer to the source memory block to copy the bytes from.</param>
            <param name="Length">The number of bytes to copy from the source to the destination.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlNumberOfClearBits(System.IntPtr)">
            <summary>
            The RtlNumberOfClearBits routine returns a count of the clear bits in a given bitmap variable.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlnumberofclearbits
            </summary>
            <param name="BitMapHeader"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlNumberOfSetBits(System.IntPtr)">
             <summary>
             The RtlNumberOfSetBits routine returns a count of the set bits in a given bitmap variable.
             https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlnumberofsetbits
             </summary>
             <param name="BitMapHeader">
            A pointer to the RTL_BITMAP structure that describes the bitmap. This structure must have been initialized by the RtlInitializeBitMap routine.
             </param>
             <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlNumberOfSetBitsUlongPtr(System.UInt32)">
            <summary>
            The RtlNumberOfSetBitsUlongPtr routine returns the number of bits in the specified ULONG_PTR integer value that are set to one.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlnumberofsetbitsulongptr
            </summary>
            <param name="Target"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlQueryRegistryValues(System.String,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            The RtlQueryRegistryValues routine allows the caller to query several values from the registry subtree with a single call.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlqueryregistryvalues
            </summary>
            <param name="Path"></param>
            <param name="QueryTable"></param>
            <param name="Context"></param>
            <param name="Environment"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlUTF8StringToUnicodeString(System.IntPtr,System.IntPtr,System.Boolean)">
            <summary>
            The RtlUTF8StringToUnicodeString function converts the specified UTF8 source string into a Unicode string in accordance with the current system locale information.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlutf8stringtounicodestring
            </summary>
            <param name="DestinationString"></param>
            <param name="SourceString"></param>
            <param name="AllocateDestinationString"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlUTF8ToUnicodeN(System.IntPtr,System.UInt32,System.UInt32@,System.String,System.UInt32)">
            <summary>
            The RtlUTF8ToUnicodeN routine converts a UTF-8 string to a Unicode string.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlutf8tounicoden
            </summary>
            <param name="UnicodeStringDestination"></param>
            <param name="UnicodeStringMaxByteCount"></param>
            <param name="UnicodeStringActualByteCount"></param>
            <param name="UTF8StringSource"></param>
            <param name="UTF8StringByteCount"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlUpcaseUnicodeChar(System.Char)">
            <summary>
            The RtlUpcaseUnicodeChar routine converts the specified Unicode character to uppercase.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlupcaseunicodechar
            </summary>
            <param name="SourceCharacter">Specifies the character to convert.</param>
            <returns>RtlUpcaseUnicodeChar returns the uppercase version of the specified Unicode character.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlValidRelativeSecurityDescriptor(System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION)">
            <summary>
            The RtlValidRelativeSecurityDescriptor routine checks the validity of a self-relative security descriptor.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlvalidrelativesecuritydescriptor
            </summary>
            <param name="SecurityDescriptorInput">
            A pointer to the buffer that contains the security descriptor in self-relative format.
            The buffer must begin with a SECURITY_DESCRIPTOR structure,
            which is followed by the rest of the security descriptor data.
            </param>
            <param name="SecurityDescriptorLength">The size of the SecurityDescriptorInput structure.</param>
            <param name="RequiredInformation">
            A SECURITY_INFORMATION value that specifies the information that is required to be contained in the security descriptor.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlValidSecurityDescriptor(System.IntPtr)">
            <summary>
            The RtlValidSecurityDescriptor routine checks a given security descriptor's validity.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlvalidsecuritydescriptor
            </summary>
            <param name="SecurityDescriptor"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.RtlZeroMemory(System.IntPtr,System.UInt32)">
            <summary>
            The RtlZeroMemory routine fills a block of memory with zeros, given a pointer to the block and the length, in bytes, to be filled.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlzeromemory
            </summary>
            <param name="Destination"></param>
            <param name="Length"></param>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwClose(System.IntPtr)">
            <summary>
            The ZwClose routine closes an object handle.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwclose
            </summary>
            <param name="Handle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCommitComplete(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwCommitComplete routine notifies KTM that the calling resource manager has finished committing a transaction's data.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcommitcomplete
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="TmVirtualClock"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCommitEnlistment(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwCommitEnlistment routine initiates the commit operation for a specified enlistment's transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcommitenlistment
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="TmVirtualClock"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCommitTransaction(System.IntPtr,System.Boolean)">
            <summary>
            The ZwCommitTransaction routine initiates a commit operation for a specified transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcommittransaction
            </summary>
            <param name="TransactionHandle"></param>
            <param name="Wait"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCreateDirectoryObject(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr)">
            <summary>
            The ZwCreateDirectoryObject routine creates or opens an object-directory object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreatedirectoryobject
            </summary>
            <param name="DirectoryHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCreateEnlistment(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            The ZwCreateEnlistment routine creates a new enlistment object for a transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreateenlistment
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ResourceManagerHandle"></param>
            <param name="TransactionHandle"></param>
            <param name="ObjectAttributes"></param>
            <param name="CreateOptions"></param>
            <param name="NotificationMask"></param>
            <param name="EnlistmentKey"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCreateFile(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
            The ZwCreateFile routine creates a new file or opens an existing file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreatefile
            </summary>
            <param name="KeyHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="IoStatusBlock"></param>
            <param name="AllocationSize"></param>
            <param name="FileAttributes"></param>
            <param name="ShareAccess"></param>
            <param name="CreateDisposition"></param>
            <param name="CreateOptions"></param>
            <param name="EaBuffer"></param>
            <param name="EaLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCreateKey(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32@)">
            <summary>
            The ZwCreateKey routine creates a new registry key or opens an existing one.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreatekey
            </summary>
            <param name="KeyHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="TitleIndex"></param>
            <param name="Class"></param>
            <param name="CreateOptions"></param>
            <param name="Disposition"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCreateKeyTransacted(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.IntPtr,System.UInt32@)">
            <summary>
            The ZwCreateKeyTransacted routine creates a new registry key or opens an existing one, and it associates the key with a transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreatekeytransacted
            </summary>
            <param name="KeyHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="TitleIndex"></param>
            <param name="Class"></param>
            <param name="CreateOptions"></param>
            <param name="TransactionHandle"></param>
            <param name="Disposition"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCreateSection(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
            <summary>
            The ZwCreateSection routine creates a section object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreatesection
            </summary>
            <param name="SectionHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="MaximumSize"></param>
            <param name="SectionPageProtection"></param>
            <param name="AllocationAttributes"></param>
            <param name="FileHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCreateTransaction(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            The ZwCreateTransaction routine creates a transaction object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreatetransaction
            </summary>
            <param name="TransactionHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="Uow"></param>
            <param name="TmHandle"></param>
            <param name="CreateOptions"></param>
            <param name="IsolationLevel"></param>
            <param name="IsolationFlags"></param>
            <param name="Timeout"></param>
            <param name="Description"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwCreateTransactionManager(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            The ZwCreateTransactionManager routine creates a new transaction manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwcreatetransactionmanager
            </summary>
            <param name="TmHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="LogFileName"></param>
            <param name="CreateOptions"></param>
            <param name="CommitStrength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwDeleteKey(System.IntPtr)">
            <summary>
            The ZwDeleteKey routine deletes an open key from the registry.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwdeletekey
            </summary>
            <param name="KeyHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwDeleteValueKey(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwDeleteValueKey routine deletes a value entry matching a name from an open key in the registry. 
            If no such entry exists, an error is returned.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwdeletevaluekey
            </summary>
            <param name="KeyHandle"></param>
            <param name="ValueName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwEnumerateKey(System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS,System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            The ZwEnumerateKey routine returns information about a subkey of an open registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwenumeratekey
            </summary>
            <param name="KeyHandle"></param>
            <param name="Index"></param>
            <param name="KeyInformationClass"></param>
            <param name="KeyInformation"></param>
            <param name="Length"></param>
            <param name="ResultLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwEnumerateTransactionObject(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            The ZwEnumerateTransactionObject routine enumerates the KTM objects on a computer.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwenumeratetransactionobject
            </summary>
            <param name="RootObjectHandle"></param>
            <param name="QueryType"></param>
            <param name="ObjectCursor"></param>
            <param name="ObjectCursorLength"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwEnumerateValueKey(System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS,System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            The ZwEnumerateValueKey routine gets information about the value entries of an open key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwenumeratevaluekey
            </summary>
            <param name="KeyHandle"></param>
            <param name="Index"></param>
            <param name="KeyValueInformationClass"></param>
            <param name="KeyValueInformation"></param>
            <param name="Length"></param>
            <param name="ResultLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwFlushKey(System.IntPtr)">
            <summary>
            The ZwFlushKey routine forces a registry key to be committed to disk.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwflushkey
            </summary>
            <param name="KeyHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwGetNotificationResourceManager(System.IntPtr,System.IntPtr@,System.UInt32,System.IntPtr,System.UInt32@,System.UInt32,System.IntPtr)">
            <summary>
            The ZwGetNotificationResourceManager routine retrieves the next transaction notification from a specified resource manager's notification queue.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwgetnotificationresourcemanager
            </summary>
            <param name="ResourceManagerHandle"></param>
            <param name="TransactionNotification"></param>
            <param name="NotificationLength"></param>
            <param name="Timeout"></param>
            <param name="ReturnLength"></param>
            <param name="Asynchronous"></param>
            <param name="AsynchronousContext"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwLoadDriver(System.IntPtr)">
            <summary>
            The ZwLoadDriver routine loads a driver into the system.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwloaddriver
            </summary>
            <param name="DriverServiceName"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwMakeTemporaryObject(System.IntPtr)">
            <summary>
            The ZwMakeTemporaryObject routine changes the attributes of an object to make it temporary.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwmaketemporaryobject
            </summary>
            <param name="Handle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwMapViewOfSection(System.IntPtr,System.IntPtr,System.IntPtr@,System.UInt32,System.UInt32,System.IntPtr@,System.UInt32@,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            The ZwMapViewOfSection routine maps a view of a section into the virtual address space of a subject process.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwmapviewofsection
            </summary>
            <param name="SectionHandle"></param>
            <param name="ProcessHandle"></param>
            <param name="BaseAddress"></param>
            <param name="ZeroBits"></param>
            <param name="CommitSize"></param>
            <param name="SectionOffset"></param>
            <param name="ViewSize"></param>
            <param name="InheritDisposition"></param>
            <param name="AllocationType"></param>
            <param name="Win32Protect"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenEnlistment(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID,System.IntPtr)">
            <summary>
            The ZwOpenEnlistment routine obtains a handle to an existing enlistment object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopenenlistment
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="RmHandle"></param>
            <param name="EnlistmentGuid"></param>
            <param name="ObjectAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenEvent(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr)">
            <summary>
            The ZwOpenEvent routine opens a handle to an existing named event object with the specified desired access.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopenevent
            </summary>
            <param name="EventHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenFile(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.IntPtr@,System.UInt32,System.UInt32)">
            <summary>
            The ZwOpenFile routine opens an existing file, directory, device, or volume.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopenfile
            </summary>
            <param name="FileHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="IoStatusBlock"></param>
            <param name="ShareAccess"></param>
            <param name="OpenOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenKey(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr)">
            <summary>
            The ZwOpenKey routine opens an existing registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopenkey
            </summary>
            <param name="KeyHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenKeyEx(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.UInt32)">
            <summary>
            The ZwOpenKeyEx routine opens an existing registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopenkeyex
            </summary>
            <param name="KeyHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="OpenOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenKeyTransacted(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.IntPtr)">
            <summary>
            The ZwOpenKeyTransacted routine opens an existing registry key and associates the key with a transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopenkeytransacted
            </summary>
            <param name="ResourceManagerHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="TransactionHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenKeyTransactedEx(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,System.UInt32,System.IntPtr)">
            <summary>
            The ZwOpenKeyTransactedEx routine opens an existing registry key and associates the key with a transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopenkeytransactedex
            </summary>
            <param name="ResourceManagerHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="OpenOptions"></param>
            <param name="TransactionHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenResourceManager(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID,System.IntPtr)">
            <summary>
            The ZwOpenResourceManager routine returns a handle to an existing resource manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopenresourcemanager
            </summary>
            <param name="ResourceManagerHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="TmHandle"></param>
            <param name="ResourceManagerGuid"></param>
            <param name="ObjectAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenSection(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr)">
            <summary>
            The ZwOpenSection routine opens a handle for an existing section object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopensection
            </summary>
            <param name="LinkHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenSymbolicLinkObject(System.IntPtr@,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr)">
            <summary>
            The ZwOpenSymbolicLinkObject routine opens an existing symbolic link.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopensymboliclinkobject
            </summary>
            <param name="LinkHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenTransaction(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID,System.IntPtr)">
            <summary>
            The ZwOpenTransaction routine obtains a handle to an existing transaction object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopentransaction
            </summary>
            <param name="TransactionHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="Uow"></param>
            <param name="TmHandle"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwOpenTransactionManager(System.IntPtr@,System.UInt32,System.IntPtr,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.GUID,System.UInt32)">
            <summary>
            The ZwOpenTransactionManager routine obtains a handle to an existing transaction manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwopentransactionmanager
            </summary>
            <param name="TmHandle"></param>
            <param name="DesiredAccess"></param>
            <param name="ObjectAttributes"></param>
            <param name="LogFileName"></param>
            <param name="TmIdentity"></param>
            <param name="OpenOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwPrePrepareComplete(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwPrePrepareComplete routine notifies KTM that the calling resource manager has finished preliminary preparation of a transaction's data.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwprepreparecomplete
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="TmVirtualClock"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwPrePrepareEnlistment(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwPrePrepareEnlistment routine initiates the pre-prepare operation for a specified enlistment's transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwpreprepareenlistment
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="TmVirtualClock"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwPrepareComplete(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwPrepareComplete routine notifies KTM that the calling resource manager has finished preparing a transaction's data.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwpreparecomplete
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="TmVirtualClock"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwPrepareEnlistment(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwPrepareEnlistment routine initiates the prepare operation for a specified enlistment's transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwprepareenlistment
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="TmVirtualClock"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryFullAttributesFile(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwQueryFullAttributesFile routine supplies network open information for the specified file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwqueryfullattributesfile
            </summary>
            <param name="ObjectAttributes"></param>
            <param name="FileInformation"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryInformationByName(System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.FILE_INFORMATION_CLASS)">
            <summary>
            ZwQueryInformationByName returns the requested information about a file specified by file name.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwqueryinformationbyname
            </summary>
            <param name="ObjectAttributes"></param>
            <param name="IoStatusBlock"></param>
            <param name="FileInformation"></param>
            <param name="Length"></param>
            <param name="FileInformationClass"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryInformationEnlistment(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.ENLISTMENT_INFORMATION_CLASS,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The ZwQueryInformationEnlistment routine retrieves information about a specified enlistment object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwqueryinformationenlistment
            </summary>
            <param name="EnlistmentHandle"></param>
            <param name="EnlistmentInformationClass"></param>
            <param name="EnlistmentInformation"></param>
            <param name="EnlistmentInformationLength"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryInformationFile(System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.FILE_INFORMATION_CLASS)">
            <summary>
            The ZwQueryInformationFile routine returns various kinds of information about a file object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwqueryinformationfile
            </summary>
            <param name="FileHandle"></param>
            <param name="IoStatusBlock"></param>
            <param name="FileInformation"></param>
            <param name="Length"></param>
            <param name="FileInformationClass"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryInformationResourceManager(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.RESOURCEMANAGER_INFORMATION_CLASS,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The ZwQueryInformationResourceManager routine retrieves information about a specified resource manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwqueryinformationresourcemanager
            </summary>
            <param name="ResourceManagerHandle"></param>
            <param name="ResourceManagerInformationClass"></param>
            <param name="ResourceManagerInformation"></param>
            <param name="ResourceManagerInformationLength"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryInformationTransaction(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_INFORMATION_CLASS,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The ZwQueryInformationTransaction routine retrieves information about a specified transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwqueryinformationtransaction
            </summary>
            <param name="TransactionHandle"></param>
            <param name="TransactionInformationClass"></param>
            <param name="TransactionInformation"></param>
            <param name="TransactionInformationLength"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryInformationTransactionManager(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.TRANSACTIONMANAGER_INFORMATION_CLASS,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The ZwQueryInformationTransactionManager routine retrieves information about a specified transaction manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwqueryinformationtransactionmanager
            </summary>
            <param name="TransactionManagerHandle"></param>
            <param name="TransactionManagerInformationClass"></param>
            <param name="TransactionManagerInformation"></param>
            <param name="TransactionManagerInformationLength"></param>
            <param name="ReturnLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryKey(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The ZwQueryKey routine provides information about the class of a registry key, and the number and sizes of its subkeys.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwquerykey
            </summary>
            <param name="KeyHandle">
            Handle to the registry key to obtain information about. 
            This handle is created by a successful call to ZwCreateKey or ZwOpenKey.
            </param>
            <param name="KeyInformationClass">
            Specifies a KEY_INFORMATION_CLASS value that determines the type of information returned in the KeyInformation buffer.
            </param>
            <param name="KeyInformation">
            Pointer to a caller-allocated buffer that receives the requested information.
            </param>
            <param name="Length">
            Specifies the size, in bytes, of the KeyInformation buffer.
            </param>
            <param name="ResultLength">
            Pointer to a variable that receives the size, in bytes, of the requested key information. 
            If ZwQueryKey returns STATUS_SUCCESS, the variable contains the amount of data returned. 
            If ZwQueryKey returns STATUS_BUFFER_OVERFLOW or STATUS_BUFFER_TOO_SMALL, 
            you can use the value of the variable to determine the required buffer size.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQuerySymbolicLinkObject(System.IntPtr,System.IntPtr,System.UInt32@)">
            <summary>
            The ZwQuerySymbolicLinkObject routine returns a Unicode string that contains the target of a symbolic link.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwquerysymboliclinkobject
            </summary>
            <param name="LinkHandle">
            Handle to the symbolic-link object that you want to query. 
            This handle is created by a successful call to ZwOpenSymbolicLinkObject.
            </param>
            <param name="LinkTarget">Pointer to an initialized Unicode string that receives the target of the symbolic link.</param>
            <param name="ReturnedLength">
            contains the maximum number of bytes to copy into the Unicode string at LinkTarget. 
            On output, the unsigned long integer contains the length of the Unicode string naming the target of the symbolic link.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwQueryValueKey(System.IntPtr,System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            The ZwQueryValueKey routine returns a value entry for a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwqueryvaluekey
            </summary>
            <param name="KeyHandle">
            Handle to the key to read value entries from. This handle is created by a successful call to ZwCreateKey or ZwOpenKey.
            </param>
            <param name="ValueName">
            Pointer to the name of the value entry to obtain data for.
            </param>
            <param name="KeyValueInformationClass">
            A KEY_VALUE_INFORMATION_CLASS value that determines the type of information returned in the KeyValueInformation buffer.
            </param>
            <param name="KeyValueInformation">
            Pointer to a caller-allocated buffer that receives the requested information.
            </param>
            <param name="Length">
            Specifies the size, in bytes, of the KeyValueInformation buffer.
            </param>
            <param name="ResultLength">
            Pointer to a variable that receives the size, in bytes, of the key information. 
            If the ZwQueryValueKey routine returns STATUS_SUCCESS, callers can use the value of this variable to determine the amount of data returned. 
            If the routine returns STATUS_BUFFER_OVERFLOW or STATUS_BUFFER_TOO_SMALL, 
            callers can use the value of this variable to determine the size of buffer required to hold the key information.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwReadFile(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.LARGE_INTEGER@,System.UInt32@)">
            <summary>
            The ZwReadFile routine reads data from an open file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwreadfile
            </summary>
            <param name="FileHandle">
            Handle to the file object. This handle is created by a successful call to ZwCreateFile or ZwOpenFile.
            </param>
            <param name="Event">
            Optionally, a handle to an event object to set to the signaled state after the read operation completes. 
            Device and intermediate drivers should set this parameter to NULL.
            </param>
            <param name="ApcRoutine">
            This parameter is reserved. Device and intermediate drivers should set this pointer to NULL.
            </param>
            <param name="ApcContext">
            This parameter is reserved. Device and intermediate drivers should set this pointer to NULL.
            </param>
            <param name="IoStatusBlock">
            Pointer to an IO_STATUS_BLOCK structure that receives the final completion status and information about the requested read operation.
            The Information member receives the number of bytes actually read from the file.
            </param>
            <param name="Buffer">
            Pointer to a caller-allocated buffer that receives the data read from the file.
            </param>
            <param name="Length">
            The size, in bytes, of the buffer pointed to by Buffer.
            </param>
            <param name="ByteOffset">
            Pointer to a variable that specifies the starting byte offset in the file where the read operation will begin. 
            If an attempt is made to read beyond the end of the file, ZwReadFile returns an error.
            </param>
            <param name="Key">Device and intermediate drivers should set this pointer to NULL.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwReadOnlyEnlistment(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwReadOnlyEnlistment routine sets a specified enlistment to be read-only.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwreadonlyenlistment
            </summary>
            <param name="EnlistmentHandle">
            A handle to an enlistment object that was obtained by a previous call to ZwCreateEnlistment or ZwOpenEnlistment. 
            The handle must have ENLISTMENT_SUBORDINATE_RIGHTS access to the object.
            </param>
            <param name="TmVirtualClock">
            A pointer to a virtual clock value. 
            This parameter is optional and can be NULL.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwRecoverEnlistment(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwRecoverEnlistment routine initiates a recovery operation for the transaction that is associated with a specified enlistment.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwrecoverenlistment
            </summary>
            <param name="EnlistmentHandle">
            A handle to an enlistment object that was obtained by a previous call to ZwCreateEnlistment or ZwOpenEnlistment. 
            The handle must have ENLISTMENT_RECOVER access to the object.
            </param>
            <param name="EnlistmentKey">
            A pointer to the enlistment key value that the resource manager previously specified as the EnlistmentKey parameter to ZwCreateEnlistment. 
            This parameter is optional and can be NULL if the resource manager did not provide an enlistment key when it called ZwCreateEnlistment.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwRecoverResourceManager(System.IntPtr)">
            <summary>
            The ZwRecoverResourceManager routine tries to recover the transaction that is associated with each enlistment of a specified resource manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwrecoverresourcemanager
            </summary>
            <param name="ResourceManagerHandle">
            A handle to a resource manager object that was obtained by a previous call to ZwCreateResourceManager or ZwOpenResourceManager. 
            The handle must have RESOURCEMANAGER_RECOVER access to the object.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwRecoverTransactionManager(System.IntPtr)">
            <summary>
            The ZwRecoverTransactionManager routine reconstructs the state of the transaction manager object (including all transactions, enlistments, and resource managers) from the recovery information that is in the log stream.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwrecovertransactionmanager
            </summary>
            <param name="TransactionManagerHandle">
            A handle to a transaction manager object that was obtained by a previous call to ZwCreateTransactionManager or ZwOpenTransactionManager. 
            The handle must have TRANSACTIONMANAGER_RECOVER access to the object.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwRollbackComplete(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwRollbackComplete routine notifies KTM that the calling resource manager has finished rolling back a transaction's data.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwrollbackcomplete
            </summary>
            <param name="EnlistmentHandle">
            A handle to an enlistment object that was obtained by a previous call to ZwCreateEnlistment or ZwOpenEnlistment. 
            The handle must have ENLISTMENT_SUBORDINATE_RIGHTS access to the object.
            </param>
            <param name="TmVirtualClock">
            A pointer to a virtual clock value. 
            This parameter is optional and can be NULL. 
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwRollbackEnlistment(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwRollbackEnlistment routine rolls back the transaction that is associated with a specified enlistment.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwrollbackenlistment
            </summary>
            <param name="EnlistmentHandle">
            A handle to an enlistment object that was obtained by a previous call to ZwCreateEnlistment or ZwOpenEnlistment. 
            The handle must have ENLISTMENT_SUBORDINATE_RIGHTS access to the object.
            </param>
            <param name="TmVirtualClock">
            A pointer to a virtual clock value. 
            This parameter is optional and can be NULL. 
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwRollbackTransaction(System.IntPtr,System.Boolean)">
            <summary>
            The ZwRollbackTransaction routine initiates a rollback operation for a specified transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwrollbacktransaction
            </summary>
            <param name="TransactionHandle">
            A handle to a transaction object that was obtained by a previous call to ZwCreateTransaction or ZwOpenTransaction. 
            The handle must have TRANSACTION_ROLLBACK access to the object.
            </param>
            <param name="Wait">
            A Boolean value that the caller sets to TRUE for synchronous operation or FALSE for asynchronous operation. 
            If this parameter is set to TRUE, the call does not return until the rollback operation is complete.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwRollforwardTransactionManager(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwRollforwardTransactionManager routine initiates recovery operations for all of the in-progress transactions that are assigned to a specified transaction manager.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwrollforwardtransactionmanager
            </summary>
            <param name="TransactionManagerHandle">
            A handle to a transaction manager object that was obtained by a previous call to ZwCreateTransactionManager or ZwOpenTransactionManager.
            The handle must have TRANSACTIONMANAGER_RECOVER access to the object.
            </param>
            <param name="TmVirtualClock">
            A pointer to a virtual clock value. 
            This parameter is optional and can be NULL. 
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwSetInformationEnlistment(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.ENLISTMENT_INFORMATION_CLASS,System.IntPtr,System.UInt32)">
            <summary>
            The ZwSetInformationEnlistment routine sets information for a specified enlistment object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwsetinformationenlistment
            </summary>
            <param name="EnlistmentHandle">
            A handle to an enlistment object that was obtained by a previous call to ZwCreateEnlistment or ZwOpenEnlistment. 
            The handle must have ENLISTMENT_SET_INFORMATION access to the object.
            </param>
            <param name="EnlistmentInformationClass">
            A ENLISTMENT_INFORMATION_CLASS-typed enumeration value that specifies the type of information to be set. 
            This value must be EnlistmentRecoveryInformation.
            
            The enumeration's EnlistmentBasicInformation and EnlistmentFullInformation values are not used with ZwSetInformationEnlistment.
            </param>
            <param name="EnlistmentInformation">
            A pointer to a caller-allocated buffer that contains caller-defined recovery information for the enlistment.
            </param>
            <param name="EnlistmentInformationLength">
            The length, in bytes, of the buffer that the EnlistmentInformation parameter points to.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwSetInformationFile(System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.FILE_INFORMATION_CLASS)">
            <summary>
            The ZwSetInformationFile routine changes various kinds of information about a file object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwsetinformationfile
            </summary>
            <param name="FileHandle">
            Handle to the file object. This handle is created by a successful call to ZwCreateFile or ZwOpenFile.
            </param>
            <param name="IoStatusBlock">
            Pointer to an IO_STATUS_BLOCK structure that receives the final completion status and information about the requested operation.
            The Information member receives the number of bytes set on the file.
            </param>
            <param name="FileInformation">
            Pointer to a buffer that contains the information to set for the file. 
            The particular structure in this buffer is determined by the FileInformationClass parameter. 
            For example, if the FileInformationClass parameter is set to the FileDispositionInformationEx constant, 
            this parameter should be a pointer to a FILE_DISPOSITION_INFORMATION_EX structure.
            </param>
            <param name="Length">
            The size, in bytes, of the FileInformation buffer.
            </param>
            <param name="FileInformationClass">
            The type of information, supplied in the buffer pointed to by FileInformation, to set for the file.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwSetInformationResourceManager(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.RESOURCEMANAGER_INFORMATION_CLASS,System.IntPtr,System.UInt32)">
            <summary>
            The ZwSetInformationResourceManager routine is not used.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwsetinformationresourcemanager
            </summary>
            <param name="ResourceManagerHandle"></param>
            <param name="ResourceManagerInformationClass"></param>
            <param name="ResourceManagerInformation"></param>
            <param name="ResourceManagerInformationLength"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwSetInformationTransaction(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_INFORMATION_CLASS,System.IntPtr,System.UInt32)">
            <summary>
            The ZwSetInformationTransaction routine sets information for a specified transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwsetinformationtransaction
            </summary>
            <param name="TransactionHandle">
            A handle to a transaction object that was obtained by a previous call to ZwCreateTransaction or ZwOpenTransaction. 
            The handle must have TRANSACTION_SET_INFORMATION access to the object.
            </param>
            <param name="TransactionInformationClass">
            A TRANSACTION_INFORMATION_CLASS-typed value that specifies the type of information to set. 
            The value must be TransactionPropertiesInformation.
            </param>
            <param name="TransactionInformation">
            A pointer to a caller-allocated buffer that contains the information to set. 
            The buffer's structure type must be TRANSACTION_PROPERTIES_INFORMATION.
            </param>
            <param name="TransactionInformationLength">
            The length, in bytes, of the buffer that the TransactionInformation parameter points to.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwSetValueKey(System.IntPtr,System.IntPtr,System.UInt32,Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE,System.IntPtr,System.UInt32)">
            <summary>
            The ZwSetValueKey routine creates or replaces a registry key's value entry.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwsetvaluekey
            </summary>
            <param name="KeyHandle">
            Handle to the registry key to write a value entry for. 
            This handle is created by a successful call to ZwCreateKey or ZwOpenKey.
            </param>
            <param name="ValueName">
            Pointer to the name of the value entry for which the data is to be written. 
            This parameter can be a NULL pointer if the value entry has no name. 
            If a name string is specified and the given name is not unique relative to its containing key, 
            the data for an existing value entry is replaced.
            </param>
            <param name="TitleIndex">
            This parameter is reserved. Device and intermediate drivers should set this parameter to zero.
            </param>
            <param name="Type">
            Device drivers should not attempt to call ZwSetValueKey to explicitly write value entries in a subkey of the \Registry...\ResourceMap key.
            Only the system can write value entries to the \Registry...\HardwareDescription tree.
            </param>
            <param name="Data">
            Pointer to a caller-allocated buffer that contains the data for the value entry.
            </param>
            <param name="DataSize">
            Specifies the size, in bytes, of the Data buffer. 
            If Type is REG_XXX_SZ, this value must include space for any terminating zeros.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwSinglePhaseReject(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwSinglePhaseReject routine informs KTM that the calling resource manager will not support single-phase commit operations for a specified enlistment.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwsinglephasereject
            </summary>
            <param name="EnlistmentHandle">
            A handle to an enlistment object that was obtained by a previous call to ZwCreateEnlistment or ZwOpenEnlistment. 
            The handle must have ENLISTMENT_SUBORDINATE_RIGHTS access to the object.
            </param>
            <param name="TmVirtualClock">
            A pointer to a virtual clock value. This parameter is optional and can be NULL.
            </param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwUnloadDriver(System.IntPtr)" -->
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwUnmapViewOfSection(System.IntPtr,System.IntPtr)">
            <summary>
            The ZwUnmapViewOfSection routine unmaps a view of a section from the virtual address space of a subject process.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwunmapviewofsection
            </summary>
            <param name="ProcessHandle">
            Handle to a process object that was previously passed to ZwMapViewOfSection.
            </param>
            <param name="BaseAddress">
            Pointer to the base virtual address of the view to unmap. This value can be any virtual address within the view.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTDLL.ZwWriteFile(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32@)">
            <summary>
            The ZwWriteFile routine writes data to an open file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-zwwritefile
            </summary>
            <param name="FileHandle">
            Handle to the file object. 
            This handle is created by a successful call to ZwCreateFile or ZwOpenFile.
            </param>
            <param name="Event">
            Optionally, a handle to an event object to set to the signaled state after the write operation completes. 
            Device and intermediate drivers should set this parameter to NULL.
            </param>
            <param name="ApcRoutine">
            This parameter is reserved. 
            Device and intermediate drivers should set this pointer to NULL.
            </param>
            <param name="ApcContext">
            This parameter is reserved. 
            Device and intermediate drivers should set this pointer to NULL.
            </param>
            <param name="IoStatusBlock">
            Pointer to an IO_STATUS_BLOCK structure that receives the final completion status and information about the requested write operation. 
            The Information member receives the number of bytes actually written to the file.
            </param>
            <param name="Buffer">
            Pointer to a caller-allocated buffer that contains the data to write to the file.
            </param>
            <param name="Length">
            The size, in bytes, of the buffer pointed to by Buffer.
            </param>
            <param name="ByteOffset">
            Pointer to a variable that specifies the starting byte offset in the file for beginning the write operation. 
            If Length and ByteOffset specify a write operation past the current end-of-file mark, 
            ZwWriteFile automatically extends the file and updates the end-of-file mark; 
            any bytes that are not explicitly written between such old and new end-of-file marks are defined to be zero.
            
            If the call to ZwCreateFile set only the DesiredAccess flag FILE_APPEND_DATA, ByteOffset is ignored. 
            Data in the given Buffer, for Length bytes, is written starting at the current end of file.
            
            If the call to ZwCreateFile set either of the CreateOptions flags, 
            FILE_SYNCHRONOUS_IO_ALERT or FILE_SYNCHRONOUS_IO_NONALERT, 
            the I/O Manager maintains the current file position. If so, 
            the caller of ZwWriteFile can specify that the current file position offset be used instead of an explicit ByteOffset value. 
            This specification can be made by using one of the following methods:
            
            Specify a pointer to a LARGE_INTEGER value with the HighPart member set to -1 and the LowPart member set to the system-defined value FILE_USE_FILE_POINTER_POSITION.
            Pass a NULL pointer for ByteOffset.
            </param>
            <param name="Key">
            Device and intermediate drivers should set this pointer to NULL.
            </param>
            <returns>ZwWriteFile returns STATUS_SUCCESS on success or the appropriate NTSTATUS error code on failure.</returns>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Documented.NTOSKRNL">
            <summary>
            https://github.com/VollRagm/KernelSharp/blob/main/KernelSharp/WDK.cs
            https://github.com/ZeroLP/ZeroKernel/blob/master/ZeroKernel/ZeroKernel/WDK.cs
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTOSKRNL.ZwUnloadDriver(System.IntPtr)">
            same as Ntdll
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTOSKRNL.ZwUnmapViewOfSection(System.IntPtr,System.IntPtr)">
            same as Ntdll
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.NTOSKRNL.ZwWriteFile(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.UInt32,System.IntPtr,System.UInt32@)">
            same as Ntdll
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Documented.PSAPI">
            <summary>
            Process Status API (PSAPI) 
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.EmptyWorkingSet(System.IntPtr)">
            <summary>
            Removes as many pages as possible from the working set of the specified process.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-emptyworkingset
            </summary>
            <param name="hProcess">
            A handle to the process.
            The handle must have the PROCESS_QUERY_INFORMATION or PROCESS_QUERY_LIMITED_INFORMATION access right and the PROCESS_SET_QUOTA access right.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.EnumDeviceDrivers(System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            Retrieves the load address for each device driver in the system.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumdevicedrivers
            </summary>
            <param name="lpImageBase">An array that receives the list of load addresses for the device drivers.</param>
            <param name="cb">
            The size of the lpImageBase array, in bytes.
            If the array is not large enough to store the load addresses, the lpcbNeeded parameter receives the required size of the array.
            </param>
            <param name="lpcbNeeded">The number of bytes returned in the lpImageBase array.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.EnumPageFilesA(System.IntPtr@,System.IntPtr)">
            <summary>
            Calls the callback routine for each installed pagefile in the system.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumpagefilesa
            </summary>
            <param name="pCallBackRoutine">A pointer to the routine called for each pagefile.</param>
            <param name="pContext">The user-defined data passed to the callback routine.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.EnumPageFilesW(System.IntPtr,System.IntPtr)">
            almost same as EnumPageFilesA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.EnumProcesses(System.UInt32@,System.UInt32,System.UInt32@)">
            <summary>
            Retrieves the process identifier for each process object in the system.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocesses
            </summary>
            <param name="lpidProcess">[out] lpidProcess:A pointer to an array that receives the list of process identifiers.</param>
            <param name="cb">[in] cb:The size of the pProcessIds array, in bytes.</param>
            <param name="lpcbNeeded">[out] lpcbNeeded:The number of bytes returned in the pProcessIds array.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.EnumProcessModules(System.IntPtr,System.IntPtr@,System.UInt32,System.UInt32@)">
            <summary>
            Retrieves a handle for each module in the specified process.
            To control whether a 64-bit application enumerates 32-bit modules, 64-bit modules, or both types of modules, use the EnumProcessModulesEx function.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocessmodules
            </summary>
            <param name="hProcess">A handle to the process.</param>
            <param name="lphModule">An array that receives the list of module handles.</param>
            <param name="cb">The size of the lphModule array, in bytes.</param>
            <param name="lpcbNeeded">The number of bytes required to store all module handles in the lphModule array.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.EnumProcessModulesEx(System.IntPtr,System.IntPtr@,System.UInt32,System.UInt32@,Ban3.Infrastructures.NativeLibs.Enums.LIST_MODULES_FLAGS)">
            <summary>
            Retrieves a handle for each module in the specified process that meets the specified filter criteria.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-enumprocessmodulesex
            </summary>
            <param name="hProcess">A handle to the process.</param>
            <param name="lphModule">An array that receives the list of module handles.</param>
            <param name="cb">The size of the lphModule array, in bytes.</param>
            <param name="lpcbNeeded">The number of bytes required to store all module handles in the lphModule array.</param>
            <param name="dwFilterFlag"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetDeviceDriverBaseNameA(System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves the base name of the specified device driver.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getdevicedriverbasenamea
            </summary>
            <param name="ImageBase">
            The load address of the device driver.
            This value can be retrieved using the EnumDeviceDrivers function.
            </param>
            <param name="lpFilename"></param>
            <param name="nSize"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetDeviceDriverBaseNameW(System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            almost same as GetDeviceDriverBaseNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetDeviceDriverFileNameA(System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves the path available for the specified device driver.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getdevicedriverfilenamea
            </summary>
            <param name="ImageBase">The load address of the device driver.</param>
            <param name="lpFilename">A pointer to the buffer that receives the path to the device driver.</param>
            <param name="nSize">
            The size of the lpFilename buffer, in characters.
            If the buffer is not large enough to store the path plus the terminating null character, the string is truncated.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetDeviceDriverFileNameW(System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            almost same as GetDeviceDriverFileNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetMappedFileNameA(System.IntPtr,System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Checks whether the specified address is within a memory-mapped file in the address space of the specified process.
            If so, the function returns the name of the memory-mapped file.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getmappedfilenamea
            </summary>
            <param name="hProcess">
            A handle to the process.
            The handle must have the PROCESS_QUERY_INFORMATION access right.
            </param>
            <param name="lpv">The address to be verified.</param>
            <param name="lpFilename">A pointer to the buffer that receives the name of the memory-mapped file to which the address specified by lpv belongs.</param>
            <param name="nSize">The size of the lpFilename buffer, in characters.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetMappedFileNameW(System.IntPtr,System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            almost same as GetMappedFileNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetModuleBaseNameA(System.IntPtr,System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves the base name of the specified module.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getmodulebasenamea
            </summary>
            <param name="hProcess">
            A handle to the process that contains the module.
            The handle must have the PROCESS_QUERY_INFORMATION and PROCESS_VM_READ access rights.
            </param>
            <param name="hModule">
            A handle to the module. If this parameter is NULL,
            this function returns the name of the file used to create the calling process.
            </param>
            <param name="lpBaseName">
            A pointer to the buffer that receives the base name of the module.
            If the base name is longer than maximum number of characters specified by the nSize parameter, the base name is truncated.
            </param>
            <param name="nSize">The size of the lpBaseName buffer, in characters.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetModuleBaseNameW(System.IntPtr,System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            almost same as GetModuleBaseNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetModuleFileNameExA(System.IntPtr,System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves the fully qualified path for the file containing the specified module.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getmodulefilenameexa
            </summary>
            <param name="hProcess">
            A handle to the process that contains the module.
            The handle must have the PROCESS_QUERY_INFORMATION and PROCESS_VM_READ access rights.
            The GetModuleFileNameEx function does not retrieve the path for modules that were loaded using the LOAD_LIBRARY_AS_DATAFILE flag.
            </param>
            <param name="hModule">
            A handle to the module.
            If this parameter is NULL, GetModuleFileNameEx returns the path of the executable file of the process specified in hProcess.
            </param>
            <param name="lpFilename">
            A pointer to a buffer that receives the fully qualified path to the module.
            If the size of the file name is larger than the value of the nSize parameter,
            the function succeeds but the file name is truncated and null-terminated.
            </param>
            <param name="nSize">The size of the lpFilename buffer, in characters.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetModuleFileNameExW(System.IntPtr,System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            almost same as GetModuleFileNameExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetModuleInformation(System.IntPtr,System.IntPtr,Ban3.Infrastructures.NativeLibs.Structs.MODULEINFO@,System.UInt32)">
            <summary>
            Retrieves information about the specified module in the MODULEINFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getmoduleinformation
            </summary>
            <param name="hProcess">
            A handle to the process that contains the module.
            The handle must have the PROCESS_QUERY_INFORMATION and PROCESS_VM_READ access rights.
            </param>
            <param name="hModule">A handle to the module.</param>
            <param name="lpmodinfo">A pointer to the MODULEINFO structure that receives information about the module.</param>
            <param name="cb">The size of the MODULEINFO structure, in bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetPerformanceInfo(System.IntPtr@,System.UInt32)">
            <summary>
            Retrieves the performance values contained in the PERFORMANCE_INFORMATION structure.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getperformanceinfo
            </summary>
            <param name="pPerformanceInformation">
            A pointer to a PERFORMANCE_INFORMATION structure that receives the performance information.
            </param>
            <param name="cb">The size of the PERFORMANCE_INFORMATION structure, in bytes.</param>
            <returns>If the function succeeds, the return value is TRUE. If the function fails, the return value is FALSE.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetProcessImageFileNameA(System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            <summary>
            Retrieves the name of the executable file for the specified process.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getprocessimagefilenamea
            </summary>
            <param name="hProcess">A handle to the process. The handle must have the PROCESS_QUERY_INFORMATION or PROCESS_QUERY_LIMITED_INFORMATION access right.</param>
            <param name="lpImageFileName">A pointer to a buffer that receives the full path to the executable file.</param>
            <param name="nSize">The size of the lpImageFileName buffer, in characters.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetProcessImageFileNameW(System.IntPtr,System.Text.StringBuilder,System.UInt32)">
            almost same as GetProcessImageFileNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetProcessMemoryInfo(System.IntPtr,System.IntPtr@,System.UInt32)">
            <summary>
            Retrieves information about the memory usage of the specified process.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getprocessmemoryinfo
            </summary>
            <param name="hProcess">
            A handle to the process.
            The handle must have the PROCESS_QUERY_INFORMATION or PROCESS_QUERY_LIMITED_INFORMATION access right.
            For more information, see Process Security and Access Rights.
            Windows Server 2003 and Windows XP: The handle must have the PROCESS_QUERY_INFORMATION and PROCESS_VM_READ access rights.
            </param>
            <param name="ppsmemCounters">
            A pointer to the PROCESS_MEMORY_COUNTERS or PROCESS_MEMORY_COUNTERS_EX structure that receives information about the memory usage of the process.
            </param>
            <param name="cb">The size of the ppsmemCounters structure, in bytes.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetWsChanges(System.IntPtr,System.IntPtr@,System.UInt32)">
            <summary>
            Retrieves information about the pages that have been added to the working set of the specified process since the last time this function or the InitializeProcessForWsWatch function was called.
            To retrieve extended information, use the GetWsChangesEx function.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getwschanges
            </summary>
            <param name="hProcess">
            A handle to the process.
            The handle must have the PROCESS_QUERY_INFORMATION access right.
            For more information, see Process Security and Access Rights.
            </param>
            <param name="lpWatchInfo">
            A pointer to a user-allocated buffer that receives an array of PSAPI_WS_WATCH_INFORMATION structures.
            The array is terminated with a structure whose FaultingPc member is NULL.
            </param>
            <param name="cb">The size of the lpWatchInfo buffer, in bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.GetWsChangesEx(System.IntPtr,System.IntPtr@,System.UInt32)">
            <summary>
            Retrieves extended information about the pages that have been added to the working set of the specified process since the last time this function or the InitializeProcessForWsWatch function was called.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-getwschangesex
            </summary>
            <param name="hProcess"></param>
            <param name="lpWatchInfoEx">A pointer to a user-allocated buffer that receives an array of PSAPI_WS_WATCH_INFORMATION_EX structures.
            The array is terminated with a structure whose FaultingPc member is NULL.
            </param>
            <param name="cb">The size of the lpWatchInfoEx buffer, in bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.InitializeProcessForWsWatch(System.IntPtr)">
            <summary>
            Initiates monitoring of the working set of the specified process.
            You must call this function before calling the GetWsChanges function.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-initializeprocessforwswatch
            </summary>
            <param name="hProcess">A handle to the process. The handle must have the PROCESS_QUERY_INFORMATION access right.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.QueryWorkingSet(System.IntPtr,System.IntPtr@,System.UInt32)">
            <summary>
            Retrieves information about the pages currently added to the working set of the specified process.
            To retrieve working set information for a subset of virtual addresses, or to retrieve information about pages that are not part of the working set (such as AWE or large pages), use the QueryWorkingSetEx function.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-queryworkingset
            </summary>
            <param name="hProcess">
            A handle to the process. The handle must have the PROCESS_QUERY_INFORMATION and PROCESS_VM_READ access rights.
            </param>
            <param name="pv">
            A pointer to the buffer that receives the information. For more information, see PSAPI_WORKING_SET_INFORMATION.
            If the buffer pointed to by the pv parameter is not large enough to contain all working set entries for the target process,
            the function fails with ERROR_BAD_LENGTH.
            In this case, the NumberOfEntries member of the PSAPI_WORKING_SET_INFORMATION structure is set to the required number of entries,
            but the function does not return information about the working set entries.
            </param>
            <param name="cb">The size of the pv buffer, in bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.PSAPI.QueryWorkingSetEx(System.IntPtr,System.IntPtr@,System.UInt32)">
            <summary>
            Retrieves extended information about the pages at specific virtual addresses in the address space of the specified process.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/nf-psapi-queryworkingsetex
            </summary>
            <param name="hProcess">A handle to the process.</param>
            <param name="pv">A pointer to an array of PSAPI_WORKING_SET_EX_INFORMATION structures.</param>
            <param name="cb">The size of the pv buffer, in bytes.</param>
            <returns></returns>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Documented.USER32">
            <summary>
            ddeml.h This header is used by Data Exchange.
            https://learn.microsoft.com/en-us/windows/win32/api/ddeml/
            </summary>
            <summary>
            winuser.h
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-addclipboardformatlistener
            </summary>
            <summary>
            winuser.h Dialog Boxes parts
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-createdialoga
            </summary>
            <summary>
            winuser.h Display Devices Reference parts
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-displayconfiggetdeviceinfo
            </summary>
            <summary>
            winuser.h
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-adjustwindowrectexfordpi
            </summary>
            <summary>
            winuser.h
            https://learn.microsoft.com/en-us/windows/win32/api/_inputdev/
            </summary>
            <summary>
            winuser.h
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-appendmenua
            </summary>
            <summary>
            winuser.h Pointer Input Messages and Notifications parts
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-enablemouseinpointer
            </summary>
            <summary>
            winuser.h SystemService parts
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-exitwindows
            </summary>
            <summary>
            winuser.h
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-adjustwindowrect
            </summary>
            <summary>
            winuser.h
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-checkdlgbutton
            </summary>
            <summary>
            winuser.h Windows GDI parts
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-beginpaint
            </summary>
            <summary>
            winuser.h Window Stations and Desktops parts
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-closedesktop
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.AddClipboardFormatListener(System.IntPtr)">
            <summary>
            Places the given window in the system-maintained clipboard format listener list.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-addclipboardformatlistener
            </summary>
            <param name="hwnd">
            A handle to the window to be placed in the clipboard format listener list.
            </param>
            <returns>Returns TRUE if successful, FALSE otherwise. Call GetLastError for additional details.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.ChangeClipboardChain(System.IntPtr,System.IntPtr)">
            <summary>
            Removes a specified window from the chain of clipboard viewers.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-changeclipboardchain
            </summary>
            <param name="hWndRemove">
            A handle to the window to be removed from the chain. 
            The handle must have been passed to the SetClipboardViewer function.
            </param>
            <param name="hWndNewNext">
            A handle to the window that follows the hWndRemove window in the clipboard viewer chain. 
            (This is the handle returned by SetClipboardViewer, 
            unless the sequence was changed in response to a WM_CHANGECBCHAIN message.)
            </param>
            <returns>
            The return value indicates the result of passing the WM_CHANGECBCHAIN message to the windows in the clipboard viewer chain.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CloseClipboard">
            <summary>
            Closes the clipboard.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-closeclipboard
            </summary>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CountClipboardFormats">
            <summary>
            Retrieves the number of different data formats currently on the clipboard.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-countclipboardformats
            </summary>
            <returns>
            If the function succeeds, the return value is the number of different data formats currently on the clipboard.
            If the function fails, the return value is zero. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.EmptyClipboard">
            <summary>
            Empties the clipboard and frees handles to data in the clipboard. 
            The function then assigns ownership of the clipboard 
            to the window that currently has the clipboard open.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-emptyclipboard
            </summary>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.EnumClipboardFormats(System.UInt32)">
            <summary>
            Enumerates the data formats currently available on the clipboard.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-enumclipboardformats
            </summary>
            <param name="format">
            A clipboard format that is known to be available.
            To start an enumeration of clipboard formats, set format to zero.
            When format is zero, the function retrieves the first available clipboard format.
            For subsequent calls during an enumeration, 
            set format to the result of the previous EnumClipboardFormats call.
            </param>
            <returns>
            If the function succeeds, the return value is the clipboard format that follows the specified format, namely the next available clipboard format.
            If the function fails, the return value is zero. 
            To get extended error information, call GetLastError. If the clipboard is not open, the function fails.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetClipboardData(System.UInt32)">
            <summary>
            Retrieves data from the clipboard in a specified format. 
            The clipboard must have been opened previously.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getclipboarddata
            </summary>
            <param name="format">
            A clipboard format.
            </param>
            <returns>
            If the function succeeds, the return value is the handle to a clipboard object in the specified format.
            If the function fails, the return value is NULL. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetClipboardFormatNameA(System.UInt32,System.Text.StringBuilder,System.Int32)">
            <summary>
            Retrieves from the clipboard the name of the specified registered format. 
            The function copies the name to the specified buffer.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getclipboardformatnamea
            </summary>
            <param name="format">The type of format to be retrieved. This parameter must not specify any of the predefined clipboard formats.</param>
            <param name="lpszFormatName">The buffer that is to receive the format name.</param>
            <param name="cchMaxCount">
            The maximum length, in characters, of the string to be copied to the buffer. 
            If the name exceeds this limit, it is truncated.
            </param>
            <returns>
            If the function succeeds, the return value is the length, in characters, of the string copied to the buffer.
            If the function fails, the return value is zero, indicating that the requested format does not exist or is predefined. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetClipboardFormatNameW(System.UInt32,System.Text.StringBuilder,System.Int32)">
            same as GetClipboardFormatNameA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetClipboardOwner">
            <summary>
            Retrieves the window handle of the current owner of the clipboard.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getclipboardowner
            </summary>
            <returns>
            If the function succeeds, the return value is the handle to the window that owns the clipboard.
            If the clipboard is not owned, the return value is NULL.
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetClipboardSequenceNumber">
            <summary>
            Retrieves the clipboard sequence number for the current window station.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getclipboardsequencenumber
            </summary>
            <returns>
            The return value is the clipboard sequence number. 
            If you do not have WINSTA_ACCESSCLIPBOARD access to the window station, the function returns zero.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetClipboardViewer">
            <summary>
            Retrieves the handle to the first window in the clipboard viewer chain.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getclipboardviewer
            </summary>
            <returns>
            If the function succeeds, the return value is the handle to the first window in the clipboard viewer chain.
            If there is no clipboard viewer, the return value is NULL.
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetOpenClipboardWindow">
            <summary>
            Retrieves the handle to the window that currently has the clipboard open.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getopenclipboardwindow
            </summary>
            <returns>
            If the function succeeds, the return value is the handle to the window that has the clipboard open. 
            If no window has the clipboard open, the return value is NULL. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetPriorityClipboardFormat(System.UInt32@,System.Int32)">
            <summary>
            Retrieves the first available clipboard format in the specified list.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getpriorityclipboardformat
            </summary>
            <param name="paFormatPriorityList">The clipboard formats, in priority order.</param>
            <param name="cFormats">
            The number of entries in the paFormatPriorityList array. 
            This value must not be greater than the number of entries in the list.
            </param>
            <returns>
            If the function succeeds, the return value is the first clipboard format in the list for which data is available. 
            If the clipboard is empty, the return value is NULL. 
            If the clipboard contains data, but not in any of the specified formats, the return value is –1. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetUpdatedClipboardFormats(System.UInt32@,System.UInt32,System.UInt32@)">
            <summary>
            Retrieves the currently supported clipboard formats.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getupdatedclipboardformats
            </summary>
            <param name="lpuiFormats">An array of clipboard formats.</param>
            <param name="cFormats">The number of entries in the array pointed to by lpuiFormats.</param>
            <param name="pcFormatsOut">The actual number of clipboard formats in the array pointed to by lpuiFormats.</param>
            <returns>
            The function returns TRUE if successful; otherwise, FALSE. 
            Call GetLastError for additional details.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.IsClipboardFormatAvailable(System.UInt32)">
            <summary>
            Determines whether the clipboard contains data in the specified format.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-isclipboardformatavailable
            </summary>
            <param name="format">A standard or registered clipboard format.</param>
            <returns>
            If the clipboard format is available, the return value is nonzero.
            If the clipboard format is not available, the return value is zero.
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.OpenClipboard(System.IntPtr)">
            <summary>
            Opens the clipboard for examination and prevents other applications from modifying the clipboard content.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-openclipboard
            </summary>
            <param name="hwnd">
            A handle to the window to be associated with the open clipboard. 
            If this parameter is NULL, the open clipboard is associated with the current task.
            </param>
            <returns>If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero.
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.RegisterClipboardFormatA(System.Text.StringBuilder)">
            <summary>
            Registers a new clipboard format. This format can then be used as a valid clipboard format.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-registerclipboardformata
            </summary>
            <param name="lpszFormat">
            The name of the new format.
            </param>
            <returns>
            If the function succeeds, the return value identifies the registered clipboard format.
            If the function fails, the return value is zero. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.RegisterClipboardFormatW(System.Text.StringBuilder)">
            same as RegisterClipboardFormatA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.RemoveClipboardFormatListener(System.IntPtr)">
            <summary>
            Removes the given window from the system-maintained clipboard format listener list.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-removeclipboardformatlistener
            </summary>
            <param name="hwnd">A handle to the window to remove from the clipboard format listener list.</param>
            <returns>Returns TRUE if successful, FALSE otherwise. Call GetLastError for additional details.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.SetClipboardData(System.UInt32,System.IntPtr)">
            <summary>
            Places data on the clipboard in a specified clipboard format.
            The window must be the current clipboard owner, and the application must have called the OpenClipboard function.
            (When responding to the WM_RENDERFORMAT message, the clipboard owner must not call OpenClipboard before calling SetClipboardData.)
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setclipboarddata
            </summary>
            <param name="uFormat"></param>
            <param name="hMem"></param>
            <returns>
            If the function succeeds, the return value is the handle to the data.
            If the function fails, the return value is NULL. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.SetClipboardViewer(System.IntPtr)">
            <summary>
            Adds the specified window to the chain of clipboard viewers. 
            Clipboard viewer windows receive a WM_DRAWCLIPBOARD message whenever the content of the clipboard changes. 
            This function is used for backward compatibility with earlier versions of Windows.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setclipboardviewer
            </summary>
            <param name="hWndNewViewer"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CloseDesktop(System.IntPtr)">
            <summary>
            Closes an open handle to a desktop object.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-closedesktop
            </summary>
            <param name="hDesktop">
            A handle to the desktop to be closed.
            This can be a handle returned by the CreateDesktop, OpenDesktop, or OpenInputDesktop functions.
            Do not specify the handle returned by the GetThreadDesktop function.
            </param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CloseWindowStation(System.IntPtr)">
            <summary>
            Closes an open window station handle.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-closewindowstation
            </summary>
            <param name="hWinSta">
            A handle to the window station to be closed.
            This handle is returned by the CreateWindowStation or OpenWindowStation function.
            Do not specify the handle returned by the GetProcessWindowStation function.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CreateDesktopA(System.String,System.String,System.IntPtr@,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@)">
            <summary>
            Creates a new desktop, associates it with the current window station of the calling process, and assigns it to the calling thread.
            The calling process must have an associated window station, either assigned by the system at process creation time or set by the SetProcessWindowStation function.
            To specify the size of the heap for the desktop, use the CreateDesktopEx function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-createdesktopa
            </summary>
            <param name="lpszDesktop"></param>
            <param name="lpszDevice"></param>
            <param name="pDevmode"></param>
            <param name="dwFlags"></param>
            <param name="dwDesiredAccess"></param>
            <param name="lpsa"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CreateDesktopW(System.String,System.String,System.IntPtr@,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@)">
            almost same as CreateDesktopA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CreateDesktopExA(System.String,System.String,System.IntPtr@,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@,System.UInt32,System.IntPtr)">
            <summary>
            Creates a new desktop with the specified heap, associates it with the current window station of the calling process, and assigns it to the calling thread.
            The calling process must have an associated window station, either assigned by the system at process creation time or set by the SetProcessWindowStation function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-createdesktopexa
            </summary>
            <param name="lpszDesktop">The name of the desktop to be created. Desktop names are case-insensitive and may not contain backslash characters (\).</param>
            <param name="lpszDevice">This parameter is reserved and must be NULL.</param>
            <param name="pDevmode">This parameter is reserved and must be NULL.</param>
            <param name="dwFlags">
            This parameter can be zero or the following value.
            DF_ALLOWOTHERACCOUNTHOOK=0x0001         Enables processes running in other accounts on the desktop to set hooks in this process.
            </param>
            <param name="dwDesiredAccess">The requested access to the desktop.</param>
            <param name="lpsa">
            A pointer to a SECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by child processes.
            If lpsa is NULL, the handle cannot be inherited.
            The lpSecurityDescriptor member of the structure specifies a security descriptor for the new desktop.
            If this parameter is NULL, the desktop inherits its security descriptor from the parent window station.
            </param>
            <param name="ulHeapSize">The size of the desktop heap, in kilobytes.</param>
            <param name="pvoid">This parameter is reserved and must be NULL.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CreateDesktopExW(System.String,System.String,System.IntPtr@,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@,System.UInt32,System.IntPtr)">
            almost same as CreateDesktopExA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CreateWindowStationA(System.String,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@)">
            <summary>
            Creates a window station object, associates it with the calling process, and assigns it to the current session.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-createwindowstationa
            </summary>
            <param name="lpwinsta">The name of the window station to be created.</param>
            <param name="dwFlags">
            If this parameter is CWF_CREATE_ONLY and the window station already exists, the call fails.
            If this flag is not specified and the window station already exists,
            the function succeeds and returns a new handle to the existing window station.
            Windows XP/2000:  This parameter is reserved and must be zero.
            </param>
            <param name="dwDesiredAccess">The type of access the returned handle has to the window station.</param>
            <param name="lpsa">
            A pointer to a SECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by child processes.
            If lpsa is NULL, the handle cannot be inherited.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.CreateWindowStationW(System.String,System.UInt32,System.UInt32,Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES@)">
            almost same as CreateWindowStationA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.EnumDesktopsA(System.IntPtr,Ban3.Infrastructures.NativeLibs.Documented.USER32.NAMEENUMPROCA,System.Int32)">
            <summary>
            Enumerates all desktops associated with the specified window station of the calling process.
            The function passes the name of each desktop, in turn, to an application-defined callback function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-enumdesktopsa
            </summary>
            <param name="hwinsta">
            A handle to the window station whose desktops are to be enumerated.
            This handle is returned by the CreateWindowStation, GetProcessWindowStation, or OpenWindowStation function, and must have the WINSTA_ENUMDESKTOPS access right.
            For more information, see Window Station Security and Access Rights.
            If this parameter is NULL, the current window station is used.
            </param>
            <param name="lpEnumFunc">A pointer to an application-defined EnumDesktopProc callback function.</param>
            <param name="lParam">An application-defined value to be passed to the callback function.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.EnumDesktopsW(System.IntPtr,Ban3.Infrastructures.NativeLibs.Documented.USER32.NAMEENUMPROCW,System.Int32)">
            almost same as EnumDesktopsA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.EnumDesktopWindows(System.IntPtr,Ban3.Infrastructures.NativeLibs.Documented.USER32.WNDENUMPROC,System.Int32)">
            <summary>
            Enumerates all top-level windows associated with the specified desktop.
            It passes the handle to each window, in turn, to an application-defined callback function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-enumdesktopwindows
            </summary>
            <param name="hDesktop">
            A handle to the desktop whose top-level windows are to be enumerated.
            This handle is returned by the CreateDesktop, GetThreadDesktop, OpenDesktop, or OpenInputDesktop function, and must have the DESKTOP_READOBJECTS access right.
            For more information, see Desktop Security and Access Rights.
            If this parameter is NULL, the current desktop is used.
            </param>
            <param name="lpfn">A pointer to an application-defined EnumWindowsProc callback function.</param>
            <param name="lParam">An application-defined value to be passed to the callback function.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.EnumWindowStationsA(Ban3.Infrastructures.NativeLibs.Documented.USER32.NAMEENUMPROCA,System.Int32)">
            <summary>
            Enumerates all window stations in the current session.
            The function passes the name of each window station, in turn, to an application-defined callback function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-enumwindowstationsa
            </summary>
            <param name="lpEnumFunc">A pointer to an application-defined EnumWindowStationProc callback function.</param>
            <param name="lParam">An application-defined value to be passed to the callback function.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.EnumWindowStationsW(Ban3.Infrastructures.NativeLibs.Documented.USER32.NAMEENUMPROCW,System.Int32)">
            almost same as EnumWindowStationsA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetProcessWindowStation">
            <summary>
            Retrieves a handle to the current window station for the calling process.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getprocesswindowstation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetThreadDesktop(System.UInt32)">
            <summary>
            Retrieves a handle to the desktop assigned to the specified thread.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getthreaddesktop
            </summary>
            <param name="dwThreadId">The thread identifier. The GetCurrentThreadId and CreateProcess functions return thread identifiers.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetUserObjectInformationA(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX,System.IntPtr,System.UInt32,System.UInt32@)">
            <summary>
            Retrieves information about the specified window station or desktop object.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getuserobjectinformationa
            </summary>
            <param name="hObj">
            A handle to the window station or desktop object.
            This handle is returned by the CreateWindowStation, OpenWindowStation, CreateDesktop, or OpenDesktop function.
            </param>
            <param name="nIndex"></param>
            <param name="pvInfo"></param>
            <param name="nLength"></param>
            <param name="lpnLengthNeeded"></param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.GetUserObjectInformationW(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX,System.IntPtr,System.UInt32,System.UInt32@)">
            almost same as GetUserObjectInformationA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.OpenDesktopA(System.String,System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Opens the specified desktop object.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-opendesktopa
            </summary>
            <param name="lpszDesktop">
            The name of the desktop to be opened. Desktop names are case-insensitive.
            This desktop must belong to the current window station.
            </param>
            <param name="dwFlags">
            This parameter can be zero or the following value.
            DF_ALLOWOTHERACCOUNTHOOK=0x0001             Allows processes running in other accounts on the desktop to set hooks in this process.
            </param>
            <param name="fInherit">
            If this value is TRUE, processes created by this process will inherit the handle.
            Otherwise, the processes do not inherit this handle.
            </param>
            <param name="dwDesiredAccess">The access to the desktop.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.OpenDesktopW(System.String,System.UInt32,System.Boolean,System.UInt32)">
            almost same as OpenDesktopA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.OpenInputDesktop(System.UInt32,System.Boolean,System.UInt32)">
            <summary>
            Opens the desktop that receives user input.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-openinputdesktop
            </summary>
            <param name="dwFlags">
            This parameter can be zero or the following value.
            DF_ALLOWOTHERACCOUNTHOOK=0x0001             Allows processes running in other accounts on the desktop to set hooks in this process.
            </param>
            <param name="fInherit">
            If this value is TRUE, processes created by this process will inherit the handle.
            Otherwise, the processes do not inherit this handle.
            </param>
            <param name="dwDesiredAccess">The access to the desktop.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.OpenWindowStationA(System.String,System.Boolean,System.UInt32)">
            <summary>
            Opens the specified window station.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-openwindowstationa
            </summary>
            <param name="lpszWinSta">
            The name of the window station to be opened. Window station names are case-insensitive.
            This window station must belong to the current session.
            </param>
            <param name="fInherit">
            If this value is TRUE, processes created by this process will inherit the handle.
            Otherwise, the processes do not inherit this handle.
            </param>
            <param name="dwDesiredAccess">The access to the window station.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.OpenWindowStationW(System.String,System.Boolean,System.UInt32)">
            almost same as OpenWindowStationA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.SetProcessWindowStation(System.IntPtr)">
            <summary>
            Assigns the specified window station to the calling process.
            This enables the process to access objects in the window station such as desktops, the clipboard, and global atoms.
            All subsequent operations on the window station use the access rights granted to hWinSta.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setprocesswindowstation
            </summary>
            <param name="hWinSta">
            A handle to the window station.
            This can be a handle returned by the CreateWindowStation, OpenWindowStation, or GetProcessWindowStation function.
            This window station must be associated with the current session.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.SetThreadDesktop(System.IntPtr)">
            <summary>
            Assigns the specified desktop to the calling thread.
            All subsequent operations on the desktop use the access rights granted to the desktop.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setthreaddesktop
            </summary>
            <param name="hDesktop">
            A handle to the desktop to be assigned to the calling thread.
            This handle is returned by the CreateDesktop, GetThreadDesktop, OpenDesktop, or OpenInputDesktop function.
            This desktop must be associated with the current window station for the process.
            </param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.SetUserObjectInformationA(System.IntPtr,Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX,System.IntPtr,System.UInt32)">
            <summary>
            Sets information about the specified window station or desktop object.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-setuserobjectinformationa
            </summary>
            <param name="hObj">
            A handle to the window station, desktop object or a current process pseudo handle.
            This handle can be returned by the CreateWindowStation, OpenWindowStation, CreateDesktop, OpenDesktop or GetCurrentProcess function.
            </param>
            <param name="nIndex">
            The object information to be set.This parameter can be the following value.
            UOI_FLAGS=1
            UOI_TIMERPROC_EXCEPTION_SUPPRESSION=7
            </param>
            <param name="pvInfo">A pointer to a buffer containing the object information, or a BOOL.</param>
            <param name="nLength">The size of the information contained in the buffer pointed to by pvInfo, in bytes.</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.SetUserObjectInformationW(System.IntPtr,System.Int32,System.IntPtr,System.UInt32)">
            almost same as SetUserObjectInformationA
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Documented.USER32.SwitchDesktop(System.IntPtr)">
            <summary>
            Makes the specified desktop visible and activates it.
            This enables the desktop to receive input from the user.
            The calling process must have DESKTOP_SWITCHDESKTOP access to the desktop for the SwitchDesktop function to succeed.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-switchdesktop
            </summary>
            <param name="hDesktop">
            A handle to the desktop. This handle is returned by the CreateDesktop and OpenDesktop functions.
            This desktop must be associated with the current window station for the process.
            </param>
            <returns></returns>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK">
            <summary>
            The ACCESS_MASK type is a bitmask that specifies a set of access rights in the access mask of an access control entry.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/kernel/access-mask
            
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.GENERIC_ALL">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.MAXIMUM_ALLOWED">
            <summary>
            When used in an Access Request operation: When requested, this bit grants the requestor the maximum permissions allowed to the object through the Access Check Algorithm.
            This bit can only be requested; it cannot be set in an ACE.
            When used to set the Security Descriptor on an object: Specifying the Maximum Allowed bit in the SECURITY_DESCRIPTOR has no meaning.
            The MA bit SHOULD NOT be set and SHOULD be ignored when part of a SECURITY_DESCRIPTOR structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ACCESS_SYSTEM_SECURITY">
            <summary>
            When used in an Access Request operation: When requested, this bit grants the requestor the right to change the SACL of an object.
            This bit MUST NOT be set in an ACE that is part of a DACL. When set in an ACE that is part of a SACL, this bit controls auditing of accesses to the SACL itself. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.SYNCHRONIZE">
            <summary>
            Specifies access to the object sufficient to synchronize or wait on the object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.WRITE_OWNER">
            <summary>
            Specifies access to change the owner of the object as listed in the security descriptor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.WRITE_DAC">
            <summary>
            Specifies access to change the discretionary access control list of the security descriptor of an object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.READ_CONTROL">
            <summary>
            Specifies access to read the security descriptor of an object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.DELETE">
            <summary>
            Specifies access to delete an object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_QUERY_INFORMATION">
            <summary>
            Query information about the enlistment (see ZwQueryInformationEnlistment).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_SET_INFORMATION">
            <summary>
            Set information for the enlistment (see ZwSetInformationEnlistment).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_RECOVER">
            <summary>
            Recover the enlistment (see ZwRecoverEnlistment).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_SUBORDINATE_RIGHTS">
            <summary>
            Perform operations that a resource manager that is not superior performs
            (see ZwRollbackEnlistment, ZwPrePrepareComplete, ZwPrepareComplete, ZwCommitComplete, ZwRollbackComplete, ZwSinglePhaseReject, ZwReadOnlyEnlistment).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_SUPERIOR_RIGHTS">
            <summary>
            Perform operations that a superior transaction manager must perform (see ZwPrepareEnlistment, ZwPrePrepareEnlistment, ZwCommitEnlistment).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_GENERIC_READ">
            <summary>
            STANDARD_RIGHTS_READ and ENLISTMENT_QUERY_INFORMATION
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_GENERIC_WRITE">
            <summary>
            STANDARD_RIGHTS_WRITE, ENLISTMENT_SET_INFORMATION, ENLISTMENT_RECOVER, ENLISTMENT_REFERENCE, ENLISTMENT_SUBORDINATE_RIGHTS, and ENLISTMENT_SUPERIOR_RIGHTS
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_GENERIC_EXECUTE">
            <summary>
            STANDARD_RIGHTS_EXECUTE, ENLISTMENT_RECOVER, ENLISTMENT_SUBORDINATE_RIGHTS, and ENLISTMENT_SUPERIOR_RIGHTS
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACCESS_MASK.ENLISTMENT_ALL_ACCESS">
            <summary>
            STANDARD_RIGHTS_REQUIRED, ENLISTMENT_GENERIC_READ, ENLISTMENT_GENERIC_WRITE, and ENLISTMENT_GENERIC_EXECUTE
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_FLAGS.CONTAINER_INHERIT_ACE">
            Child objects that are containers, such as directories, inherit the ACE as an effective ACE. The inherited ACE is inheritable unless the NO_PROPAGATE_INHERIT_ACE bit flag is also set.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_FLAGS.FAILED_ACCESS_ACE_FLAG">
            Used with system-audit ACEs in a system access control list (SACL) to generate audit messages for failed access attempts.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_FLAGS.INHERIT_ONLY_ACE">
            Indicates an inherit-only ACE, which does not control access to the object to which it is attached. If this flag is not set, the ACE is an effective ACE that controls access to the object to which it is attached.
            Both effective and inherit-only ACEs can be inherited depending on the state of the other inheritance flags.
        </member>
        <!-- Badly formed XML comment ignored for member "F:Ban3.Infrastructures.NativeLibs.Enums.ACE_FLAGS.INHERITED_ACE" -->
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_FLAGS.NO_PROPAGATE_INHERIT_ACE">
            If the ACE is inherited by a child object, the system clears the OBJECT_INHERIT_ACE and CONTAINER_INHERIT_ACE flags in the inherited ACE. This prevents the ACE from being inherited by subsequent generations of objects.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_FLAGS.OBJECT_INHERIT_ACE">
            Noncontainer child objects inherit the ACE as an effective ACE.
            For child objects that are containers, the ACE is inherited as an inherit-only ACE unless the NO_PROPAGATE_INHERIT_ACE bit flag is also set.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_FLAGS.SUCCESSFUL_ACCESS_ACE_FLAG">
            Used with system-audit ACEs in a SACL to generate audit messages for successful access attempts.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_ALLOWED_ACE_TYPE">
            Access-allowed ACE that uses the ACCESS_ALLOWED_ACE (section 2.4.4.2) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_DENIED_ACE_TYPE">
            Access-denied ACE that uses the ACCESS_DENIED_ACE (section 2.4.4.4) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_AUDIT_ACE_TYPE">
            System-audit ACE that uses the SYSTEM_AUDIT_ACE (section 2.4.4.10) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_ALARM_ACE_TYPE">
            Reserved for future use.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_ALLOWED_COMPOUND_ACE_TYPE">
            Reserved for future use.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_ALLOWED_OBJECT_ACE_TYPE">
            Object-specific access-allowed ACE that uses the ACCESS_ALLOWED_OBJECT_ACE (section 2.4.4.3) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_DENIED_OBJECT_ACE_TYPE">
            Object-specific access-denied ACE that uses the ACCESS_DENIED_OBJECT_ACE (section 2.4.4.5) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_AUDIT_OBJECT_ACE_TYPE">
            Object-specific system-audit ACE that uses the SYSTEM_AUDIT_OBJECT_ACE (section 2.4.4.11) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_ALARM_OBJECT_ACE_TYPE">
            Reserved for future use.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_ALLOWED_CALLBACK_ACE_TYPE">
            Access-allowed callback ACE that uses the ACCESS_ALLOWED_CALLBACK_ACE (section 2.4.4.6) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_DENIED_CALLBACK_ACE_TYPE">
            Access-denied callback ACE that uses the ACCESS_DENIED_CALLBACK_ACE (section 2.4.4.7) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE">
            Object-specific access-allowed callback ACE that uses the ACCESS_ALLOWED_CALLBACK_OBJECT_ACE (section 2.4.4.8) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE">
            Object-specific access-denied callback ACE that uses the ACCESS_DENIED_CALLBACK_OBJECT_ACE (section 2.4.4.9) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_AUDIT_CALLBACK_ACE_TYPE">
            System-audit callback ACE that uses the SYSTEM_AUDIT_CALLBACK_ACE (section 2.4.4.12) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_ALARM_CALLBACK_ACE_TYPE">
            Reserved for future use.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE">
            Object-specific system-audit callback ACE that uses the SYSTEM_AUDIT_CALLBACK_OBJECT_ACE (section 2.4.4.14) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE">
            Reserved for future use.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_MANDATORY_LABEL_ACE_TYPE">
            Mandatory label ACE that uses the SYSTEM_MANDATORY_LABEL_ACE (section 2.4.4.13) structure.
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE">
            Resource attribute ACE that uses the SYSTEM_RESOURCE_ATTRIBUTE_ACE (section 2.4.4.15)
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ACE_TYPE.SYSTEM_SCOPED_POLICY_ID_ACE_TYPE">
            A central policy ID ACE that uses the SYSTEM_SCOPED_POLICY_ID_ACE (section 2.4.4.16)
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.ACL_INFORMATION_CLASS">
            <summary>
            The ACL_INFORMATION_CLASS enumeration contains values that specify the type of information being assigned to or retrieved from an access control list (ACL).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-acl_information_class
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.ACTCTX_FLAG">
            <summary>
            Flags that indicate how the values included in this structure are to be used. 
            Set any undefined bits in dwFlags to 0. 
            If any undefined bits are not set to 0, 
            the call to CreateActCtx that creates the activation context fails and returns an invalid parameter error code.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.AUDIT_EVENT_TYPE">
            <summary>
            The AUDIT_EVENT_TYPE enumeration type defines values that indicate the type of object being audited.
            The AccessCheckByTypeAndAuditAlarm and AccessCheckByTypeResultListAndAuditAlarm functions use these values.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-audit_event_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.BaudRate">
            <summary>
            unit:bps
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.BOUND_CALLBACK_STATUS">
            <summary>
            The BOUND_CALLBACK_STATUS enumeration indicates 
            how a user-mode bounds exception was processed by the BoundCallback function.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_bound_callback_status
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.BOUND_CALLBACK_STATUS.BoundExceptionContinueSearch">
            <summary>
            The bounds exception was not handled by the callback, and the exception should continue to propagate.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.BOUND_CALLBACK_STATUS.BoundExceptionHandled">
            <summary>
            The exception was handled by the callback, and the exception should not propagate any further.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.BOUND_CALLBACK_STATUS.BoundExceptionError">
            <summary>
            The user mode process should be terminated by the system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.BOUND_CALLBACK_STATUS.BoundExceptionMaximum">
            <summary>
            This value is not currently used.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTAINER_STATE">
            <summary>
            specifies the state of the container.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTAINER_STATE.ClfsContainerInitializing">
            <summary>
            The container has not yet been initialized.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTAINER_STATE.ClfsContainerInactive">
            <summary>
            The container has been initialized but does not hold any records that are in the active portion of the log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTAINER_STATE.ClfsContainerActive">
            <summary>
            The container is being used to hold records that belong to the active portion of the log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTAINER_STATE.ClfsContainerActivePendingDelete">
            <summary>
            The container is marked for deletion, but still holds records that belong to the active portion of the log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTAINER_STATE.ClfsContainerPendingArchive">
            <summary>
            The container is pending archival.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTAINER_STATE.ClfsContainerPendingArchiveAndDelete">
            <summary>
            The container is marked for deletion, but still contains records that are pending archival.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTEXT_MODE">
            <summary>
            The CLFS_CONTEXT_MODE enumeration indicates 
            the type of sequence that the Common Log File System (CLFS) driver follows when it reads a set of records from a stream.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_clfs_context_mode
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTEXT_MODE.ClfsContextNone">
            <summary>
            Do not move the cursor.
            Indicates that a variable of type CLFS_CONTEXT_MODE has not yet been assigned a meaningful value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTEXT_MODE.ClfsContextUndoNext">
            <summary>
            Move the cursor backward to the next undo record.
            Indicates that the next record in the sequence is pointed to by the undo-next LSN of the current record.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTEXT_MODE.ClfsContextPrevious">
            <summary>
            Move the cursor to the previous log record from the current read context.
            Indicates that the next record in the sequence is pointed to by the previous LSN of the current record.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_CONTEXT_MODE.ClfsContextForward">
            <summary>
            Move the cursor to the next client log record from the current read context.
            Indicates that the next record in the sequence is the record in the stream that immediately follows the current record.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.CLFS_IOSTATS_CLASS">
            <summary>
            Defines types of I/O statistics reported by CLFS and is used when a client calls GetLogIoStatistics. 
            Currently, log flush rates are the only type of statistic reported, 
            but this enumeration will reflect more types of statistics in the future.
            https://learn.microsoft.com/en-us/windows/win32/api/clfs/ne-clfs-clfs_iostats_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_IOSTATS_CLASS.ClfsIoStatsDefault">
            <summary>
            The default I/O statistics exported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_IOSTATS_CLASS.ClfsIoStatsMax">
            <summary>
            The log flush rate.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.CLFS_LOG_ARCHIVE_MODE">
            <summary>
            Specifies whether a log is ephemeral.
            https://learn.microsoft.com/en-us/windows/win32/api/clfs/ne-clfs-clfs_log_archive_mode
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_LOG_ARCHIVE_MODE.ClfsLogArchiveEnabled">
            <summary>
            Enables log archive (ephemeral logs) support.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_LOG_ARCHIVE_MODE.ClfsLogArchiveDisabled">
            <summary>
            Disables ephemeral logs.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE">
            <summary>
            The CLFS_MGMT_POLICY_TYPE enumeration type identifies the type of a CLFS management policy.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_clfs_mgmt_policy_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyMaximumSize">
            <summary>
            Indicates a policy that specifies the maximum size of a log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyMinimumSize">
            <summary>
            Indicates a policy that specifies the minimum size of a log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyNewContainerSize">
            <summary>
            Indicates a policy that specifies the size of new containers that are created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyGrowthRate">
            <summary>
            Indicates a policy that specifies how many new containers will be added to the log each time the log grows.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyLogTail">
            <summary>
            Indicates a policy that specifies how much free space will be requested when a client is notified to move its log tail.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyAutoShrink">
            <summary>
            Indicates a policy that specifies when the log will shrink based on the percentage of the log that is free.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyAutoGrow">
            <summary>
            Indicates a policy that specifies whether the log should grow when fewer than two containers are free.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyNewContainerPrefix">
            <summary>
            Indicates a policy that specifies a prefix for the file name of each container,
            as well as the full path to the directory where the containers will be placed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyNewContainerSuffix">
            <summary>
            Indicates a policy that specifies a number to use as the starting suffix for container file names.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyNewContainerExtension">
            <summary>
            Indicates a policy that specifies an extension for the file name of each container.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLFS_MGMT_POLICY_TYPE.ClfsMgmtPolicyInvalid">
            <summary>
            Reserved for internal use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.CLS_LOG_INFORMATION_CLASS">
            <summary>
            The CLFS_LOG_INFORMATION_CLASS enumeration indicates the type of information that is requested by a call to ClfsQueryLogFileInformation.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_cls_log_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLS_LOG_INFORMATION_CLASS.ClfsLogBasicInformation">
            <summary>
            Indicates that the request is for basic information about a CLFS stream and its underlying physical log. 
            The information is returned in a CLFS_INFORMATION structure. 
            Most of the structure members contain information about the underlying physical log, 
            but some members contain information that is specific to the stream.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLS_LOG_INFORMATION_CLASS.ClfsLogBasicInformationPhysical">
            <summary>
            Indicates that the request is for basic information about the physical log that underlies a CLFS stream. 
            The information is returned in a CLFS_INFORMATION structure. 
            All of the structure members contain information about the underlying physical log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLS_LOG_INFORMATION_CLASS.ClfsLogPhysicalNameInformation">
            <summary>
            Indicates that the request is for information about the name of a physical CLFS log. 
            The information is returned in a CLFS_LOG_NAME_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLS_LOG_INFORMATION_CLASS.ClfsLogStreamIdentifierInformation">
            <summary>
            Indicates that the request is for a CLFS stream identifier.
            The information is returned in a CLFS_STREAM_ID_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLS_LOG_INFORMATION_CLASS.ClfsLogSystemMarkingInformation">
            <summary>
            Count of system marking references. 
            This enumeration constant is supported only in Windows Vista and later versions of Windows.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.CLS_LOG_INFORMATION_CLASS.ClfsLogPhysicalLsnInformation">
            <summary>
            Maps virtual LSNs to physical LSNs; only valid for physical logs. 
            This enumeration constant is supported only in Windows Vista and later versions of Windows.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.D3COLD_LAST_TRANSITION_STATUS">
            <summary>
            The D3COLD_LAST_TRANSITION_STATUS enumeration indicates whether the most recent transition 
            to the D3hot device power state was followed by a transition to the D3cold device power state.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_d3cold_last_transition_status
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.D3COLD_LAST_TRANSITION_STATUS.LastDStateTransitionStatusUnknown">
            <summary>
            Information is not available from the bus driver or platform firmware 
            about whether the most recent transition to D3hot was followed by a transition to D3cold.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.D3COLD_LAST_TRANSITION_STATUS.LastDStateTransitionD3hot">
            <summary>
            The most recent transition to the D3hot device power state was not followed by a transition to the D3cold device power state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.D3COLD_LAST_TRANSITION_STATUS.LastDStateTransitionD3cold">
            <summary>
            The most recent transition to the D3hot device power state was followed by a transition to the D3cold device power state.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_DIRECTORY_TYPE">
            <summary>
            Defines values for the type of directory used by the driver to load and store files specific to a device instance. 
            This enumeration is used by the IoGetDeviceDirectory function.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_device_directory_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_DIRECTORY_TYPE.DeviceDirectoryData">
            <summary>
            The requested directory is a general-purpose directory in which the driver stores files, specific to a device instance.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_INSTALL_STATE">
            <summary>
            The DEVICE_INSTALL_STATE enumeration describes a device's installation state.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_device_install_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_INSTALL_STATE.InstallStateInstalled">
            <summary>
            The device is installed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_INSTALL_STATE.InstallStateNeedsReinstall">
            <summary>
            The system will try to reinstall the device on a later enumeration.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_INSTALL_STATE.InstallStateFailedInstall">
            <summary>
            The device did not install properly.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_INSTALL_STATE.InstallStateFinishInstall">
            <summary>
            The installation of this device is not yet complete.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS">
            <summary>
            Specifies one or more system-defined constants, 
            combined with a bitwise OR operation, 
            that provide additional information about the driver's device. 
            These constants include the following:
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_AUTOGENERATED_DEVICE_NAME">
            <summary>
            Directs the I/O manager to generate a name for the device, 
            instead of the caller specifying a DeviceName when it calls this routine. 
            The I/O manager makes sure that the name is unique. 
            This characteristic is typically specified by a PnP bus driver to generate a name for a physical device object (PDO) for a child device on the same bus. 
            This characteristic is new starting with Microsoft Windows 2000 and Microsoft Windows 98.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_CHARACTERISTIC_PNP_DEVICE">
            <summary>
            Indicates that the device object is part of a Plug and Play (PnP) stack. 
            This characteristic is required if a bus driver (or bus filter driver) registers WMI support for a device object that has not yet received the IRP_MN_START_DEVICE request. 
            FILE_CHARACTERISTIC_PNP_DEVICE is also required if a function or filter driver registers for WMI before attaching to its device stack.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_CHARACTERISTIC_TS_DEVICE">
            <summary>
            Indicates that the device object is part of a Terminal Services device stack. 
            Drivers should not set this characteristic.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_CHARACTERISTIC_WEBDAV_DEVICE">
            <summary>
            Indicates that a Web-based Distributed Authoring and Versioning (WebDAV) file system is mounted on the device. 
            Drivers should not set this characteristic.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_DEVICE_IS_MOUNTED">
            <summary>
            Indicates that a file system is mounted on the device. Drivers should not set this characteristic.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_DEVICE_SECURE_OPEN">
            <summary>
            Directs the I/O manager to apply the security descriptor of the device object to relative opens and trailing file name opens for the device. 
            For more information, see the Controlling Device Namespace Access topic.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_FLOPPY_DISKETTE">
            <summary>
            Indicates that the device is a floppy disk device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_READ_ONLY_DEVICE">
            <summary>
            Indicates that the device cannot be written to.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_REMOTE_DEVICE">
            <summary>
            Indicates that the device is remote.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_REMOVABLE_MEDIA">
            <summary>
            Indicates that the storage device supports removable media. 
            Notice that this characteristic indicates removable media, not a removable device. 
            For example, drivers for JAZ drive devices should specify this characteristic, 
            but drivers for PCMCIA flash disks should not.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_VIRTUAL_VOLUME">
            <summary>
            Indicates that the volume is virtual. Drivers should not set this characteristic.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_WRITE_ONCE_MEDIA">
            <summary>
            Indicates that the device supports write-once media. 
            Drivers do not set this member directly. 
            For more information about how to set device characteristics, 
            see the Specifying Device Characteristics topic.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_CHARACTERISTIC_CSV">
            <summary>
            Indicates that the device is a Cluster Shared Volume (CSV).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_DEVICE_ALLOW_APPCONTAINER_TRAVERSAL">
            <summary>
            The IO Manager normally performs a full security check for traverse access on every file open when the client is an app container. 
            Setting of this flag bypasses this enforced traverse access check if the client token already has traverse privileges.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_CHARACTERISTICS.FILE_PORTABLE_DEVICE">
            <summary>
            Indicates that the underlying stack considers the device portable. 
            This is used by the storage stack 
            and means that the device is not in the local machine container and is not on a fixed bus type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS">
            <summary>
            Device drivers perform a bitwise OR operation with this member in their newly created device objects
            by using one or more of the following system-defined values.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS.DO_BUS_ENUMERATED_DEVICE">
            <summary>
            The operating system sets this flag in each physical device object (PDO). 
            Drivers must not modify this flag.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS.DO_DEVICE_INITIALIZING">
            <summary>
            The I/O manager sets this flag when it creates the device object. 
            A device function driver or filter driver clears the flag in its AddDevice routine, 
            after it does the following:
            
            Attaches the device object to the device stack.
            Establishes the device power state.
            Performs a bitwise OR operation on the member with one of the power flags (if it is necessary).
            
            The Plug and Play (PnP) manager checks that the flag is clear after the AddDevice routine returns.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS.DO_EXCLUSIVE">
            <summary>
            Indicates that the driver services an exclusive device, such as a video, serial, parallel, or sound device. 
            WDM drivers must not set this flag. 
            For more information, see the Specifying Exclusive Access to Device Objects topic.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS.DO_MAP_IO_BUFFER">
            <summary>
            This flag is no longer used. Drivers should not set this flag.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS.DO_POWER_INRUSH">
            <summary>
            Drivers of devices that require inrush current when the device is turned on must set this flag. 
            A driver cannot set both this flag and DO_POWER_PAGABLE.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS.DO_POWER_PAGABLE">
            <summary>
            Pageable drivers that are compatible with Microsoft Windows 2000 and later versions of Windows, 
            are not part of the paging path, and do not require inrush current must set this flag. 
            The system calls such drivers at IRQL = PASSIVE_LEVEL. 
            Drivers cannot set both this flag and DO_POWER_INRUSH. 
            All drivers for WDM, Microsoft Windows 98, and Windows Millennium Edition must set DO_POWER_PAGABLE.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS.DO_SHUTDOWN_REGISTERED">
            <summary>
            Used by the I/O manager to indicate that a driver has registered the device object for shutdown notifications. 
            This flag should not be used by drivers.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_OBJECT_FLAGS.DO_VERIFY_VOLUME">
            <summary>
            Removable-media drivers set this flag while they process transfer requests. 
            Such drivers should also check for this flag in the target for a transfer request before they transfer any data. 
            For more information, see the Supporting Removable Media topic.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_POWER_STATE">
            <summary>
            The DEVICE_POWER_STATE enumeration type indicates a device power state.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_device_power_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_POWER_STATE.PowerDeviceUnspecified">
            <summary>
            Indicates an unspecified device power state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_POWER_STATE.PowerDeviceD0">
            <summary>
            Indicates a maximum device power state, which corresponds to device working state D0.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_POWER_STATE.PowerDeviceD1">
            <summary>
            Indicates a device sleeping state less than PowerDeviceD0 and greater than PowerDeviceD2, 
            which corresponds to device power state D1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_POWER_STATE.PowerDeviceD2">
            <summary>
            Indicates a device sleeping state less than PowerDeviceD1 and greater than PowerDeviceD3, 
            which corresponds to device power state D2.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_POWER_STATE.PowerDeviceD3">
            <summary>
            Indicates the lowest-powered device sleeping state, which corresponds to device power state D3.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_POWER_STATE.PowerDeviceMaximum">
            <summary>
            The number of device power state values for this enumeration type that represent actual power states. 
            The value of the other device power states is less than this value.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_REGISTRY_PROPERTY">
            <summary>
            The DEVICE_REGISTRY_PROPERTY enumeration identifies device properties that are stored in the registry.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-device_registry_property
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_REMOVAL_POLICY">
            <summary>
            The DEVICE_REMOVAL_POLICY enumeration describes a device's removal policy.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_device_removal_policy
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_REMOVAL_POLICY.RemovalPolicyExpectNoRemoval">
            <summary>
            The device is not typically removed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_REMOVAL_POLICY.RemovalPolicyExpectOrderlyRemoval">
            <summary>
            The device is typically removed in an orderly fashion. 
            (Before the device is removed, the Plug and Play [PnP] manager sends 
            an IRP_MN_QUERY_REMOVE_DEVICE request to the device's driver.)
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_REMOVAL_POLICY.RemovalPolicyExpectSurpriseRemoval">
            <summary>
            The device can be removed suddenly. 
            (The driver receives no advance warning that the device will be removed. 
            The Plug and Play [PnP] manager sends an IRP_MN_SURPRISE_REMOVAL request when the device is removed.)
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_RESET_TYPE">
            <summary>
            The DEVICE_RESET_TYPE enumeration specifies the type of device reset 
            that is being requested by a call to the DeviceReset routine of 
            the GUID_DEVICE_RESET_INTERFACE_STANDARD interface.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_device_reset_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_RESET_TYPE.FunctionLevelDeviceReset">
            <summary>
            A function-level device reset, which is restricted to a specific device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_RESET_TYPE.PlatformLevelDeviceReset">
            <summary>
            A platform-level device reset, which affects a specific device 
            and all other devices that are connected to it via the same power rail or reset line.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_TYPE">
            <summary>
            Each device object has a device type, which is stored in the DeviceType member of its DEVICE_OBJECT structure. 
            The device type represents the type of underlying hardware for the driver.
            
            Every kernel-mode driver that creates a device object must specify an appropriate device type value when calling IoCreateDevice. 
            The IoCreateDevice routine uses the supplied device type to initialize the DeviceType member of the DEVICE_OBJECT structure.
            
            https://learn.microsoft.com/en-us/windows-hardware/drivers/kernel/specifying-device-types
            The system defines the following device type values, listed in alphabetical order:
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_USAGE_NOTIFICATION_TYPE">
            <summary>
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-device_usage_notification_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_WAKE_DEPTH">
            <summary>
            The DEVICE_WAKE_DEPTH enumeration specifies the deepest device power state from 
            which a device can trigger a wake signal.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_device_wake_depth
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_WAKE_DEPTH.DeviceWakeDepthNotWakeable">
            <summary>
            There is no device power state that can trigger a wake signal.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_WAKE_DEPTH.DeviceWakeDepthD0">
            <summary>
            D0 is the deepest device power state from which the device can trigger a wake signal.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_WAKE_DEPTH.DeviceWakeDepthD1">
            <summary>
            D1 is the deepest low-power device power state from which the device can trigger a wake signal.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_WAKE_DEPTH.DeviceWakeDepthD2">
            <summary>
            D2 is the deepest low-power device power state from which the device can trigger a wake signal.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_WAKE_DEPTH.DeviceWakeDepthD3hot">
            <summary>
            D3hot is the deepest low-power device power state from which the device can trigger a wake signal.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_WAKE_DEPTH.DeviceWakeDepthD3cold">
            <summary>
            D3cold is the deepest low-power device power state from which the device can trigger a wake signal.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DEVICE_WAKE_DEPTH.DeviceWakeDepthMaximum">
            <summary>
            Reserved for use by the operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DLL_CHARACTERISTICS.IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE">
            <summary>
            The DLL can be relocated at load time. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DLL_CHARACTERISTICS.IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY">
            <summary>
            Code integrity checks are forced.
            If you set this flag and a section contains only uninitialized data,
            set the PointerToRawData member of IMAGE_SECTION_HEADER for that section to zero;
            otherwise,the image will fail to load because the digital signature cannot be verified. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DLL_CHARACTERISTICS.IMAGE_DLLCHARACTERISTICS_NX_COMPAT">
            <summary>
            The image is compatible with data execution prevention (DEP). 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DLL_CHARACTERISTICS.IMAGE_DLLCHARACTERISTICS_NO_ISOLATION">
            <summary>
            The image is isolation aware, but should not be isolated. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DLL_CHARACTERISTICS.IMAGE_DLLCHARACTERISTICS_NO_SEH">
            <summary>
            The image does not use structured exception handling (SEH).
            No handlers can be called in this image. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DLL_CHARACTERISTICS.IMAGE_DLLCHARACTERISTICS_NO_BIND">
            <summary>
            Do not bind the image. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DLL_CHARACTERISTICS.IMAGE_DLLCHARACTERISTICS_WDM_DRIVER">
            <summary>
            A WDM driver. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DLL_CHARACTERISTICS.IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE">
            <summary>
            The image is terminal server aware. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMMON_BUFFER_EXTENDED_CONFIGURATION_TYPE">
            <summary>
            Provides the types of optional configurations that can be provided 
            when creating a common buffer from an MDL. The configuration values corresponding to 
            the types are held in the DMA_COMMON_BUFFER_EXTENDED_CONFIGURATION structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_dma_common_buffer_extended_configuration_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMMON_BUFFER_EXTENDED_CONFIGURATION_TYPE.CommonBufferConfigTypeLogicalAddressLimits">
            <summary>
            The associated configuration will contain information about the limits of logical address 
            that can be used to fulfill common buffer creation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMMON_BUFFER_EXTENDED_CONFIGURATION_TYPE.CommonBufferConfigTypeSubSection">
            <summary>
            The associated configuration will contain information 
            about the subsection within the MDL to use to create the common buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMMON_BUFFER_EXTENDED_CONFIGURATION_TYPE.CommonBufferConfigTypeHardwareAccessPermissions">
            <summary>
            The associated configuration will contain information about the access permissions for the hardware.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMMON_BUFFER_EXTENDED_CONFIGURATION_TYPE.CommonBufferConfigTypeMax">
            <summary>
            The number of common buffer extended configuration values for this enumeration type 
            that represent actual common buffer configuration types.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMPLETION_STATUS">
            <summary>
            The DMA_COMPLETION_STATUS enumeration describes the completion status of a DMA transfer.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-dma_completion_status
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMPLETION_STATUS.DmaComplete">
            <summary>
            The DMA transfer completed successfully.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMPLETION_STATUS.DmaAborted">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMPLETION_STATUS.DmaError">
            <summary>
            The DMA transfer did not complete successfully because an error occurred.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DMA_COMPLETION_STATUS.DmaCancelled">
            <summary>
            The DMA transfer did not complete successfully because the client canceled the transfer.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_CONFIGURATION_ARCH">
            <summary>
            Defines values for type of system architecture specified in the IOMMU_DOMAIN_CONFIGURE callback function.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_domain_configuration_arch
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_CONFIGURATION_ARCH.DomainConfigurationArm64">
            <summary>
            ARM64 architecture.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_CONFIGURATION_ARCH.DomainConfigurationX64">
            <summary>
            x64 architecture. Reserved for system use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_CONFIGURATION_ARCH.DomainConfigurationInvalid">
            <summary>
            The architecture type is not valid.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_PASSWORD_PROPERTIES">
            <summary>
            Flags that describe the password properties. 
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ns-ntsecapi-domain_password_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_PASSWORD_PROPERTIES.DOMAIN_PASSWORD_COMPLEX">
            <summary>
            The password must have a mix of at least two of the following types of characters:
            Uppercase characters
            Lowercase characters
            Numerals
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_PASSWORD_PROPERTIES.DOMAIN_PASSWORD_NO_ANON_CHANGE">
            <summary>
            The password cannot be changed without logging on.
            Otherwise, if your password has expired, you can change your password and then log on.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_PASSWORD_PROPERTIES.DOMAIN_PASSWORD_NO_CLEAR_CHANGE">
            <summary>
            Forces the client to use a protocol that does not allow the domain controller to get the plaintext password.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_PASSWORD_PROPERTIES.DOMAIN_LOCKOUT_ADMINS">
            <summary>
            Allows the built-in administrator account to be locked out from network logons.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_PASSWORD_PROPERTIES.DOMAIN_PASSWORD_STORE_CLEARTEXT">
            <summary>
            The directory service is storing a plaintext password for all users instead of a hash function of the password.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DOMAIN_PASSWORD_PROPERTIES.DOMAIN_REFUSE_PASSWORD_CHANGE">
            <summary>
            Removes the requirement that the machine account password be automatically changed every week.
            This value should not be used as it can weaken security.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DRIVER_REGKEY_TYPE">
            <summary>
            Defines values for the type of registry key to be used by a driver. 
            This enumeration is used by the IoOpenDriverRegistryKey function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DRIVER_REGKEY_TYPE.DriverRegKeyParameters">
            <summary>
            The requested registry key is the immutable parameters key for the driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DRIVER_REGKEY_TYPE.DriverRegKeyPersistentState">
            <summary>
            The requested registry key is a location for mutable state to be read/written that will persist across reboots. 
            This mutable state is specific to the internals of the driver and only accessible by the driver itself.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DRIVER_REGKEY_TYPE.DriverRegKeySharedPersistentState">
            <summary>
            The requested registry key is a location for mutable state to be read/written that will persist across reboots. 
            This mutable state is meant to be shared between the driver and other components. 
            Other components can access this registry key using GetSharedServiceRegistryStateKey. 
            This value is available on Windows Server 2022 and later versions of Windows.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DTR_CONTROL">
            <summary>
            The DTR (data-terminal-ready) flow control. This member can be one of the following values.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DTR_CONTROL.DTR_CONTROL_DISABLE">
            <summary>
            Disables the DTR line when the device is opened and leaves it disabled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DTR_CONTROL.DTR_CONTROL_ENABLE">
            <summary>
            Enables the DTR line when the device is opened and leaves it on.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DTR_CONTROL.DTR_CONTROL_HANDSHAKE">
            <summary>
            Enables DTR handshaking. If handshaking is enabled, it is an error for the application to adjust the line by using the EscapeCommFunction function.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.DUPLICATE_HANDLE_OPTIONS">
            <summary>
            https://learn.microsoft.com/en-us/windows/win32/api/handleapi/nf-handleapi-duplicatehandle
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DUPLICATE_HANDLE_OPTIONS.DUPLICATE_CLOSE_SOURCE">
            <summary>
            Closes the source handle.
            This occurs regardless of any error status returned. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.DUPLICATE_HANDLE_OPTIONS.DUPLICATE_SAME_ACCESS">
            <summary>
            Ignores the dwDesiredAccess parameter.
            The duplicate handle has the same access as the source handle. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.ENLISTMENT_INFORMATION_CLASS">
            <summary>
            The ENLISTMENT_INFORMATION_CLASS enumeration identifies the type of information 
            that the ZwSetInformationEnlistment routine can set and that the ZwQueryInformationEnlistment 
            routine can retrieve for an enlistment object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_enlistment_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ENLISTMENT_INFORMATION_CLASS.EnlistmentBasicInformation">
            <summary>
            Information about an enlistment object is stored in an ENLISTMENT_BASIC_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ENLISTMENT_INFORMATION_CLASS.EnlistmentRecoveryInformation">
            <summary>
            A resource manager is setting or obtaining customized recovery information for an enlistment.
            To learn more about recovery information, see ZwSetInformationEnlistment.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ENLISTMENT_INFORMATION_CLASS.EnlistmentCrmInformation">
            <summary>
            Information about an enlistment object is stored in an ENLISTMENT_CRM_INFORMATION structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.ETW_PROCESS_HANDLE_INFO_TYPE">
            <summary>
            Specifies the operation that will be performed on a trace processing session.
            Used with the QueryTraceProcessingHandle function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ne-evntrace-etw_process_handle_info_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.ETW_PROVIDER_TRAIT_TYPE">
            <summary>
            Specifies the types of Provider Traits supported by Event Tracing for Windows (ETW).
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ne-evntcons-etw_provider_trait_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ETW_PROVIDER_TRAIT_TYPE.EtwProviderTraitTypeGroup">
            <summary>
            ETW Provider trait group.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ETW_PROVIDER_TRAIT_TYPE.EtwProviderTraitDecodeGuid">
            <summary>
            ETW Provider trait decode GUID.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.ETW_PROVIDER_TRAIT_TYPE.EtwProviderTraitTypeMax">
            <summary>
            ETW Provider trait type maximum.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.EVENTSECURITYOPERATION">
            <summary>
            Defines what component of the security descriptor that the EventAccessControl function modifies.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ne-evntcons-eventsecurityoperation
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.EX_POOL_PRIORITY">
            <summary>
            Specifies the priority of a pool memory allocation request.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-ex_pool_priority
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.EX_POOL_PRIORITY.LowPoolPriority">
            <summary>
            This setting indicates that it is acceptable to the driver for the mapping request to fail 
            if the system is low on resources. 
            For example, this could be for a non-critical network connection 
            where the driver can handle the failure case when system resources are close to being depleted.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.EX_POOL_PRIORITY.NormalPoolPriority">
            <summary>
            Indicates that it is acceptable to the driver for the mapping request to fail 
            if the system is very low on resources. 
            For example, this could be for a non-critical local filesystem request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.EX_POOL_PRIORITY.HighPoolPriority">
            <summary>
            Should be used when it is unacceptable to the driver for the mapping request to fail 
            unless the system is out of resources. 
            An example of this would be the paging file path in a driver.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.FEEDBACK_TYPE">
            <summary>
            Specifies the visual feedback associated with an event.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ne-winuser-feedback_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.FILE_INFORMATION_CLASS">
            <summary>
            A value that specifies which structure to use to query or set information for a file object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_file_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_FILE_OPEN">
            <summary>
            Deprecated.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_SYNCHRONOUS_IO">
            <summary>
            The file object is opened for synchronous I/O.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_ALERTABLE_IO">
            <summary>
            Any wait in the I/O manager, as a result of a request made to this file object, is alertable.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_NO_INTERMEDIATE_BUFFERING">
            <summary>
            The file associated with the file object cannot be cached or buffered in a driver's internal buffers.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_WRITE_THROUGH">
            <summary>
            System services, file system drivers, and drivers that write data to the file must transfer the data into the file before any requested write operation is considered complete.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_SEQUENTIAL_ONLY">
            <summary>
            The file associated with the file object was opened for sequential I/O operations only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_CACHE_SUPPORTED">
            <summary>
            The file associated with the file object is cacheable. This flag should be set only by a file system driver, and only if the FsContext member points to a valid FSRTL_ADVANCED_FCB_HEADER structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_NAMED_PIPE">
            <summary>
            The file object represents a named pipe.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_STREAM_FILE">
            <summary>
            The file object represents a file stream.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_MAILSLOT">
            <summary>
            The file object represents a mailslot.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_GENERATE_AUDIT_ON_CLOSE">
            <summary>
            Deprecated.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_QUEUE_IRP_TO_THREAD">
            <summary>
            IRPs will not be queued to this file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_DIRECT_DEVICE_OPEN">
            <summary>
            The device targeted by this file object was opened directly.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_FILE_MODIFIED">
            <summary>
            The file associated with the file object has been modified.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_FILE_SIZE_CHANGED">
            <summary>
            The file associated with the file object has changed in size.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_CLEANUP_COMPLETE">
            <summary>
            The file system has completed its cleanup for this file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_TEMPORARY_FILE">
            <summary>
            The file associated with the file object is a temporary file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_DELETE_ON_CLOSE">
            <summary>
            The file associated with the file object will be deleted by the file system upon close.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_OPENED_CASE_SENSITIVE">
            <summary>
            The file name case of the file associated with the file object is respected.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_HANDLE_CREATED">
            <summary>
            A file handle was created for file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_FILE_FAST_IO_READ">
            <summary>
            A fast I/O read was performed on this file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_RANDOM_ACCESS">
            <summary>
            The file associated with the file object was opened for random access.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_FILE_OPEN_CANCELLED">
            <summary>
            The create request for this file object was canceled before completing.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_VOLUME_OPEN">
            <summary>
            The file object represents a volume open request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_REMOTE_ORIGIN">
            <summary>
            The create request for the file associated with the file object originated on a remote machine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_SKIP_COMPLETION_PORT">
            <summary>
            For a file object associated with a port, determines if the system should skip queuing to the completion port when the IRP is completed synchronously with a non-error status return value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_SKIP_SET_EVENT">
            <summary>
            Skip setting the event for the file object upon IRP completion.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.FILE_OBJECT_FLAGS.FO_SKIP_SET_FAST_IO">
            <summary>
            Skip setting an event supplied to a system service when the fast I/O path is successful.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.GetModuleFlags">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.GetModuleFlags.GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS">
            <summary>
            The lpModuleName parameter is an address in the module.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.GetModuleFlags.GET_MODULE_HANDLE_EX_FLAG_PIN">
            <summary>
            The module stays loaded until the process is terminated, no matter how many times FreeLibrary is called.
            This option cannot be used with GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.GetModuleFlags.GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT">
            <summary>
            The reference count for the module is not incremented. 
            This option is equivalent to the behavior of GetModuleHandle.
            Do not pass the retrieved module handle to the FreeLibrary function; 
            doing so can cause the DLL to be unmapped prematurely. 
            This option cannot be used with GET_MODULE_HANDLE_EX_FLAG_PIN.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_503_RESPONSE_VERBOSITY">
            <summary>
            The HTTP_503_RESPONSE_VERBOSITY enumeration defines the verbosity levels for a 503, service unavailable, error responses.
            This structure must be used when setting or querying the HttpServer503ResponseProperty on a request queue.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_503_response_verbosity
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_503_RESPONSE_VERBOSITY.Http503ResponseVerbosityBasic">
            <summary>
            A 503 response is not sent; the connection is reset.
            This is the default HTTP Server API behavior.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_503_RESPONSE_VERBOSITY.Http503ResponseVerbosityLimited">
            <summary>
            The HTTP Server API sends a 503 response with a "Service Unavailable" reason phrase.
            The HTTP Server closes the TCP connection after sending the response, so the client has to re-connect.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_503_RESPONSE_VERBOSITY.Http503ResponseVerbosityFull">
            <summary>
            The HTTP Server API sends a 503 response with a detailed reason phrase.
            The HTTP Server closes the TCP connection after sending the response, so the client has to re-connect.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_AUTHENTICATION_HARDENING_LEVELS">
            <summary>
            Server Hardening level.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_authentication_hardening_levels
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_AUTHENTICATION_HARDENING_LEVELS.HttpAuthenticationHardeningLegacy">
            <summary>
            Server is not hardened and operates without Channel Binding Token (CBT) support.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_AUTHENTICATION_HARDENING_LEVELS.HttpAuthenticationHardeningMedium">
            <summary>
            Server is partially hardened. Clients that support CBT are serviced appropriately. Legacy clients are also serviced.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_AUTHENTICATION_HARDENING_LEVELS.HttpAuthenticationHardeningStrict">
            <summary>
            Server is hardened. Only clients that supported CBT are serviced.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_AUTH_STATUS">
            <summary>
            The HTTP_AUTH_STATUS enumeration defines the authentication state of a request.
            This enumeration is used in the HTTP_REQUEST_AUTH_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_auth_status
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_AUTH_STATUS.HttpAuthStatusSuccess">
            <summary>
            The request was successfully authenticated for the authentication type indicated in the HTTP_REQUEST_AUTH_INFO structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_AUTH_STATUS.HttpAuthStatusNotAuthenticated">
             <summary>
             Authentication was configured on the URL group for this request, however, the HTTP Server API did not handle the authentication.
             This could be because of one of the following reasons:
             
             The scheme defined in the HttpHeaderAuthorization header of the request is not supported by the HTTP Server API,
                 or it is not enabled on the URL Group. If the scheme is not enabled,
                 the AuthType member of HTTP_REQUEST_AUTH_INFO is set to the appropriate type,
                 otherwise AuthType will have the value HttpRequestAuthTypeNone.
             The authorization header is not present, however, authentication is enabled on the URL Group.
            
             The application should either proceed with its own authentication or respond with the initial 401 challenge containing the desired set of authentication schemes.
             </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_AUTH_STATUS.HttpAuthStatusFailure">
             <summary>
             Authentication for the authentication type listed in the HTTP_REQUEST_AUTH_INFO structure failed, possibly due to one of the following reasons:
            
             The Security Service Provider Interface (SSPI) based authentication scheme failed to successfully return from a call to AcceptSecurityContext.
                 The error returned AcceptSecurityContext is indicated in the SecStatus member of the HTTP_REQUEST_AUTH_INFO structure.
             The finalized client context is for a Null NTLM session. Null sessions are treated as authentication failures.
             The call to LogonUser failed for the Basic authentication.
             </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_CACHE_POLICY_TYPE">
            <summary>
            The HTTP_CACHE_POLICY_TYPE enumeration type defines available cache policies.
            It is used to restrict the values of the Policy member of the HTTP_CACHE_POLICY structure,
            which in turn is used in the pCachePolicy parameter of the HttpAddFragmentToCache function to specify how a response fragment is cached.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_cache_policy_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_CACHE_POLICY_TYPE.HttpCachePolicyNocache">
            <summary>
            Do not cache this value at all.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_CACHE_POLICY_TYPE.HttpCachePolicyUserInvalidates">
            <summary>
            Cache this value until the user provides a different one.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_CACHE_POLICY_TYPE.HttpCachePolicyTimeToLive">
            <summary>
            Cache this value for a specified time and then remove it from the cache.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_CACHE_POLICY_TYPE.HttpCachePolicyMaximum">
            <summary>
            Terminates the enumeration; not used to determine policy.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DATA_CHUNK_TYPE">
            <summary>
            Defines the data source for a data chunk.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_data_chunk_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DATA_CHUNK_TYPE.HttpDataChunkFromMemory">
            <summary>
            The data source is a memory data block. The union should be interpreted as a FromMemory structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DATA_CHUNK_TYPE.HttpDataChunkFromFileHandle">
            <summary>
            The data source is a file handle data block. The union should be interpreted as a FromFileHandle structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DATA_CHUNK_TYPE.HttpDataChunkFromFragmentCache">
            <summary>
            The data source is a fragment cache data block. The union should be interpreted as a FromFragmentCache structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DATA_CHUNK_TYPE.HttpDataChunkFromFragmentCacheEx">
            <summary>
            The data source is a fragment cache data block. The union should be interpreted as a FromFragmentCacheEx structure.
            Windows Server 2003 with SP1 and Windows XP with SP2:  This flag is not supported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DATA_CHUNK_TYPE.HttpDataChunkTrailers">
            <summary>
            The data source is a trailers data block. The union should be interpreted as a Trailers structure.
            Windows 10, version 2004 and prior:  This flag is not supported.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DELEGATE_REQUEST_PROPERTY_ID">
            <summary>
            Defines constants that specify a type of property information for a delegate request.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_delegate_request_property_id
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DELEGATE_REQUEST_PROPERTY_ID.DelegateRequestReservedProperty">
            <summary>
            This property is reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_DELEGATE_REQUEST_PROPERTY_ID.DelegateRequestDelegateUrlProperty">
            <summary>
            Specifies the property that provides the target url to which a delegated request should be delivered.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_ENABLED_STATE">
            <summary>
            The HTTP_ENABLED_STATE enumeration defines the state of a request queue, server session, or URL Group.
            This enumeration is used in the HTTP_STATE_INFO struct
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_enabled_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_ENABLED_STATE.HttpEnabledStateActive">
            <summary>
            The HTTP Server API object is enabled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_ENABLED_STATE.HttpEnabledStateInactive">
            <summary>
            The HTTP Server API object is disabled.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_FEATURE_ID">
            <summary>
            Defines constants that specify an identifier for an HTTP feature.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_feature_id
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_FEATURE_ID.HttpFeatureUnknown">
            <summary>
            Specifies an unknown feature.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_FEATURE_ID.HttpFeatureResponseTrailers">
            <summary>
            Specifies HTTP response trailers.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_FEATURE_ID.HttpFeatureApiTimings">
            <summary>
            Specifies HTTP API timings.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_FEATURE_ID.HttpFeatureDelegateEx">
            <summary>
            Specifies a request for delegation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_FEATURE_ID.HttpFeaturemax">
            <summary>
            Specifies the maximum number of supported features.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID">
            <summary>
            The HTTP_HEADER_ID enumeration type lists known headers for HTTP requests and responses, and associates an array index with each such header.
            It is used to size and access the KnownHeaders array members of the HTTP_REQUEST_HEADERS and HTTP_RESPONSE_HEADERS structures.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_header_id
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderCacheControl">
            <summary>
            Used to specify caching behavior along the request or response chain, overriding the default caching algorithm.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderConnection">
            <summary>
            Allows the sender to specify options that are desired for that particular connection.
            These are used for a single connection only and must not be communicated by proxies over further connections.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderDate">
            <summary>
            The Date is a general header field that indicates the time that the request or response was sent.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderKeepAlive">
            <summary>
            Based on the keepalive XML element (see RFC 2518, section 12.12.1, page 66);
            a list of URIs included in the KeepAlive header must be "live" after they are copied (moved) to the destination.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderPragma">
            <summary>
            Used to include optional, implementation-specific directives that might apply to any recipient along the request/response chain.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderTrailer">
            <summary>
            Indicates that specified header fields are present in the trailer of a message encoded with chunked transfer-coding.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderTransferEncoding">
            <summary>
            Indicates what, if any, transformations have been applied to the message body in transit.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderUpgrade">
            <summary>
            Allows the client to specify one or more other communication protocols it would prefer to use if the server can comply.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderVia">
            <summary>
            The Via header field indicates the path taken by the request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderWarning">
            <summary>
            This is a response header that contains the 3-digit warn code along with the reason phrase.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderAllow">
            <summary>
            Lists the set of methods supported by the resource identified by the Request-URI.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderContentLength">
            <summary>
            The size of the message body in decimal bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderContentType">
            <summary>
            The media type of the message body.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderContentEncoding">
            <summary>
            The encoding scheme for the message body.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderContentLanguage">
            <summary>
            Provides the natural language of the intended audience.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderContentLocation">
            <summary>
            Location of the resource for the entity enclosed in the message when that entity is accessible from a location separate from the requested resource's URI.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderContentMd5">
            <summary>
            An MD5 digest of the entity-body used to provide end-to-end message integrity check (MIC) of the entity-body.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderContentRange">
            <summary>
            The content range header is sent with a partial entity body to specify where in the full entity body the partial body should be applied.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderExpires">
            <summary>
            The date and time after which the message content expires.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderLastModified">
            <summary>
            Indicates the date and time at which the origin server believes the variant was last modified.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderAccept">
            <summary>
            Used with the INVITE, OPTIONS, and REGISTER methods to indicate what media types are acceptable in the response.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderAcceptCharset">
            <summary>
            Indicates the character sets that are acceptable for the response.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderAcceptEncoding">
            <summary>
            The content encodings that are acceptable in the response.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderAcceptLanguage">
            <summary>
            Used by the client to indicate to the server which language it would prefer to receive reason phrases, session descriptions, or status responses.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderAuthorization">
            <summary>
            The user-agent can authenticate itself with a server by sending the Authorization request header field with the request.
            The field contains the credentials for the domain that the user is requesting.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderCookie">
            <summary>
            The cookie request header contains data used to maintain client state with the server.
            Cookie data is obtained from a response sent with HttpHeaderSetCookie.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderExpect">
            <summary>
            Indicates the specific server behaviors that are required by the client.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderFrom">
            <summary>
            The From header field specifies the initiator of the SIP request or response message.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderHost">
            <summary>
            Specifies the Internet host and port number of the requested resource.
            This is obtained from the original URI given by the user or referring resource.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderIfMatch">
            <summary>
            The If-Match request header field is used with a method to make it conditional.
            A client that has one or more entities previously obtained from the resource can verify that one of those entities is current by including a list of their associated entity tags in the If-Match header field.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderIfModifiedSince">
            <summary>
            The If-Modified-Since request header field is used with a method to make it conditional.
            If the requested variant has not been modified since the time specified in this field, an entity is not returned from the server; instead, a 304 (not modified) response is returned without any message-body.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_HEADER_ID.HttpHeaderIfNoneMatch">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_ROLLOVER_TYPE">
            <summary>
            The HTTP_LOGGING_ROLLOVER_TYPE enumeration defines the log file rollover types.
            This enumeration is used in the HTTP_LOGGING_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_logging_rollover_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_ROLLOVER_TYPE.HttpLoggingRolloverSize">
            <summary>
            The log files are rolled over when they reach a specified size.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_ROLLOVER_TYPE.HttpLoggingRolloverDaily">
            <summary>
            The log files are rolled over every day.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_ROLLOVER_TYPE.HttpLoggingRolloverWeekly">
            <summary>
            The log files are rolled over every week.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_ROLLOVER_TYPE.HttpLoggingRolloverMonthly">
            <summary>
            The log files are rolled over every month.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_ROLLOVER_TYPE.HttpLoggingRolloverHourly">
            <summary>
            The log files are rolled over every hour, based on GMT.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_TYPE">
            <summary>
            The HTTP_LOGGING_TYPE enumeration defines the type of logging that is performed.
            This enumeration is used in the HTTP_LOGGING_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_logging_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_TYPE.HttpLoggingTypeW3C">
            <summary>
            The log format is W3C style extended logging.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_TYPE.HttpLoggingTypeIIS">
            <summary>
            The log format is IIS5/6 style logging.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_TYPE.HttpLoggingTypeNCSA">
            <summary>
            The log format is NCSA style logging. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOGGING_TYPE.HttpLoggingTypeRaw">
            <summary>
            The log format is centralized binary logging.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOG_DATA_TYPE">
            <summary>
            The HTTP_LOG_DATA_TYPE enumeration identifies the type of log data.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_log_data_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_LOG_DATA_TYPE.HttpLogDataTypeFields">
            <summary>
            The HTTP_LOG_FIELDS_DATA structure is used for logging a request.
            This structure is passed to an HttpSendHttpResponse or HttpSendResponseEntityBody call.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_QOS_SETTING_TYPE">
            <summary>
            The HTTP_QOS_SETTING_TYPE enumeration identifies the type of a QOS setting contained in a HTTP_QOS_SETTING_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_qos_setting_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_QOS_SETTING_TYPE.HttpQosSettingTypeBandwidth">
            <summary>
            The setting is a bandwidth limit represented by a HTTP_BANDWIDTH_LIMIT_INFO structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_QOS_SETTING_TYPE.HttpQosSettingTypeConnectionLimit">
            <summary>
            The setting is a connection limit represented by a HTTP_CONNECTION_LIMIT_INFO structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.HTTP_QOS_SETTING_TYPE.HttpQosSettingTypeFlowRate">
            <summary>
            A flow rate represented by HTTP_FLOWRATE_INFO.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_REQUEST_AUTH_TYPE">
            <summary>
            The HTTP_REQUEST_AUTH_TYPE enumeration defines the authentication types supported by the HTTP Server API.
            This enumeration is used in the HTTP_REQUEST_AUTH_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_request_auth_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_REQUEST_INFO_TYPE">
            <summary>
            The HTTP_REQUEST_INFO_TYPE enumeration defines the type of information contained in the HTTP_REQUEST_INFO structure.
            This enumeration is used in the HTTP_REQUEST_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_request_info_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_REQUEST_PROPERTY">
            <summary>
            The HTTP_REQUEST_PROPERTY enumeration defines the properties that are configured by the HTTP Server API on a request.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_request_property
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_RESPONSE_INFO_TYPE">
            <summary>
            The HTTP_RESPONSE_INFO_TYPE enumeration defines the type of information contained in the HTTP_RESPONSE_INFO structure.
            This enumeration is used in the HTTP_RESPONSE_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_response_info_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_SERVER_PROPERTY">
            <summary>
            The HTTP_SERVER_PROPERTY enumeration defines the properties that are configured by the HTTP Server API on a URL group, server session, or request queue.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_server_property
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_SERVICE_BINDING_TYPE">
            <summary>
            The HTTP_SERVICE_BINDING_TYPE enumerated type specifies the string type for service names.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_service_binding_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_SERVICE_CONFIG_CACHE_KEY">
            <summary>
            Used in the HttpSetServiceConfiguration and HttpQueryServiceConfiguration functions.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_service_config_cache_key
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_SERVICE_CONFIG_ID">
            <summary>
            The HTTP_SERVICE_CONFIG_ID enumeration type defines service configuration options.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_service_config_id
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_SERVICE_CONFIG_QUERY_TYPE">
            <summary>
            The HTTP_SERVICE_CONFIG_QUERY_TYPE enumeration type defines various types of queries to make.
            It is used in the HTTP_SERVICE_CONFIG_SSL_QUERY, HTTP_SERVICE_CONFIG_SSL_CCS_QUERY, and HTTP_SERVICE_CONFIG_URLACL_QUERY structures.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_service_config_query_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_SERVICE_CONFIG_TIMEOUT_KEY">
            <summary>
            The HTTP_SERVICE_CONFIG_TIMEOUT_KEY enumeration defines the type of timer that is queried or configured through the HTTP_SERVICE_CONFIG_TIMEOUT_SET structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_service_config_timeout_key
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.HTTP_VERB">
            <summary>
            The HTTP_VERB enumeration type defines values that are used to specify known, standard HTTP verbs in the HTTP_REQUEST structure.
            The majority of these known verbs are documented in RFC 2616 and RFC 2518, as indicated below.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ne-http-http_verb
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_FILE_STATE">
            <summary>
            The state of the image file
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_FILE_STATE.IMAGE_NT_OPTIONAL_HDR_MAGIC">
            <summary>
            The file is an executable image.
            This value is defined as IMAGE_NT_OPTIONAL_HDR32_MAGIC in a 32-bit application and as IMAGE_NT_OPTIONAL_HDR64_MAGIC in a 64-bit application. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_FILE_STATE.IMAGE_NT_OPTIONAL_HDR32_MAGIC">
            <summary>
            The file is an executable image.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_FILE_STATE.IMAGE_NT_OPTIONAL_HDR64_MAGIC">
            <summary>
            The file is an executable image. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_FILE_STATE.IMAGE_ROM_OPTIONAL_HDR_MAGIC">
            <summary>
            The file is a ROM image. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_POLICY_ENTRY_TYPE">
            <summary>
            This enumeration is not supported.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_image_policy_entry_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_POLICY_ID">
            <summary>
            This enumeration is not supported.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_image_policy_id
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_UNKNOWN">
            <summary>
            Unknown subsystem.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_NATIVE">
            <summary>
            No subsystem required (device drivers and native system processes).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_WINDOWS_GUI">
            <summary>
            Windows graphical user interface (GUI) subsystem.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_WINDOWS_CUI">
            <summary>
            Windows character-mode user interface (CUI) subsystem.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_OS2_CUI">
            <summary>
            OS/2 CUI subsystem.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_POSIX_CUI">
            <summary>
            POSIX CUI subsystem.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_WINDOWS_CE_GUI">
            <summary>
              Windows CE system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_EFI_APPLICATION">
            <summary>
            Extensible Firmware Interface (EFI) application.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER">
            <summary>
            EFI driver with boot services.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER">
            <summary>
            EFI driver with run-time services.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_EFI_ROM">
            <summary>
            EFI ROM image.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_XBOX">
            <summary>
            Xbox system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IMAGE_SUBSYSTEM.IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION">
            <summary>
            Boot application. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.INPUT_MESSAGE_DEVICE_TYPE">
            <summary>
            The type of device that sent the input message.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ne-winuser-input_message_device_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.INPUT_MESSAGE_ORIGIN_ID">
            <summary>
            The ID of the input message source.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ne-winuser-input_message_origin_id
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE">
            <summary>
            The INTERFACE_TYPE enumeration indicates the bus type.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_interface_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.InterfaceTypeUndefined">
            <summary>
            Indicates that the interface type is undefined.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.Internal">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.Isa">
            <summary>
            Indicates that the interface is published by the ISA bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.Eisa">
            <summary>
            Indicates that the interface is published by the EISA bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.MicroChannel">
            <summary>
            Indicates that the interface is published by the MicroChannel bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.TurboChannel">
            <summary>
            Indicates that the interface is published by the TurboChannel bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.PCIBus">
            <summary>
            Indicates that the interface is published by the PCI bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.VMEBus">
            <summary>
            Indicates that the interface is published by the VME bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.NuBus">
            <summary>
            Indicates that the interface is published by the NuBus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.PCMCIABus">
            <summary>
            Indicates that the interface is published by the PCMCIA bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.CBus">
            <summary>
            Indicates that the interface is published by the Cbus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.MPIBus">
            <summary>
            Indicates that the interface is published by the MPI bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.MPSABus">
            <summary>
            Indicates that the interface is published by the MPSA bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.ProcessorInternal">
            <summary>
            Indicates that the interface is published by the ISA bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.InternalPowerBus">
            <summary>
            Indicates that the interface is published for an internal power bus. 
            Some devices have power control ports that allow them to share power control with other devices. 
            The Windows architecture represents these devices as slots on a virtual bus called an "internal power bus."
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.PNPISABus">
            <summary>
            Indicates that the interface is published by the PNPISA bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.PNPBus">
            <summary>
            Indicates that the interface is published by the PNP bus driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.Vmcs">
            <summary>
            Reserved for use by the operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.ACPIBus">
            <summary>
            Indicates that the interface is published by the ACPI bus driver. 
            The ACPI bus driver enumerates devices that are described in the ACPI firmware of the hardware platform. 
            These devices might physically reside on buses that are controlled by other bus drivers, 
            but the ACPI bus driver must enumerate these devices because the other bus drivers cannot detect them. 
            This interface type is defined starting with Windows 8.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.INTERFACE_TYPE.MaximumInterfaceType">
            <summary>
            Marks the upper limit of the possible bus types.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DEVICE_CREATION_CONFIGURATION_TYPE">
            <summary>
            Describes the configuration types 
            that are used upon IOMMU_DMA_DEVICE creation depending on the device type and the system.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-iommu_device_creation_configuration_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DEVICE_CREATION_CONFIGURATION_TYPE.IommuDeviceCreationConfigTypeNone">
            <summary>
            Default no type.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DEVICE_CREATION_CONFIGURATION_TYPE.IommuDeviceCreationConfigTypeAcpi">
            <summary>
            Provides ACPI device specific parameters. This is currently used for ARM64 only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DEVICE_CREATION_CONFIGURATION_TYPE.IommuDeviceCreationConfigTypeDeviceId">
            <summary>
            Defines the IommuDeviceCreationConfigTypeDeviceId constant.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DEVICE_CREATION_CONFIGURATION_TYPE.IommuDeviceCreationConfigTypeMax">
            <summary>
            Invalid type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_DOMAIN_TYPE">
            <summary>
            Describes the domain types that can be created and interacted with via the DMA_IOMMU_INTERFACE_EX.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-iommu_dma_domain_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_DOMAIN_TYPE.DomainTypeTranslate">
            <summary>
            The standard remapping domain. 
            The HAL/Hypervisor will create a domain structure and page table for holding logical address mappings.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_DOMAIN_TYPE.DomainTypePassThrough">
            <summary>
            Represents a passthrough domain. Calls to map and unmap are not necessary. 
            Depending on the DMAGuard policy of the machine, this domain may not be available.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_DOMAIN_TYPE.DomainTypeUnmanaged">
            <summary>
            This is a remapping domain in which the page table is owned by the caller. 
            The caller is responsible for interacting with the IOMMU Interface 
            to provide its page table as well as performing necessary IOMMU TLB flushes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_DOMAIN_TYPE.DomainTypeMax">
            <summary>
            Invalid domain type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_LOGICAL_ALLOCATOR_TYPE">
            <summary>
            The IOMMU_DMA_LOGICAL_ALLOCATOR_TYPE enum indicates the type of logical allocator 
            described in an IOMMU_DMA_LOGICAL_ALLOCATOR_CONFIG structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-iommu_dma_logical_allocator_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_LOGICAL_ALLOCATOR_TYPE.IommuDmaLogicalAllocatorNone">
            <summary>
            The logical allocator configuration does not describe any logical allocator type.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_LOGICAL_ALLOCATOR_TYPE.IommuDmaLogicalAllocatorBuddy">
            <summary>
            The logical allocator configuration describes the system's Buddy Allocator.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_DMA_LOGICAL_ALLOCATOR_TYPE.IommuDmaLogicalAllocatorMax">
            <summary>
            Invalid logical allocator type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_MAP_PHYSICAL_ADDRESS_TYPE">
            <summary>
            The IOMMU_MAP_PHYSICAL_ADDRESS_TYPE enum indicates the format of the physical address 
            described in an IOMMU_MAP_PHYSICAL_ADDRESS structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-iommu_map_physical_address_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_MAP_PHYSICAL_ADDRESS_TYPE.MapPhysicalAddressTypeMdl">
            <summary>
            The physical address to be mapped is described by a MDL.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_MAP_PHYSICAL_ADDRESS_TYPE.MapPhysicalAddressTypeContiguousRange">
            <summary>
            The physical address to be mapped is physically contiguous and is described by a base and size.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_MAP_PHYSICAL_ADDRESS_TYPE.MapPhysicalAddressTypePfn">
            <summary>
            The physical address is described by a PFN array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IOMMU_MAP_PHYSICAL_ADDRESS_TYPE.MapPhysicalAddressTypeMax">
            <summary>
            Invalid physical address format.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_ACCESS_MODE">
            <summary>
            Defines the types of access mode for Scheduled File I/O (SFIO).
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_io_access_mode
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_ACCESS_MODE.SequentialAccess">
            <summary>
            Indicates that the input/output will be sent down in a sequential order.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_ACCESS_MODE.RandomAccess">
            <summary>
            Indicates that the input/output might not be in a predictable order.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_ACCESS_TYPE">
            <summary>
            Defines the access rights for Scheduled File I/O (SFIO).
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_io_access_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_ACCESS_TYPE.ReadAccess">
            <summary>
            Indicates that the input/output will be comprised solely of reads.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_ACCESS_TYPE.WriteAccess">
            <summary>
            Indicates that the input/output will be comprised solely of writes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_ACCESS_TYPE.ModifyAccess">
            <summary>
            Indicates that the input/output will be comprised of reads and writes.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_ALLOCATION_ACTION">
            <summary>
            The IO_ALLOCATION_ACTION enumerated type is used to specify 
            return values for AdapterControl and ControllerControl routines.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_io_allocation_action
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_ALLOCATION_ACTION.KeepObject">
            <summary>
            Indicates that you want the driver to retain ownership of the adapter or controller object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_ALLOCATION_ACTION.DeallocateObject">
            <summary>
            Indicates that you do not want the driver to retain ownership of the adapter or controller object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_ALLOCATION_ACTION.DeallocateObjectKeepRegisters">
            <summary>
            For adapter objects only. 
            Indicates that you do not want the driver to retain ownership of the adapter object,
            but you do want the driver to retain ownership of the allocated map registers.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_CONTAINER_INFORMATION_CLASS">
            <summary>
            The IO_CONTAINER_INFORMATION_CLASS enumeration contains constants 
            that indicate the classes of system information that a kernel-mode driver can request.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_io_container_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_CONTAINER_INFORMATION_CLASS.IoSessionStateInformation">
            <summary>
            Session state information. 
            A driver uses this enumeration constant to request information about a user session.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_CONTAINER_INFORMATION_CLASS.IoMaxContainerInformationClass">
            <summary>
            Specifies the maximum value in this enumeration type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_CONTAINER_NOTIFICATION_CLASS">
            <summary>
            The IO_CONTAINER_NOTIFICATION_CLASS enumeration contains constants 
            that indicate the classes of events for 
            which a kernel-mode driver can register to receive notifications.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_io_container_notification_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_CONTAINER_NOTIFICATION_CLASS.IoSessionStateNotification">
            <summary>
            Session state notifications. 
            The driver uses this enumeration constant to request notifications about changes 
            in the state of user sessions that the driver is interested in.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_CONTAINER_NOTIFICATION_CLASS.IoMaxContainerNotificationClass">
            <summary>
            Specifies the maximum value in this enumeration type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_NOTIFICATION_EVENT_CATEGORY">
            <summary>
            Specifies the category of PnP event for which the callback routine is being registered. 
            Used in IoRegisterPlugPlayNotification.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-io_notification_event_category
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_NOTIFICATION_EVENT_CATEGORY.EventCategoryReserved">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_NOTIFICATION_EVENT_CATEGORY.EventCategoryHardwareProfileChange">
            <summary>
            PnP events in this category include query-change (GUID_HWPROFILE_QUERY_CHANGE), 
            change-complete (GUID_HWPROFILE_CHANGE_COMPLETE), 
            and change-cancel (GUID_HWPROFILE_CHANGE_CANCELLED) of a hardware profile.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_NOTIFICATION_EVENT_CATEGORY.EventCategoryDeviceInterfaceChange">
            <summary>
            PnP events in this category include the arrival (enabling) of 
            a new instance of a device interface class (GUID_DEVICE_INTERFACE_ARRIVAL), 
            or the removal (disabling) of an existing device interface instance (GUID_DEVICE_INTERFACE_REMOVAL).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_NOTIFICATION_EVENT_CATEGORY.EventCategoryTargetDeviceChange">
            <summary>
            PnP events in this category include events related to removing a device: 
            the device's drivers received a query-remove IRP (GUID_TARGET_DEVICE_QUERY_REMOVE), 
            the drivers completed a remove IRP (GUID_TARGET_DEVICE_REMOVE_COMPLETE), 
            or the drivers received a cancel-remove IRP (GUID_TARGET_DEVICE_REMOVE_CANCELLED). 
            This category is also used for custom notification events.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_NOTIFICATION_EVENT_CATEGORY.EventCategoryKernelSoftRestart">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_PAGING_PRIORITY">
            <summary>
            The IO_PAGING_PRIORITY enumeration describes the priority value for a paging I/O IRP.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_io_paging_priority
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PAGING_PRIORITY.IoPagingPriorityInvalid">
            <summary>
            The IRP is not a paging I/O IRP.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PAGING_PRIORITY.IoPagingPriorityNormal">
            <summary>
            The associated IRP has a normal priority level for paging I/O.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PAGING_PRIORITY.IoPagingPriorityHigh">
            <summary>
            The associated IRP has a high priority level for paging I/O.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PAGING_PRIORITY.IoPagingPriorityReserved1">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PAGING_PRIORITY.IoPagingPriorityReserved2">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_PRIORITY_HINT">
            <summary>
            The IO_PRIORITY_HINT enumeration type specifies the priority hint for an IRP.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_io_priority_hint
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PRIORITY_HINT.IoPriorityVeryLow">
            <summary>
            Specifies the lowest possible priority hint level. The system uses this value for background I/O operations.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PRIORITY_HINT.IoPriorityLow">
            <summary>
            Specifies a low-priority hint level.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PRIORITY_HINT.IoPriorityNormal">
            <summary>
            Specifies a normal-priority hint level. This value is the default setting for an IRP.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PRIORITY_HINT.IoPriorityHigh">
            <summary>
            Specifies a high-priority hint level. This value is reserved for use by the system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PRIORITY_HINT.IoPriorityCritical">
            <summary>
            Specifies the highest-priority hint level. This value is reserved for use by the system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_PRIORITY_HINT.MaxIoPriorityTypes">
            <summary>
            Marks the limit for priority hints. Any priority hint value must be less than MaxIoPriorityTypes.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE">
            <summary>
            The IO_SESSION_STATE enumeration contains constants that indicate the current state of a user session.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_io_session_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateCreated">
            <summary>
            The session has been created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateInitialized">
            <summary>
            The session has been initialized but has not yet been created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateConnected">
            <summary>
            The session is connected but the user has not yet logged on.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateDisconnected">
            <summary>
            The session has been disconnected.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateDisconnectedLoggedOn">
            <summary>
            The session was disconnected while the user was logged on.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateLoggedOn">
            <summary>
            The user is logged on to the session.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateLoggedOff">
            <summary>
            The user has logged off of the session.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateTerminated">
            <summary>
            The session has been terminated.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IO_SESSION_STATE.IoSessionStateMax">
            <summary>
            Specifies the maximum value in this enumeration type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IRQ_DEVICE_POLICY">
            <summary>
            The IRQ_DEVICE_POLICY enumeration type indicates the policy the operating system 
            can use to assign the interrupts from a device to different processors.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_irq_device_policy
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_DEVICE_POLICY.IrqPolicyMachineDefault">
            <summary>
            The device does not require any particular assignment of interrupts to processors.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_DEVICE_POLICY.IrqPolicyAllCloseProcessors">
            <summary>
            The operating system should assign interrupts from the device to processors that are close to the device. 
            On non-NUMA computers, the effect of this value is identical to that of IrqPolicyAllProcessorsInMachine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_DEVICE_POLICY.IrqPolicyOneCloseProcessor">
            <summary>
            The operating system should assign a single interrupt for the device to one processor that is close to the device. 
            On non-NUMA computers, the operating system can assign the interrupt to any processor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_DEVICE_POLICY.IrqPolicyAllProcessorsInMachine">
            <summary>
            The operating system should assign interrupts from the device to all processors.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_DEVICE_POLICY.IrqPolicySpecifiedProcessors">
            <summary>
            The operating system should assign interrupts from the device to a specific set of processors.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_DEVICE_POLICY.IrqPolicySpreadMessagesAcrossAllProcessors">
            <summary>
            The operating system should assign different message-signaled interrupts to different processors, if possible.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_DEVICE_POLICY.IrqPolicyAllProcessorsInMachineWhenSteered">
            <summary>
            Reserved for system use. Do not use in your driver.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.IRQ_PRIORITY">
            <summary>
            The IRQ_PRIORITY enumeration type indicates the priority the system 
            should give to servicing a device's interrupts.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_irq_priority
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_PRIORITY.IrqPriorityUndefined">
            <summary>
            Specifies that the device does not require any particular priority for its interrupts.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_PRIORITY.IrqPriorityLow">
            <summary>
            Specifies that the device's interrupts are of low priority. 
            This setting is appropiate for devices that can tolerate higher-than-normal latency.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_PRIORITY.IrqPriorityNormal">
            <summary>
            Specifies that the device's interrupts are of normal priority.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.IRQ_PRIORITY.IrqPriorityHigh">
            <summary>
            Specifies that the device's interrupts are of high priority. 
            This setting is appropriate for devices that require low latency.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON">
            <summary>
            The KBUGCHECK_CALLBACK_REASON enumeration type specifies the situations in which a bug-check callback executes.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_kbugcheck_callback_reason
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackInvalid">
            <summary>
            Reserved for system use. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackReserved1">
            <summary>
            Reserved for system use. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackSecondaryDumpData">
            <summary>
            The callback function provides data to append to the secondary data area of the crash dump file 
            when the system issues a bug check. For more information about this type of callback, 
            see Implementing a KbCallbackSecondaryDumpData Callback Routine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackDumpIo">
            <summary>
            Specifies that the system should call the callback function each time it writes data to a crash dump file. 
            Drivers for devices that monitor the system state can use this type of callback. 
            For more information about this type of callback, see Implementing a KbCallbackDumpIo Callback Routine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackAddPages">
            <summary>
            The callback function adds one or more pages of driver-specific data to the primary section of the crash dump file 
            when the operating system issues a bug check. 
            For more information about this type of callback, see Implementing a KbCallbackAddPages Callback Routine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackSecondaryMultiPartDumpData">
            <summary>
            Specifies that the callback is executed to get the amount of data the driver wants to store in the dump file. 
            This enumeration value is supported in Windows Server 2008 and later versions of Windows.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackRemovePages">
            <summary>
            The callback function removes one or more pages of driver-supplied data from the crash dump file. 
            For more information, see KBUGCHECK_REMOVE_PAGES.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackTriageDumpData">
            <summary>
            Specifies that the callback is executed to add virtual memory ranges the driver wants to preserve in the carved minidump file. 
            This enumeration value is supported starting in Windows 10, version 1809 and Windows Server 2019. 
            For more information about this type of callback, see Implementing a KbCallbackTriageDumpData Callback Routine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_CALLBACK_REASON.KbCallbackReserved2">
            <summary>
            Reserved for system use. Do not use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_DUMP_IO_TYPE">
            <summary>
            The KBUGCHECK_DUMP_IO_TYPE enumeration type identifies the type of a section of data within a crash dump file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_kbugcheck_dump_io_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_DUMP_IO_TYPE.KbDumpIoInvalid">
            <summary>
            Reserved for system use. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_DUMP_IO_TYPE.KbDumpIoHeader">
            <summary>
            Specifies that crash dump data is header information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_DUMP_IO_TYPE.KbDumpIoBody">
            <summary>
            Specifies that the crash dump data is part of the main body of the crash dump, 
            such as the memory state at the time of the bug check.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_DUMP_IO_TYPE.KbDumpIoSecondaryData">
            <summary>
            Specifies that the crash dump data is data returned by a KbCallbackSecondaryDumpData routine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KBUGCHECK_DUMP_IO_TYPE.KbDumpIoComplete">
            <summary>
            Specifies that the crash dump data has been completely written.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KB_ADD_PAGES_FLAGS">
            <summary>
            flags that describe the add-page request. 
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_kbugcheck_add_pages
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KB_ADD_PAGES_FLAGS.KB_ADD_PAGES_FLAG_VIRTUAL_ADDRESS">
            <summary>
            Indicates that the Address member contains a virtual address.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KB_ADD_PAGES_FLAGS.KB_ADD_PAGES_FLAG_PHYSICAL_ADDRESS">
            <summary>
            Indicates that the Address member contains a physical address.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KB_ADD_PAGES_FLAGS.KB_ADD_PAGES_FLAG_ADDITIONAL_RANGES_EXIST">
            <summary>
            Indicates that the callback routine requests that it be called again so that it can add more pages.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KERB_CERTIFICATE_INFO_TYPE">
            <summary>
            The KERB_CERTIFICATE_INFO_TYPE enumeration specifies the type of certificate information that is provided.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-kerb_certificate_info_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_CERTIFICATE_INFO_TYPE.CertHashInfo">
            <summary>
            Identifies certificate hash information as defined by the KERB_CERTIFICATE_HASHINFO structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE">
            <summary>
            The KERB_LOGON_SUBMIT_TYPE enumeration identifies the type of logon being requested.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-kerb_logon_submit_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbInteractiveLogon">
            <summary>
            Perform an interactive logon.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbSmartCardLogon">
            <summary>
            Logon using a smart card.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbWorkstationUnlockLogon">
            <summary>
            Unlock a workstation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbSmartCardUnlockLogon">
            <summary>
            Unlock a workstation using a smart card.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbProxyLogon">
            <summary>
            Logon using a proxy server.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbTicketLogon">
            <summary>
            Logon using a valid Kerberos ticket as a credential.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbTicketUnlockLogon">
            <summary>
            Unlock a workstation by using a Kerberos ticket.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbS4ULogon">
            <summary>
            Perform a service for user logon.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbCertificateLogon">
            <summary>
            Logon interactively using a certificate stored on a smart card.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbCertificateS4ULogon">
            <summary>
            Perform a service for user logon using a certificate stored on a smart card.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbCertificateUnlockLogon">
            <summary>
            Unlock a workstation using a certificate stored on a smart card.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbNoElevationLogon">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_LOGON_SUBMIT_TYPE.KerbLuidLogon">
            
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KERB_PROFILE_BUFFER_TYPE">
            <summary>
            The KERB_PROFILE_BUFFER_TYPE enumeration lists the type of logon profile returned.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-kerb_profile_buffer_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_PROFILE_BUFFER_TYPE.KerbInteractiveProfile">
            <summary>
            The buffer contains information about an interactive logon session.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_PROFILE_BUFFER_TYPE.KerbSmartCardProfile">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KERB_PROFILE_BUFFER_TYPE.KerbTicketProfile">
            <summary>
            The buffer contains information about a Kerberos logon session.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KERB_PROTOCOL_MESSAGE_TYPE">
            <summary>
            The KERB_PROTOCOL_MESSAGE_TYPE enumeration lists the types of messages
            that can be sent to the Kerberos authentication package by calling the LsaCallAuthenticationPackage function.
            Each message corresponds to a dispatch routine and causes the Kerberos authentication package to perform a different task.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-kerb_protocol_message_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS">
            <summary>
            The KEY_INFORMATION_CLASS enumeration type represents the type of information to supply about a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_key_information_class
            Use the KEY_INFORMATION_CLASS values to specify the type of data to be supplied by the ZwEnumerateKey and ZwQueryKey routines.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyBasicInformation">
            <summary>
            A KEY_BASIC_INFORMATION structure is supplied.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyNodeInformation">
            <summary>
            A KEY_NODE_INFORMATION structure is supplied.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyFullInformation">
            <summary>
            A KEY_FULL_INFORMATION structure is supplied.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyNameInformation">
            <summary>
            A KEY_NAME_INFORMATION structure is supplied.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyCachedInformation">
            <summary>
            A KEY_CACHED_INFORMATION structure is supplied.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyFlagsInformation">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyVirtualizationInformation">
            <summary>
            A KEY_VIRTUALIZATION_INFORMATION structure is supplied.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyHandleTagsInformation">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyTrustInformation">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.KeyLayerInformation">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_INFORMATION_CLASS.MaxKeyInfoClass">
            <summary>
            The maximum value in this enumeration type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS">
            <summary>
            The KEY_SET_INFORMATION_CLASS enumeration type represents the type of information to set for a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_key_set_information_class
            A RegistryCallback routine can receive a pointer to a KEY_SET_INFORMATION_CLASS structure as an input parameter.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS.KeyWriteTimeInformation">
            <summary>
            Indicates that a KEY_WRITE_TIME_INFORMATION structure is supplied.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS.KeyWow64FlagsInformation">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS.KeyControlFlagsInformation">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS.KeySetVirtualizationInformation">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS.KeySetDebugInformation">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS.KeySetHandleTagsInformation">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS.KeySetLayerInformation">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_SET_INFORMATION_CLASS.MaxKeySetInfoClass">
            <summary>
            This member constant is always the maximum value in the enumeration.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS">
            <summary>
            The KEY_VALUE_INFORMATION_CLASS enumeration type specifies the type of information to supply about the value of a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_key_value_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS.KeyValueBasicInformation">
            <summary>
            The information is stored as a KEY_VALUE_BASIC_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS.KeyValueFullInformation">
            <summary>
            The information is stored as a KEY_VALUE_FULL_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS.KeyValuePartialInformation">
            <summary>
            The information is stored as a KEY_VALUE_PARTIAL_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS.KeyValueFullInformationAlign64">
            <summary>
            The information is stored as a KEY_VALUE_FULL_INFORMATION structure 
            that is aligned to a 64-bit (that is, 8-byte) boundary in memory. 
            If the caller-supplied buffer does not start on a 64-bit boundary, 
            ZwQueryValueKey returns STATUS_DATATYPE_MISALIGNMENT.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS.KeyValuePartialInformationAlign64">
            <summary>
            The information is stored as a KEY_VALUE_PARTIAL_INFORMATION_ALIGN64 structure 
            that is aligned to a 64-bit (that is, 8-byte) boundary in memory. 
            If the caller-supplied buffer does not start on a 64-bit boundary, 
            ZwQueryValueKey returns STATUS_DATATYPE_MISALIGNMENT.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS.KeyValueLayerInformation">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KEY_VALUE_INFORMATION_CLASS.MaxKeyValueInfoClass">
            
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KE_PROCESSOR_CHANGE_NOTIFY_STATE">
            <summary>
            The state of the processor add operation.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ke_processor_change_notify_context
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KE_PROCESSOR_CHANGE_NOTIFY_STATE.KeProcessorAddStartNotify">
            <summary>
            The operating system is about to add the processor. 
            At this state, a device driver that receives this notification can allocate any per-processor data structures and perform any other required tasks to prepare the driver for execution on the new processor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KE_PROCESSOR_CHANGE_NOTIFY_STATE.KeProcessorAddCompleteNotify">
            <summary>
            The operating system has successfully added the processor. 
            At this state, a device driver that receives this notification can start scheduling threads on the new processor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KE_PROCESSOR_CHANGE_NOTIFY_STATE.KeProcessorAddFailureNotify">
            <summary>
            The operating system failed to add the processor. 
            If a device driver receives this notification, it should free any per-processor data structures that it allocated for the new processor when it received the KeProcessorAddStartNotify notification.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_MODE">
            <summary>
            The KINTERRUPT_MODE enumeration type indicates whether an interrupt is level-triggered or edge-triggered.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_kinterrupt_mode
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_MODE.LevelSensitive">
            <summary>
            The interrupt is level-triggered. 
            This is the mode for traditional PCI line-based interrupts.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_MODE.Latched">
            <summary>
            The interrupt is edge-triggered. This is the mode for PCI message-signaled interrupts.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY">
            <summary>
            The KINTERRUPT_POLARITY enumeration indicates how a device signals an interrupt request on an interrupt line.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_kinterrupt_polarity
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY.InterruptPolarityUnknown">
            <summary>
            The interrupt polarity is unknown.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY.InterruptActiveHigh">
            <summary>
            Active-high interrupt. The interrupt input type is level-triggered, 
            and an interrupt request is indicated by a high signal level on the interrupt line. 
            The request remains active as long as the line remains high.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY.InterruptRisingEdge">
            <summary>
            Rising-edge-triggered interrupt. The interrupt input type is edge-triggered, 
            and an interrupt request is indicated by a low-to-high transition on the interrupt line.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY.InterruptActiveLow">
            <summary>
            Active-low interrupt. The interrupt input type is level-triggered, 
            and an interrupt request is indicated by a low signal level on the interrupt line. 
            The request remains active as long as the line remains low.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY.InterruptFallingEdge">
            <summary>
            Falling-edge-triggered interrupt. The interrupt input type is edge-triggered, 
            and an interrupt request is indicated by a high-to-low transition on the interrupt line.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY.InterruptActiveBoth">
            <summary>
            Active-both interrupt. The interrupt input type is edge-triggered, 
            and an interrupt request is indicated by a low-to-high or a high-to-low transition on the interrupt line. 
            After a low-to-high transition signals an interrupt request, the interrupt line remains high 
            until a high-to-low transition signals the next interrupt request. 
            Similarly, after a high-to-low transition signals an interrupt request, 
            the interrupt line remains low until a low-to-high transition signals the next interrupt request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY.InterruptActiveBothTriggerLow">
            <summary>
            Reserved for use by the operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KINTERRUPT_POLARITY.InterruptActiveBothTriggerHigh">
            <summary>
            Reserved for use by the operating system.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.KTMOBJECT_TYPE">
            <summary>
            The KTMOBJECT_TYPE enumeration identifies the types of objects that KTM supports.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_ktmobject_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KTMOBJECT_TYPE.KTMOBJECT_TRANSACTION">
            <summary>
            KTM transaction objects.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KTMOBJECT_TYPE.KTMOBJECT_TRANSACTION_MANAGER">
            <summary>
            KTM transaction manager objects.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KTMOBJECT_TYPE.KTMOBJECT_RESOURCE_MANAGER">
            <summary>
            KTM resource manager objects.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KTMOBJECT_TYPE.KTMOBJECT_ENLISTMENT">
            <summary>
            KTM enlistment objects.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.KTMOBJECT_TYPE.KTMOBJECT_INVALID">
            <summary>
            Invalid object type.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LIST_MODULES_FLAGS.LIST_MODULES_32BIT">
            <summary>
            List the 32-bit modules. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LIST_MODULES_FLAGS.LIST_MODULES_64BIT">
            <summary>
            List the 64-bit modules. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LIST_MODULES_FLAGS.LIST_MODULES_ALL">
            <summary>
            List all modules. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LIST_MODULES_FLAGS.LIST_MODULES_DEFAULT">
            <summary>
            Use the default behavior. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LoadLibrarySetDirectoriesFlags.LOAD_LIBRARY_SEARCH_APPLICATION_DIR">
            <summary>
            If this value is used, the application's installation directory is searched.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LoadLibrarySetDirectoriesFlags.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS">
            <summary>
            This value is a combination of LOAD_LIBRARY_SEARCH_APPLICATION_DIR, LOAD_LIBRARY_SEARCH_SYSTEM32, and LOAD_LIBRARY_SEARCH_USER_DIRS.
            This value represents the recommended maximum number of directories an application should include in its DLL search path.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LoadLibrarySetDirectoriesFlags.LOAD_LIBRARY_SEARCH_SYSTEM32">
            <summary>
            If this value is used, %windows%\system32 is searched.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LoadLibrarySetDirectoriesFlags.LOAD_LIBRARY_SEARCH_USER_DIRS">
            <summary>
            If this value is used, any path explicitly added using the AddDllDirectory or SetDllDirectory function is searched. 
            If more than one directory has been added, the order in which those directories are searched is unspecified.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.DONT_RESOLVE_DLL_REFERENCES">
            <summary>
            If this value is used, and the executable module is a DLL, the system does not call DllMain for process and thread initialization and termination. 
            Also, the system does not load additional executable modules that are referenced by the specified module.
            
            Note  Do not use this value; it is provided only for backward compatibility. If you are planning to access only data or resources in the DLL, 
            use LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE or LOAD_LIBRARY_AS_IMAGE_RESOURCE or both. 
            Otherwise, load the library as a DLL or executable module using the LoadLibrary function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_IGNORE_CODE_AUTHZ_LEVEL">
            <summary>
            If this value is used, the system does not check AppLocker rules or apply Software Restriction Policies for the DLL. 
            This action applies only to the DLL being loaded and not to its dependencies. 
            This value is recommended for use in setup programs that must run extracted DLLs during installation.
            
            Windows Server 2008 R2 and Windows 7:  On systems with KB2532445 installed, 
            the caller must be running as "LocalSystem" or "TrustedInstaller"; 
            otherwise the system ignores this flag. 
            For more information, see "You can circumvent AppLocker rules by using an Office macro on a computer that is 
            running Windows 7 or Windows Server 2008 R2" in the Help and Support Knowledge Base at https://support.microsoft.com/kb/2532445.
            
            Windows Server 2008, Windows Vista, Windows Server 2003 and Windows XP:  AppLocker was introduced in Windows 7 and Windows Server 2008 R2.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_AS_DATAFILE">
            <summary>
            If this value is used, the system maps the file into the calling process's virtual address space as if it were a data file. 
            Nothing is done to execute or prepare to execute the mapped file. 
            Therefore, you cannot call functions like GetModuleFileName, GetModuleHandle or GetProcAddress with this DLL. 
            Using this value causes writes to read-only memory to raise an access violation. 
            Use this flag when you want to load a DLL only to extract messages or resources from it.
            
            This value can be used with LOAD_LIBRARY_AS_IMAGE_RESOURCE. For more information, see Remarks.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE">
            <summary>
            Similar to LOAD_LIBRARY_AS_DATAFILE, except that the DLL file is opened with exclusive write access for the calling process. 
            Other processes cannot open the DLL file for write access while it is in use. 
            However, the DLL can still be opened by other processes.
            
            This value can be used with LOAD_LIBRARY_AS_IMAGE_RESOURCE. For more information, see Remarks.
            
            Windows Server 2003 and Windows XP:  This value is not supported until Windows Vista.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_AS_IMAGE_RESOURCE">
            <summary>
            If this value is used, the system maps the file into the process's virtual address space as an image file. 
            However, the loader does not load the static imports or perform the other usual initialization steps. 
            Use this flag when you want to load a DLL only to extract messages or resources from it.
            Unless the application depends on the file having the in-memory layout of an image, 
            this value should be used with either LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE or LOAD_LIBRARY_AS_DATAFILE. 
            
            Windows Server 2003 and Windows XP:  This value is not supported until Windows Vista.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_SEARCH_APPLICATION_DIR">
            <summary>
            If this value is used, the application's installation directory is searched for the DLL and its dependencies. 
            Directories in the standard search path are not searched. 
            This value cannot be combined with LOAD_WITH_ALTERED_SEARCH_PATH.
            
            Windows 7, Windows Server 2008 R2, Windows Vista and Windows Server 2008:  This value requires KB2533623 to be installed.
            
            Windows Server 2003 and Windows XP:  This value is not supported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_SEARCH_DEFAULT_DIRS">
            <summary>
            This value is a combination of LOAD_LIBRARY_SEARCH_APPLICATION_DIR, LOAD_LIBRARY_SEARCH_SYSTEM32, 
            and LOAD_LIBRARY_SEARCH_USER_DIRS. Directories in the standard search path are not searched. 
            This value cannot be combined with LOAD_WITH_ALTERED_SEARCH_PATH.
            
            This value represents the recommended maximum number of directories an application should include in its DLL search path.
            
            Windows 7, Windows Server 2008 R2, Windows Vista and Windows Server 2008:  This value requires KB2533623 to be installed.
            
            Windows Server 2003 and Windows XP:  This value is not supported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR">
            <summary>
            If this value is used, the directory that contains the DLL is temporarily 
            added to the beginning of the list of directories that are searched for the DLL's dependencies. 
            Directories in the standard search path are not searched.
            
            The lpFileName parameter must specify a fully qualified path. 
            This value cannot be combined with LOAD_WITH_ALTERED_SEARCH_PATH.
            
            For example, if Lib2.dll is a dependency of C:\Dir1\Lib1.dll, 
            loading Lib1.dll with this value causes the system to search for Lib2.dll 
            only in C:\Dir1. To search for Lib2.dll in C:\Dir1 and all of the directories in the DLL search path, 
            combine this value with LOAD_LIBRARY_SEARCH_DEFAULT_DIRS.
            
            Windows 7, Windows Server 2008 R2, Windows Vista and Windows Server 2008:  This value requires KB2533623 to be installed.
            
            Windows Server 2003 and Windows XP:  This value is not supported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_SEARCH_SYSTEM32">
            <summary>
            If this value is used, %windows%\system32 is searched for the DLL and its dependencies. 
            Directories in the standard search path are not searched. 
            This value cannot be combined with LOAD_WITH_ALTERED_SEARCH_PATH.
            
            Windows 7, Windows Server 2008 R2, Windows Vista and Windows Server 2008:  This value requires KB2533623 to be installed.
            
            Windows Server 2003 and Windows XP:  This value is not supported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_SEARCH_USER_DIRS">
            <summary>
            If this value is used, directories added using the AddDllDirectory 
            or the SetDllDirectory function are searched for the DLL and its dependencies. 
            If more than one directory has been added, 
            the order in which the directories are searched is unspecified. 
            Directories in the standard search path are not searched. 
            This value cannot be combined with LOAD_WITH_ALTERED_SEARCH_PATH.
            
            Windows 7, Windows Server 2008 R2, Windows Vista and Windows Server 2008:  
            This value requires KB2533623 to be installed.
            
            Windows Server 2003 and Windows XP:  This value is not supported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_WITH_ALTERED_SEARCH_PATH">
            <summary>
            If this value is used and lpFileName specifies an absolute path, 
            the system uses the alternate file search strategy discussed in the Remarks section 
            to find associated executable modules that the specified module causes to be loaded. 
            If this value is used and lpFileName specifies a relative path, the behavior is undefined.
            
            If this value is not used, or if lpFileName does not specify a path, 
            the system uses the standard search strategy discussed in the Remarks section 
            to find associated executable modules that the specified module causes to be loaded.
            
            This value cannot be combined with any LOAD_LIBRARY_SEARCH flag.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_REQUIRE_SIGNED_TARGET">
            <summary>
            Specifies that the digital signature of the binary image must be checked at load time.
            This value requires Windows 8.1, Windows 10 or later.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LOAD_LIBRARY_FLAGS.LOAD_LIBRARY_SAFE_CURRENT_DIRS">
            <summary>
            If this value is used, loading a DLL for execution from the current directory is only allowed if it is under a directory in the Safe load list.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.LSA_FOREST_TRUST_RECORD_TYPE">
            <summary>
            The LSA_FOREST_TRUST_RECORD_TYPE enumeration defines the type of a Local Security Authority forest trust record.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-lsa_forest_trust_record_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LSA_FOREST_TRUST_RECORD_TYPE.ForestTrustTopLevelName">
            <summary>
            Record contains an included top-level name.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LSA_FOREST_TRUST_RECORD_TYPE.ForestTrustTopLevelNameEx">
            <summary>
            Record contains an excluded top-level name.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LSA_FOREST_TRUST_RECORD_TYPE.ForestTrustDomainInfo">
            <summary>
            Record contains an LSA_FOREST_TRUST_DOMAIN_INFO structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.LSA_FOREST_TRUST_RECORD_TYPE.ForestTrustRecordTypeLast">
            <summary>
            Marks the end of an enumeration.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MANDATORY_LEVEL">
            <summary>
            The MANDATORY_LEVEL enumeration lists the possible security levels.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-mandatory_level
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE">
            <summary>
            The MEMORY_CACHING_TYPE enumeration type specifies the permitted caching behavior 
            when allocating or mapping memory.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_memory_caching_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE.MmNonCached">
            <summary>
            The requested memory should not be cached by the processor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE.MmCached">
            <summary>
            The processor should cache the requested memory.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE.MmWriteCombined">
            <summary>
            The requested memory should not be cached by the processor, 
            but writes to the memory can be combined by the processor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE.MmHardwareCoherentCached">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE.MmNonCachedUnordered">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE.MmUSWCCached">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE.MmMaximumCacheType">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_CACHING_TYPE.MmNotMapped">
            
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_PRIORITY">
            <summary>
            The memory priority for the thread or process.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-memory_priority_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_PRIORITY.MEMORY_PRIORITY_VERY_LOW">
            <summary>
            Very low memory priority. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_PRIORITY.MEMORY_PRIORITY_LOW">
            <summary>
            Low memory priority. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_PRIORITY.MEMORY_PRIORITY_MEDIUM">
            <summary>
            Medium memory priority. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_PRIORITY.MEMORY_PRIORITY_BELOW_NORMAL">
            <summary>
            Below normal memory priority. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MEMORY_PRIORITY.MEMORY_PRIORITY_NORMAL">
            <summary>
            Normal memory priority.
            This is the default priority for all threads and processes on the system. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MEM_EXTENDED_PARAMETER_TYPE">
            <summary>
            Defines values for extended parameters are used for file mapping into an address space.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-mem_extended_parameter_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MEM_SECTION_EXTENDED_PARAMETER_TYPE">
            <summary>
            Defines values for the type of extended parameters.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-mem_section_extended_parameter_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MONITOR_DISPLAY_STATE">
            <summary>
            Indicates the power state of the monitor being displayed on.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_monitor_display_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MONITOR_DISPLAY_STATE.PowerMonitorOff">
            <summary>
            This indicates that the monitor is off.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MONITOR_DISPLAY_STATE.PowerMonitorOn">
            <summary>
            This indicates that the monitor is on.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.MONITOR_DISPLAY_STATE.PowerMonitorDim">
            <summary>
            This indicates that the monitor is dim.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MSV1_0_LOGON_SUBMIT_TYPE">
            <summary>
            The MSV1_0_LOGON_SUBMIT_TYPE enumeration indicates the kind of logon being requested.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-msv1_0_logon_submit_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MSV1_0_PROFILE_BUFFER_TYPE">
            <summary>
            The MSV1_0_PROFILE_BUFFER_TYPE enumeration lists the kind of logon profile returned.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-msv1_0_profile_buffer_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.MSV1_0_PROTOCOL_MESSAGE_TYPE">
            <summary>
            The MSV1_0_PROTOCOL_MESSAGE_TYPE enumeration lists the types of messages that can be sent to the MSV1_0 Authentication Package by calling the LsaCallAuthenticationPackage function.
            Each message corresponds to a dispatch routine and causes the MSV1_0 authentication package to perform a different task.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-msv1_0_protocol_message_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.NTSTATUS">
            <summary>
            
            https://learn.microsoft.com/en-us/windows-hardware/drivers/kernel/using-ntstatus-values
            https://learn.microsoft.com/en-us/windows-hardware/drivers/kernel/defining-new-ntstatus-values
            https://learn.microsoft.com/en-us/windows-hardware/drivers/kernel/defining-custom-error-types
            32 bits:
            Code        0-15        
            Facility    16-28       The Facility code specifies the facility that generated the error. 
            C           29          The C bit specifies if the value is customer-defined or Microsoft-defined.
            Sev         30-31       The Sev field shown in the preceding diagram indicates the severity code
                                    STATUS_SEVERITY_SUCCESS             Indicates a successful NTSTATUS value, such as STATUS_SUCCESS, or the value IO_ERR_RETRY_SUCCEEDED in error log packets.
                                    STATUS_SEVERITY_INFORMATIONAL       Indicates an informational NTSTATUS value, such as STATUS_SERIAL_MORE_WRITES.
                                    STATUS_SEVERITY_WARNING             Indicates a warning NTSTATUS value, such as STATUS_DEVICE_PAPER_EMPTY.
                                    STATUS_SEVERITY_ERROR               Indicates an error NTSTATUS value, such as STATUS_INSUFFICIENT_RESOURCES for a FinalStatus value or IO_ERR_CONFIGURATION_ERROR for an ErrorCode value in error log packets.
                                    
            NT_SUCCESS(Status)      Evaluates to TRUE if the return value specified by Status is a success type (0 − 0x3FFFFFFF) or an informational type (0x40000000 − 0x7FFFFFFF).
            NT_INFORMATION(Status)  Evaluates to TRUE if the return value specified by Status is an informational type (0x40000000 − 0x7FFFFFFF).
            NT_WARNING(Status)      Evaluates to TRUE if the return value specified by Status is a warning type (0x80000000 − 0xBFFFFFFF).
            NT_ERROR(Status)        Evaluates to TRUE if the return value specified by Status is an error type (0xC0000000 - 0xFFFFFFFF).
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.OBJECT_HANDLE_FLAGS">
            <summary>
            bit flags that specifies properties of the object handle.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.OBJECT_HANDLE_FLAGS.HANDLE_FLAG_INHERIT">
            <summary>
            If this flag is set, a child process created with the bInheritHandles parameter of CreateProcess set to TRUE will inherit the object handle. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.OBJECT_HANDLE_FLAGS.HANDLE_FLAG_PROTECT_FROM_CLOSE">
            <summary>
            If this flag is set, calling the CloseHandle function will not close the object handle. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.OB_OBJECT_TYPE.PsProcessType">
            <summary>
            for process handle operations
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.OB_OBJECT_TYPE.PsThreadType">
            <summary>
            for thread handle operations
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.OB_OBJECT_TYPE.ExDesktopObjectType">
            <summary>
            for desktop handle operations. 
            This value is supported in Windows 10 and not in the earlier versions of the operating system.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.OB_OPERATION">
            <summary>
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_operation_registration
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.OB_OPERATION.OB_OPERATION_HANDLE_CREATE">
            <summary>
            A new process, thread, or desktop handle was or will be opened.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.OB_OPERATION.OB_OPERATION_HANDLE_DUPLICATE">
            <summary>
            A process, thread, or desktop handle was or will be duplicated.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.Parity">
            <summary>
            The parity scheme to be used. This member can be one of the following values.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.Parity.NOPARITY">
            <summary>
            No parity.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.Parity.ODDPARITY">
            <summary>
            Odd parity.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.Parity.EVENPARITY">
            <summary>
            Even parity.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.Parity.MARKPARITY">
            <summary>
            Mark parity.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.Parity.SPACEPARITY">
            <summary>
            Space parity.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.PKU2U_LOGON_SUBMIT_TYPE">
            <summary>
            Indicates the type of logon message passed in a PKU2U_CERTIFICATE_S4U_LOGON structure.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-pku2u_logon_submit_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PKU2U_LOGON_SUBMIT_TYPE.Pku2uCertificateS4ULogon">
            <summary>
            The logon message is a PKU2U certificate.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POINTER_DEVICE_CURSOR_TYPE">
            <summary>
            Identifies the pointer device cursor types.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ne-winuser-pointer_device_cursor_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POINTER_DEVICE_TYPE">
            <summary>
            Identifies the pointer device types.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ne-winuser-pointer_device_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POINTER_FEEDBACK_MODE">
            <summary>
            Identifies the visual feedback behaviors available to CreateSyntheticPointerDevice.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ne-winuser-pointer_feedback_mode
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POLICY_AUDIT_EVENT_TYPE">
            <summary>
            The POLICY_AUDIT_EVENT_TYPE enumeration defines values that indicate the types of events the system can audit. The LsaQueryInformationPolicy and LsaSetInformationPolicy functions use this enumeration when their InformationClass parameters are set to PolicyAuditEventsInformation.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-policy_audit_event_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POLICY_DOMAIN_INFORMATION_CLASS">
            <summary>
            The POLICY_DOMAIN_INFORMATION_CLASS enumeration defines the type of policy domain information.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-policy_domain_information_class
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POLICY_INFORMATION_CLASS">
            <summary>
            The POLICY_INFORMATION_CLASS enumeration defines values that indicate the type of information to set or query in a Policy object.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-policy_information_class
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POLICY_LSA_SERVER_ROLE">
            <summary>
            The POLICY_LSA_SERVER_ROLE enumeration type defines values that indicate the role of an LSA server. The LsaQueryInformationPolicy and LsaSetInformationPolicy functions use this enumeration type when their InformationClass parameters are set to PolicyLsaServerRoleInformation.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-policy_lsa_server_role
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POLICY_NOTIFICATION_INFORMATION_CLASS">
            <summary>
            The POLICY_NOTIFICATION_INFORMATION_CLASS enumeration defines the types of policy information and policy domain information for which your application can request notification of changes.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-policy_notification_information_class
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POLICY_SERVER_ENABLE_STATE">
            <summary>
            The POLICY_SERVER_ENABLE_STATE enumeration represents the state of the LSA server—that is, whether it is enabled or disabled. Some operations may only be performed on an enabled LSA server.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-policy_server_enable_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POLICY_SERVER_ENABLE_STATE.PolicyServerEnabled">
            <summary>
            The LSA server is enabled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POLICY_SERVER_ENABLE_STATE.PolicyServerDisabled">
            
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POOL_EXTENDED_PARAMETER_TYPE">
            <summary>
            This enumeration is used in the POOL_EXTENDED_PARAMETER structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-pool_extended_parameter_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_EXTENDED_PARAMETER_TYPE.PoolExtendedParameterInvalidType">
            <summary>
            Invalid extended parameter type. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_EXTENDED_PARAMETER_TYPE.PoolExtendedParameterPriority">
            <summary>
            The extended parameter specifies the priority of the pool allocation using the Priority field of the POOL_EXTENDED_PARAMETER structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_EXTENDED_PARAMETER_TYPE.PoolExtendedParameterSecurePool">
            <summary>
            The extended parameter specifies the secure pool parameters of the pool allocation using the SecurePoolParams field of the POOL_EXTENDED_PARAMETER structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_EXTENDED_PARAMETER_TYPE.PoolExtendedParameterNumaNode">
            <summary>
            The extended parameter specifies the preferred NUMA node of the pool allocation using the PreferredNode field of the POOL_EXTENDED_PARAMETER structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_EXTENDED_PARAMETER_TYPE.PoolExtendedParameterMax">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE">
            <summary>
            The POOL_TYPE enumeration type specifies the type of system memory to allocate.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_pool_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPool">
            <summary>
            Nonpaged pool, which is nonpageable system memory. Nonpaged pool can be accessed from any IRQL, but it is a scarce resource and drivers should allocate it only when necessary.
            
            System memory allocated with the NonPagedPool pool type is executable. For more information, see the description of the NonPagedPoolExecute pool type.
            
            Starting with Windows 8, drivers should allocate most or all of their nonpaged memory from the no-execute (NX) nonpaged pool instead of the executable nonpaged pool. For more information, see the description of the NonPagedPoolNx pool type.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolExecute">
            <summary>
            Starting with Windows 8, NonPagedPoolExecute is an alternate name for the NonPagedPool value. 
            This value indicates that the allocated memory is to be nonpaged and executable—that is, 
            instruction execution is enabled in this memory. 
            To port a driver from an earlier version of Windows, 
            you should typically replace all or most instances of the NonPagedPool name in the driver source code with NonPagedPoolNx. 
            Avoid replacing instances of the NonPagedPool name with NonPagedPoolExecute except in cases in which executable memory is explicitly required. 
            For more information, see No-Execute (NX) Nonpaged Pool.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.PagedPool" -->
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolMustSucceed">
            <summary>
            This value is for internal use only, and is allowed only during system startup. 
            Drivers must not specify this value at times other than system startup, 
            because a "must succeed" request crashes the system if the requested memory size is unavailable.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.DontUseThisType">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolCacheAligned">
            <summary>
            Nonpaged pool, aligned on processor cache boundaries.
            This value is for internal use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.PagedPoolCacheAligned">
            <summary>
            Paged pool, aligned on processor cache boundaries. 
            This value is for internal use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolCacheAlignedMustS">
            <summary>
            This value is for internal use only, and is allowed only during system startup. 
            It is the cache-aligned equivalent of NonPagedPoolMustSucceed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.MaxPoolType">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolBase">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolBaseMustSucceed">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolBaseCacheAligned">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolBaseCacheAlignedMustS">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolSession">
            <summary>
            Deprecated. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.PagedPoolSession">
            <summary>
            Deprecated. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolMustSucceedSession">
            <summary>
            Deprecated. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.DontUseThisTypeSession">
            <summary>
            Deprecated. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolCacheAlignedSession">
            <summary>
            Deprecated. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.PagedPoolCacheAlignedSession">
            <summary>
            Deprecated. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolCacheAlignedMustSSession">
            <summary>
            Deprecated. Do not use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolNx">
            <summary>
            No-execute (NX) nonpaged pool. This pool type is available starting with Windows 8. 
            In contrast to the nonpaged pool designated by NonPagedPool, which allocates executable memory, 
            the NX nonpaged pool allocates memory in which instruction execution is disabled. 
            For more information, see No-Execute (NX) Nonpaged Pool.
            
            Nonpaged pool can be accessed from any IRQL, but it is a scarce resource and drivers should allocate it only when necessary.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolNxCacheAligned">
            <summary>
            NX nonpaged pool, aligned on processor cache boundaries. This value is reserved for exclusive use by the operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POOL_TYPE.NonPagedPoolSessionNx">
            <summary>
            Reserved for exclusive use by the operating system.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION">
            <summary>
            The POWER_ACTION enumeration identifies the system power actions that can occur on a computer.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-power_action
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION.PowerActionNone">
            <summary>
            No power action is taking place.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION.PowerActionReserved">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION.PowerActionSleep">
            <summary>
            The computer is entering a system sleeping (S1, S2, or S3) state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION.PowerActionHibernate">
            <summary>
            The computer is entering its hibernation (S4) state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION.PowerActionShutdown">
            <summary>
            The computer is entering its shutdown (S5) state. After all devices have entered their off (D3) state, 
            the computer remains powered on until an administrator presses the power button.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION.PowerActionShutdownReset">
            <summary>
            The computer is entering its shutdown (S5) state. After all devices have entered their off (D3) state, 
            the computer automatically powers off and then immediately restarts and returns to its working (S0) state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION.PowerActionShutdownOff">
            <summary>
            The computer is entering its shutdown (S5) state. 
            After all devices have entered their off (D3) state, the computer automatically powers off.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_ACTION.PowerActionWarmEject">
            <summary>
            The computer is being ejected from an ACPI-compatible dock device. Typically, the computer's power state does not change.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POWER_INFORMATION_LEVEL">
            <summary>
            POWER_INFORMATION_LEVEL enumerates power level information indicators.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-power_information_level
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.POWER_REQUEST_TYPE">
            <summary>
            The POWER_REQUEST_TYPE enumeration indicates the power request type.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_power_request_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_REQUEST_TYPE.PowerRequestDisplayRequired">
            <summary>
            Not used by drivers. For more information, see Remarks.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_REQUEST_TYPE.PowerRequestSystemRequired">
            <summary>
            Prevents the computer from automatically entering sleep mode after a period of user inactivity.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_REQUEST_TYPE.PowerRequestAwayModeRequired">
            <summary>
            Not used by drivers. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.POWER_REQUEST_TYPE.PowerRequestExecutionRequired">
            <summary>
            Not used by drivers.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.PROCESS_MEMORY_EXHAUSTION_TYPE">
            <summary>
            Represents the different memory exhaustion types.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ne-processthreadsapi-process_memory_exhaustion_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROCESS_MEMORY_EXHAUSTION_TYPE.PMETypeFailFastOnCommitFailure">
            <summary>
            Anytime memory management fails an allocation due to an inability to commit memory,
            it will cause the process to trigger a Windows Error Reporting report and then terminate immediately with STATUS_COMMITMENT_LIMIT. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROCESS_MEMORY_EXHAUSTION_TYPE.PMETypeMax">
            <summary>
            The maximum value for this enumeration.
            This value may change in a future version.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.PROG_INVOKE_SETTING">
            <summary>
            The PROG_INVOKE_SETTING enumeration indicates the initial setting of the function used to track the progress of a call
            to the TreeSetNamedSecurityInfo or TreeResetNamedSecurityInfo function.
            https://learn.microsoft.com/en-us/windows/win32/api/accctrl/ne-accctrl-prog_invoke_setting
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL">
            <summary>
            Specifies whether Protected Process Light (PPL) is enabled.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-process_protection_level_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_WINTCB_LIGHT">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_WINDOWS">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_WINDOWS_LIGHT">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_ANTIMALWARE_LIGHT">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_LSA_LIGHT">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_WINTCB">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_CODEGEN_LIGHT">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_AUTHENTICODE">
            <summary>
            Not implemented.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_PPL_APP">
            <summary>
            The process is a third party app that is using process protection.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.PROTECTION_LEVEL.PROTECTION_LEVEL_NONE">
            <summary>
            The process is not protected. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.QUEUE_USER_APC_FLAGS">
            <summary>
            Specifies the modifier flags for user-mode asynchronous procedure call (APC) objects.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ne-processthreadsapi-queue_user_apc_flags
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.QUEUE_USER_APC_FLAGS.QUEUE_USER_APC_FLAGS_NONE">
            <summary>
            No flags are passed. Behavior is identical to QueueUserAPC function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.QUEUE_USER_APC_FLAGS.QUEUE_USER_APC_FLAGS_SPECIAL_USER_APC">
            <summary>
            Queue a special user-mode APC instead of a regular user-mode APC.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.QUEUE_USER_APC_FLAGS.QUEUE_USER_APC_CALLBACK_DATA_CONTEXT">
            <summary>
            Receive the processor context that was interrupted when the thread was directed to call the APC function.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.READ_EVENTLOG_FLAGS">
            <summary>
            
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-readeventloga
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.READ_EVENTLOG_FLAGS.EVENTLOG_SEEK_READ">
            <summary>
            Begin reading from the record specified in the dwRecordOffset parameter.
            This option may not work with large log files if the function cannot determine the log file's size.
            For details, see Knowledge Base article, 177199.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.READ_EVENTLOG_FLAGS.EVENTLOG_SEQUENTIAL_READ">
            <summary>
            Read the records sequentially.
            If this is the first read operation, the EVENTLOG_FORWARDS_READ EVENTLOG_BACKWARDS_READ flags determines which record is read first.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.READ_EVENTLOG_FLAGS.EVENTLOG_FORWARDS_READ">
            <summary>
            The log is read in chronological order (oldest to newest).
            The default.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.READ_EVENTLOG_FLAGS.EVENTLOG_BACKWARDS_READ">
            <summary>
            The log is read in reverse chronological order (newest to oldest).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegKeyDesired.KEY_WOW64_32KEY">
            <summary>
            Delete the key from the 32-bit registry view.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegKeyDesired.KEY_WOW64_64KEY">
            <summary>
            Delete the key from the 64-bit registry view.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegNotifyFiltercs.REG_NOTIFY_CHANGE_NAME">
            <summary>
            Notify the caller if a subkey is added or deleted.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegNotifyFiltercs.REG_NOTIFY_CHANGE_ATTRIBUTES">
            <summary>
            Notify the caller of changes to the attributes of the key, such as the security descriptor information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegNotifyFiltercs.REG_NOTIFY_CHANGE_LAST_SET">
            <summary>
            Notify the caller of changes to a value of the key. This can include adding or deleting a value, or changing an existing value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegNotifyFiltercs.REG_NOTIFY_CHANGE_SECURITY">
            <summary>
            Notify the caller of changes to the security descriptor of the key.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegNotifyFiltercs.REG_NOTIFY_THREAD_AGNOSTIC">
            <summary>
            Indicates that the lifetime of the registration must not be tied to the lifetime of the thread issuing the RegNotifyChangeKeyValue call.
            Note  This flag value is only supported in Windows 8 and later.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegRestoreFlags.REG_FORCE_RESTORE">
            <summary>
            If specified, the restore operation is executed even if open handles exist at or beneath the location 
            in the registry hierarchy to which the hKey parameter points.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RegRestoreFlags.REG_WHOLE_HIVE_VOLATILE">
            <summary>
            If specified, a new, volatile (memory only) set of registry information, 
            or hive, is created.If REG_WHOLE_HIVE_VOLATILE is specified, 
            the key identified by the hKey parameter must be either the HKEY_USERS or HKEY_LOCAL_MACHINE value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_CREATEKEY_OPTIONS.REG_OPTION_BACKUP_RESTORE">
            <summary>
            If this flag is set, the function ignores the samDesired parameter and attempts 
            to open the key with the access required to backup or restore the key. 
            If the calling thread has the SE_BACKUP_NAME privilege enabled, 
            the key is opened with the ACCESS_SYSTEM_SECURITY and KEY_READ access rights. 
            If the calling thread has the SE_RESTORE_NAME privilege enabled, beginning with Windows Vista, 
            the key is opened with the ACCESS_SYSTEM_SECURITY, DELETE and KEY_WRITE access rights. 
            If both privileges are enabled, the key has the combined access rights for both privileges.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_CREATEKEY_OPTIONS.REG_OPTION_CREATE_LINK">
            <summary>
            This key is a symbolic link. The target path is assigned to the L"SymbolicLinkValue" value of the key. 
            The target path must be an absolute registry path.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_CREATEKEY_OPTIONS.REG_OPTION_NON_VOLATILE">
            <summary>
            This key is not volatile; this is the default. 
            The information is stored in a file and is preserved when the system is restarted. 
            The RegSaveKey function saves keys that are not volatile.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_CREATEKEY_OPTIONS.REG_OPTION_VOLATILE">
            <summary>
            All keys created by the function are volatile. 
            The information is stored in memory and is not preserved when the corresponding registry hive is unloaded. 
            For HKEY_LOCAL_MACHINE, this occurs only when the system initiates a full shutdown. For registry keys loaded by the RegLoadKey function, 
            this occurs when the corresponding RegUnLoadKey is performed. 
            The RegSaveKey function does not save volatile keys. This flag is ignored for keys that already exist.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE">
            <summary>
            Specifies the system-defined type for the value entry in the registry key
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_value_basic_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_BINARY">
            <summary>
            Binary data in any form 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_DWORD">
            <summary>
            A 4-byte numerical value 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_DWORD_LITTLE_ENDIAN">
            <summary>
            A 4-byte numerical value whose least significant byte is at the lowest address 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_DWORD_BIG_ENDIAN">
            <summary>
            A 4-byte numerical value whose least significant byte is at the highest address 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_EXPAND_SZ">
            <summary>
            A null-terminated Unicode string, 
            containing unexpanded references to environment variables, such as "%PATH%" 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_LINK">
            <summary>
            A Unicode string naming a symbolic link. 
            This type is irrelevant to device and intermediate drivers 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_MULTI_SZ">
            <summary>
            An array of null-terminated strings, terminated by another zero 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_NONE">
            <summary>
            Data with no particular type 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_SZ">
            <summary>
            A null-terminated Unicode string 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_RESOURCE_LIST">
            <summary>
            A device driver's list of hardware resources, 
            used by the driver or one of the physical devices it controls, 
            in the \ResourceMap tree 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_RESOURCE_REQUIREMENTS_LIST">
            <summary>
            A device driver's list of possible hardware resources it or one of the physical devices it controls can use, 
            from which the system writes a subset into the \ResourceMap tree 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_KEY_TYPE.REG_FULL_RESOURCE_DESCRIPTOR">
            <summary>
            A list of hardware resources that a physical device is using, 
            detected and written into the \HardwareDescription tree by the system 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS">
            <summary>
            The REG_NOTIFY_CLASS enumeration type specifies the type of registry operation that the configuration manager is passing to a RegistryCallback routine.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_reg_notify_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtDeleteKey">
            <summary>
            Specifies that a thread is attempting to delete a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value only on Windows XP.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtPreDeleteKey">
            <summary>
            Specifies that a thread is attempting to delete a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value on Windows Server 2003 and later versions of the Windows operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtSetValueKey">
            <summary>
            Specifies that a thread is attempting to set a value entry for a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value only on Windows XP.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtPreSetValueKey">
            <summary>
            Specifies that a thread is attempting to set a value entry for a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value on Windows Server 2003 and later versions of the Windows operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtDeleteValueKey">
            <summary>
            Specifies that a thread is attempting to delete a value entry for a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value only on Windows XP.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtPreDeleteValueKey">
            <summary>
            Specifies that a thread is attempting to delete a value entry for a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value on Windows Server 2003 and later versions of the Windows operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtSetInformationKey">
            <summary>
            Specifies that a thread is attempting to set the metadata for a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value only on Windows XP.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtPreSetInformationKey">
            <summary>
            Specifies that a thread is attempting to set the metadata for a key. 
            This value indicates a pre-notification call to RegistryCallback.
            Use this value on Windows Server 2003 and later versions of the Windows operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtRenameKey">
            <summary>
            Specifies that a thread is attempting to rename a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value only on Windows XP.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtPreRenameKey">
            <summary>
            Specifies that a thread is attempting to rename a key. 
            This value indicates a pre-notification call to RegistryCallback.
            Use this value on Windows Server 2003 and later versions of the Windows operating system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_NOTIFY_CLASS.RegNtEnumerateKey">
            <summary>
            Specifies that a thread is attempting to enumerate a subkey of a key. 
            This value indicates a pre-notification call to RegistryCallback. 
            Use this value only on Windows XP.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_SAVE_FLAGS.REG_STANDARD_FORMAT">
            <summary>
            The key or hive is saved in standard format. The standard format is the only format supported by Windows 2000.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_SAVE_FLAGS.REG_LATEST_FORMAT">
            <summary>
            The key or hive is saved in the latest format. The latest format is supported starting with Windows XP. 
            After the key or hive is saved in this format, it cannot be loaded on an earlier system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.REG_SAVE_FLAGS.REG_NO_COMPRESSION">
            <summary>
            The hive is saved with no compression, for faster save operations. 
            The hKey parameter must specify the root of a hive under HKEY_LOCAL_MACHINE or HKEY_USERS. 
            For example, HKLM\SOFTWARE is the root of a hive.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.RESOURCEMANAGER_INFORMATION_CLASS">
            <summary>
            The RESOURCEMANAGER_INFORMATION_CLASS enumeration identifies the type of information that the ZwQueryInformationResourceManager routine can retrieve for a resource manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_resourcemanager_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCEMANAGER_INFORMATION_CLASS.ResourceManagerBasicInformation">
            <summary>
            Information about a resource manager object is stored in a RESOURCEMANAGER_BASIC_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCEMANAGER_INFORMATION_CLASS.ResourceManagerCompletionInformation">
            <summary>
            Information about a resource manager object is stored in a RESOURCEMANAGER_COMPLETION_INFORMATION structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE">
            <summary>
            These flags are used within both CM_PARTIAL_RESOURCE_DESCRIPTOR and IO_RESOURCE_DESCRIPTOR structures, 
            except where noted.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_partial_resource_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypePort">
            <summary>
            u.Port
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeInterrupt">
            <summary>
            u.Interrupt or u.MessageInterrupt.If the CM_RESOURCE_INTERRUPT_MESSAGE flag of Flags is set, 
            use u.MessageInterrupt; otherwise, use u.Interrupt.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeMemory">
            <summary>
            u.Memory
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeMemoryLarge">
            <summary>
            One of u.Memory40, u.Memory48, or u.Memory64.
            The CM_RESOURCE_MEMORY_LARGE_XXX flags set in the Flags member determines which structure is used.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeDma">
            <summary>
            u.Dma (if CM_RESOURCE_DMA_V3 is not set) or u.DmaV3 (if CM_RESOURCE_DMA_V3 flag is set)
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeDevicePrivate">
            <summary>
            u.DevicePrivate
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeBusNumber">
            <summary>
            u.BusNumber
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeDeviceSpecific">
            <summary>
            u.DeviceSpecificData(Not used within IO_RESOURCE_DESCRIPTOR.)
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypePcCardConfig">
            <summary>
            u.DevicePrivate
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeMfCardConfig">
            <summary>
            u.DevicePrivate
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeConnection">
            <summary>
            u.Connection
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeConfigData">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RESOURCE_TYPE.CmResourceTypeNonArbitrated">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RTS_CONTROL.RTS_CONTROL_DISABLE">
            <summary>
            Disables the RTS line when the device is opened and leaves it disabled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RTS_CONTROL.RTS_CONTROL_ENABLE">
            <summary>
            Enables the RTS line when the device is opened and leaves it on.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RTS_CONTROL.RTS_CONTROL_HANDSHAKE">
            <summary>
            Enables RTS handshaking. 
            The driver raises the RTS line when the "type-ahead" (input) buffer is less than one-half full 
            and lowers the RTS line when the buffer is more than three-quarters full. If handshaking is enabled, 
            it is an error for the application to adjust the line by using the EscapeCommFunction function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.RTS_CONTROL.RTS_CONTROL_TOGGLE">
            <summary>
            Specifies that the RTS line will be high if bytes are available for transmission. 
            After all buffered bytes have been sent, the RTS line will be low.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_IMPERSONATION_LEVEL">
            <summary>
            The SECURITY_IMPERSONATION_LEVEL enumeration contains values that specify security impersonation levels.
            Security impersonation levels govern the degree to which a server process can act on behalf of a client process.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-security_impersonation_level
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION">
            <summary>
            typedef ULONG SECURITY_INFORMATION, *PSECURITY_INFORMATION;
            A value of type SECURITY_INFORMATION is used to identify the object-related security information being set or queried.
            This security information includes:
            The owner of an object
            The primary group of an object
            The discretionary access-control list (DACL) of an object
            The system ACL (SACL) of an object
            Each item of security information is designated by a bit flag.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ifs/security-information
            https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-dtyp/cca27429-5689-4a16-b2b4-9325d93e4ba2
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.OWNER_SECURITY_INFORMATION">
            <summary>
            The owner identifier of the object is being referenced.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.GROUP_SECURITY_INFORMATION">
            <summary>
            The primary group identifier of the object is being referenced.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.DACL_SECURITY_INFORMATION">
            <summary>
            The DACL of the object is being referenced.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.SACL_SECURITY_INFORMATION">
            <summary>
            The SACL of the object is being referenced.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.LABEL_SECURITY_INFORMATION">
            <summary>
            The mandatory integrity label is being referenced.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.UNPROTECTED_SACL_SECURITY_INFORMATION">
            <summary>
            The SACL inherits access control entries (ACEs) from the parent object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.UNPROTECTED_DACL_SECURITY_INFORMATION">
            <summary>
            The DACL inherits ACEs from the parent object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.PROTECTED_SACL_SECURITY_INFORMATION">
            <summary>
            The SACL cannot inherit ACEs.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.PROTECTED_DACL_SECURITY_INFORMATION">
            <summary>
            The DACL cannot inherit ACEs.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.ATTRIBUTE_SECURITY_INFORMATION">
            <summary>
            A SYSTEM_RESOURCE_ATTRIBUTE_ACE (section 2.4.4.15) is being referenced.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.SCOPE_SECURITY_INFORMATION">
            <summary>
            A SYSTEM_SCOPED_POLICY_ID_ACE (section 2.4.4.16) is being referenced.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.PROCESS_TRUST_LABEL_SECURITY_INFORMATION">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_INFORMATION.BACKUP_SECURITY_INFORMATION">
            <summary>
            The security descriptor is being accessed for use in a backup operation.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SECURITY_LOGON_TYPE">
            <summary>
            The SECURITY_LOGON_TYPE enumeration indicates the type of logon requested by a logon process.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-security_logon_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SE_IMAGE_TYPE">
            <summary>
            Defines values for type of image used for image verification.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_se_image_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SE_OBJECT_TYPE">
            <summary>
            The SE_OBJECT_TYPE enumeration contains values that correspond to the types of Windows objects that support security.
            The functions, such as GetSecurityInfo and SetSecurityInfo,
            that set and retrieve the security information of an object,
            use these values to indicate the type of object.
            https://learn.microsoft.com/en-us/windows/win32/api/accctrl/ne-accctrl-se_object_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SHARE_DISPOSITION">
            <summary>
            Indicates whether the described resource can be shared. 
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_partial_resource_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SHARE_DISPOSITION.CmResourceShareDeviceExclusive">
            <summary>
            The device requires exclusive use of the resource.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SHARE_DISPOSITION.CmResourceShareDriverExclusive">
            <summary>
            The driver requires exclusive use of the resource. 
            Not supported for WDM drivers.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SHARE_DISPOSITION.CmResourceShareShared">
            <summary>
            The resource can be shared without restriction.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SID_NAME_USE">
            <summary>
            The SID_NAME_USE enumeration contains values that specify the type of a security identifier (SID).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-sid_name_use
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SIGNAL_WAIT.WAIT_ABANDONED">
            <summary>
            The specified object is a mutex object that was not released by the thread 
            that owned the mutex object before the owning thread terminated. 
            Ownership of the mutex object is granted to the calling thread, and the mutex is set to nonsignaled.
            If the mutex was protecting persistent state information, you should check it for consistency.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SIGNAL_WAIT.WAIT_IO_COMPLETION">
            <summary>
            The wait was ended by one or more user-mode asynchronous procedure calls (APC) queued to the thread.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SIGNAL_WAIT.WAIT_OBJECT_0">
            <summary>
            The state of the specified object is signaled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SIGNAL_WAIT.WAIT_TIMEOUT">
            <summary>
            The time-out interval elapsed, and the object's state is nonsignaled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SIGNAL_WAIT.WAIT_FAILED">
            <summary>
            The function has failed. To get extended error information, call GetLastError.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS">
            <summary>
            The clipboard formats defined by the system are called standard clipboard formats.
            https://learn.microsoft.com/en-us/windows/win32/dataxchg/standard-clipboard-formats
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_BITMAP">
            <summary>
            A handle to a bitmap (HBITMAP).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_DIB">
            <summary>
            A memory object containing a BITMAPINFO structure followed by the bitmap bits.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_DIBV5">
            <summary>
            A memory object containing a BITMAPV5HEADER structure followed by the bitmap color space information and the bitmap bits.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_DIF">
            <summary>
            Software Arts' Data Interchange Format.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_DSPBITMAP">
            <summary>
            Bitmap display format associated with a private format.The hMem parameter must be a handle to data that can be displayed in bitmap format in lieu of the privately formatted data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_DSPENHMETAFILE">
            <summary>
            Enhanced metafile display format associated with a private format.The hMem parameter must be a handle to data that can be displayed in enhanced metafile format in lieu of the privately formatted data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_DSPMETAFILEPICT">
            <summary>
            Metafile-picture display format associated with a private format.The hMem parameter must be a handle to data that can be displayed in metafile-picture format in lieu of the privately formatted data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_DSPTEXT">
            <summary>
            Text display format associated with a private format.The hMem parameter must be a handle to data that can be displayed in text format in lieu of the privately formatted data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_ENHMETAFILE">
            <summary>
            A handle to an enhanced metafile (HENHMETAFILE).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_GDIOBJFIRST">
            <summary>
            Start of a range of integer values for application-defined GDI object clipboard formats.The end of the range is CF_GDIOBJLAST.
            Handles associated with clipboard formats in this range are not automatically deleted using the GlobalFree function when the clipboard is emptied.Also, 
            when using values in this range, the hMem parameter is not a handle to a GDI object, 
            but is a handle allocated by the GlobalAlloc function with the GMEM_MOVEABLE flag.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_GDIOBJLAST">
            <summary>
            See CF_GDIOBJFIRST.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_HDROP">
            <summary>
            A handle to type HDROP that identifies a list of files.An application can retrieve information about the files by passing the handle to the DragQueryFile function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_LOCALE">
            <summary>
            The data is a handle (HGLOBAL) to the locale identifier (LCID) associated with text in the clipboard. 
            When you close the clipboard, if it contains CF_TEXT data but no CF_LOCALE data, the system automatically sets the CF_LOCALE format to the current input language. 
            You can use the CF_LOCALE format to associate a different locale with the clipboard text.
            An application that pastes text from the clipboard can retrieve this format to determine which character set was used to generate the text.
            Note that the clipboard does not support plain text in multiple character sets.To achieve this, use a formatted text data type such as RTF instead.
            The system uses the code page associated with CF_LOCALE to implicitly convert from CF_TEXT to CF_UNICODETEXT. 
            Therefore, the correct code page table is used for the conversion.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_METAFILEPICT">
            <summary>
            Handle to a metafile picture format as defined by the METAFILEPICT structure.When passing a CF_METAFILEPICT handle by means of DDE, the application responsible for deleting hMem should also free the metafile referred to by the CF_METAFILEPICT handle.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_OEMTEXT">
            <summary>
            Text format containing characters in the OEM character set. Each line ends with a carriage return/linefeed (CR-LF) combination. A null character signals the end of the data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_OWNERDISPLAY">
            <summary>
            Owner-display format. The clipboard owner must display and update the clipboard viewer window, and receive the WM_ASKCBFORMATNAME, WM_HSCROLLCLIPBOARD, WM_PAINTCLIPBOARD, WM_SIZECLIPBOARD, and WM_VSCROLLCLIPBOARD messages. The hMem parameter must be NULL.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_PALETTE">
            <summary>
            Handle to a color palette. Whenever an application places data in the clipboard that depends on or assumes a color palette, it should place the palette on the clipboard as well.
            If the clipboard contains data in the CF_PALETTE (logical color palette) format, the application should use the SelectPalette and RealizePalette functions to realize (compare) any other data in the clipboard against that logical palette.
            When displaying clipboard data, the clipboard always uses as its current palette any object on the clipboard that is in the CF_PALETTE format.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_PENDATA">
            <summary>
            Data for the pen extensions to the Microsoft Windows for Pen Computing.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_PRIVATEFIRST">
            <summary>
            Start of a range of integer values for private clipboard formats.The range ends with CF_PRIVATELAST. 
            Handles associated with private clipboard formats are not freed automatically; 
            the clipboard owner must free such handles, typically in response to the WM_DESTROYCLIPBOARD message.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_PRIVATELAST">
            <summary>
            See CF_PRIVATEFIRST.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_RIFF">
            <summary>
            Represents audio data more complex than can be represented in a CF_WAVE standard wave format.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_SYLK">
            <summary>
            Microsoft Symbolic Link (SYLK) format.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_TEXT">
            <summary>
            Text format. Each line ends with a carriage return/linefeed (CR-LF) combination.A null character signals the end of the data.Use this format for ANSI text.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_TIFF">
            <summary>
            Tagged-image file format.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_UNICODETEXT">
            <summary>
            Unicode text format.Each line ends with a carriage return/linefeed (CR-LF) combination. A null character signals the end of the data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STANDARD_CLIPBOARD_FORMATS.CF_WAVE">
            <summary>
            Represents audio data in one of the standard wave formats, such as 11 kHz or 22 kHz PCM.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.STOPBITS">
            <summary>
            The number of stop bits to be used. This member can be one of the following values.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STOPBITS.ONESTOPBIT">
            <summary>
            1 stop bit.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STOPBITS.ONE5STOPBITS">
            <summary>
            1.5 stop bits.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.STOPBITS.TWOSTOPBITS">
            <summary>
            2 stop bits.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags">
            <summary>
            One or more bit flags that specify options for the shutdown.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_FORCE_OTHERS">
            <summary>
            All sessions are forcefully logged off. 
            If this flag is not set and users other than the current user are logged on to the computer specified by the lpMachineName parameter, 
            this function fails with a return value of ERROR_SHUTDOWN_USERS_LOGGED_ON.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_FORCE_SELF">
            <summary>
            Specifies that the originating session is logged off forcefully. If this flag is not set, 
            the originating session is shut down interactively, 
            so a shutdown is not guaranteed even if the function returns successfully.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_GRACE_OVERRIDE">
            <summary>
            Overrides the grace period so that the computer is shut down immediately.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_HYBRID">
            <summary>
            Beginning with InitiateShutdown running on Windows 8, 
            you must include the SHUTDOWN_HYBRID flag with one or more of the flags in this table to specify options for the shutdown.
            
            Beginning with Windows 8, InitiateShutdown always initiate a full system shutdown if the SHUTDOWN_HYBRID flag is absent.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_INSTALL_UPDATES">
            <summary>
            The computer installs any updates before starting the shutdown.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_NOREBOOT">
            <summary>
            The computer is shut down but is not powered down or rebooted.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_POWEROFF">
            <summary>
            The computer is shut down and powered down.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_RESTART">
            <summary>
            The computer is shut down and rebooted.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownFlags.SHUTDOWN_RESTARTAPPS">
            <summary>
            The system is rebooted using the ExitWindowsEx function with the EWX_RESTARTAPPS flag.
            This restarts any applications that have been registered for restart using the RegisterApplicationRestart function.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes">
            <summary>
            The shutdown reason codes are used by the ExitWindowsEx and InitiateSystemShutdownEx functions in the dwReason parameter.
            https://learn.microsoft.com/en-us/windows/win32/shutdown/system-shutdown-reason-codes
            example:        SHTDN_REASON_MAJOR_APPLICATION | SHTDN_REASON_MINOR_HUNG
            description:    "Application: Unresponsive" An unplanned restart or shutdown to troubleshoot an unresponsive application.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MAJOR_APPLICATION">
            <summary>
            Application issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MAJOR_HARDWARE">
            <summary>
            Hardware issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MAJOR_LEGACY_API">
            <summary>
            The InitiateSystemShutdown function was used instead of InitiateSystemShutdownEx.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MAJOR_OPERATINGSYSTEM">
            <summary>
            Operating system issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MAJOR_OTHER">
            <summary>
            Other issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MAJOR_POWER">
            <summary>
            Power failure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MAJOR_SOFTWARE">
            <summary>
            Software issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MAJOR_SYSTEM">
            <summary>
            System failure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_BLUESCREEN">
            <summary>
            Blue screen crash event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_CORDUNPLUGGED">
            <summary>
            Unplugged.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_DISK">
            <summary>
            Disk.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_ENVIRONMENT">
            <summary>
            Environment.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_HARDWARE_DRIVER">
            <summary>
            Driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_HOTFIX">
            <summary>
            Hot fix.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_HOTFIX_UNINSTALL">
            <summary>
            Hot fix uninstallation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_HUNG">
            <summary>
            Unresponsive.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_INSTALLATION">
            <summary>
            Installation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_MAINTENANCE">
            <summary>
            Maintenance.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_MMC">
            <summary>
            MMC issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY">
             <summary>
            Network connectivity. 
             </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_NETWORKCARD">
            <summary>
            Network card.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_OTHER">
            <summary>
            Other issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_OTHERDRIVER">
            <summary>
            Other driver event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_POWER_SUPPLY">
            <summary>
            Power supply.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_PROCESSOR">
            <summary>
            Processor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_RECONFIG">
            <summary>
            Reconfigure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_SECURITY">
            <summary>
            Security issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_SECURITYFIX">
            <summary>
            Security patch.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL">
            <summary>
            Security patch uninstallation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_SERVICEPACK">
            <summary>
            Service pack.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL">
            <summary>
            Service pack uninstallation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_TERMSRV">
            <summary>
            Terminal Services.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_UNSTABLE">
            <summary>
            Unstable.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_UPGRADE">
            <summary>
            Upgrade.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_MINOR_WMI">
            <summary>
            WMI issue.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_FLAG_USER_DEFINED">
            <summary>
            The reason code is defined by the user. 
            For more information, see Defining a Custom Reason Code.
            If this flag is not present, the reason code is defined by the system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SystemShutdownReasonCodes.SHTDN_REASON_FLAG_PLANNED">
            <summary>
            The shutdown was planned. The system generates a System State Data (SSD) file. 
            This file contains system state information such as the processes, threads, memory usage, and configuration.
            If this flag is not present, the shutdown was unplanned. 
            Notification and reporting options are controlled by a set of policies. 
            For example, after logging in, the system displays a dialog box reporting the unplanned shutdown if the policy has been enabled. 
            An SSD file is created only if the SSD policy is enabled on the system. 
            The administrator can use Windows Error Reporting to send the SSD data to a central location, or to Microsoft.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE">
            <summary>
            The SYSTEM_POWER_STATE enumeration type is used to indicate a system power state.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_system_power_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE.PowerSystemUnspecified">
            <summary>
            Indicates an unspecified system power state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE.PowerSystemWorking">
            <summary>
            Indicates maximum system power, which corresponds to system working state S0.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE.PowerSystemSleeping1">
            <summary>
            Indicates a system sleeping state less than PowerSystemWorking and greater than PowerSystemSleeping2, 
            which corresponds to system power state S1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE.PowerSystemSleeping2">
            <summary>
            Indicates a system sleeping state less than PowerSystemSleeping1 and greater than PowerSystemSleeping3, 
            which corresponds to system power state S2.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE.PowerSystemSleeping3">
            <summary>
            Indicates a system sleeping state less than PowerSystemSleeping2 and greater than PowerSystemHibernate, 
            which corresponds to system power state S3.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE.PowerSystemHibernate">
            <summary>
            Indicates the lowest-powered sleeping state, 
            which corresponds to system power state S4.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE.PowerSystemShutdown">
            <summary>
            Indicates the system is turned off, 
            which corresponds to system shutdown state S5.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.SYSTEM_POWER_STATE.PowerSystemMaximum">
            <summary>
            The number of system power state values for this enumeration type that represents actual power states. 
            This value is the number of elements in the DeviceState member of the DEVICE_CAPABILITIES structure for a device. 
            The other system power state values are less than this value.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.THREAD_INFORMATION_CLASS">
            <summary>
            Specifies the collection of supported thread types.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ne-processthreadsapi-thread_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.THREAD_INFORMATION_CLASS.ThreadMemoryPriority">
            <summary>
            Lower the memory priority of threads that perform background operations or access files and data
            that are not expected to be accessed frequently.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.THREAD_INFORMATION_CLASS.ThreadAbsoluteCpuPriority">
            <summary>
            CPU priority.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.THREAD_INFORMATION_CLASS.ThreadDynamicCodePolicy">
            <summary>
            Generate dynamic code or modify executable code.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.THREAD_INFORMATION_CLASS.ThreadPowerThrottling">
            <summary>
            Throttle the target process activity for power management.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TOKEN_ELEVATION_TYPE">
            <summary>
            The TOKEN_ELEVATION_TYPE enumeration indicates the elevation type of token being queried by the GetTokenInformation function.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-token_elevation_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TOKEN_INFORMATION_CLASS">
            <summary>
            The TOKEN_INFORMATION_CLASS enumeration contains values that specify the type of information being assigned to or retrieved from an access token.
            The GetTokenInformation function uses these values to indicate the type of token information to retrieve.
            The SetTokenInformation function uses these values to set the token information.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-token_information_class
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TOKEN_TYPE">
            <summary>
            The TOKEN_TYPE enumeration contains values that differentiate between a primary token and an impersonation token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-token_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TRACE_INFORMATION_CLASS">
            <summary>
            The TRACE_INFORMATION_CLASS enumeration type is used to indicate types of information associated with a WMI event tracing session.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_trace_information_class
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTIONMANAGER_INFORMATION_CLASS">
            <summary>
            The TRANSACTIONMANAGER_INFORMATION_CLASS enumeration specifies the type of information that the ZwQueryInformationTransactionManager routine can retrieve for a transaction manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_transactionmanager_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTIONMANAGER_INFORMATION_CLASS.TransactionManagerBasicInformation">
            <summary>
            Information about a transaction manager object is stored in a TRANSACTIONMANAGER_BASIC_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTIONMANAGER_INFORMATION_CLASS.TransactionManagerLogInformation">
            <summary>
            Information about a transaction manager object is stored in a TRANSACTIONMANAGER_LOG_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTIONMANAGER_INFORMATION_CLASS.TransactionManagerLogPathInformation">
            <summary>
            Information about a transaction manager object is stored in a TRANSACTIONMANAGER_LOGPATH_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTIONMANAGER_INFORMATION_CLASS.TransactionManagerRecoveryInformation">
            <summary>
            Information about a transaction manager object is stored in a TRANSACTIONMANAGER_RECOVERY_INFORMATION structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_INFORMATION_CLASS">
            <summary>
            The TRANSACTION_INFORMATION_CLASS enumeration specifies the type of information that ZwSetInformationTransaction can set and ZwQueryInformationTransaction can retrieve for a transaction manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_transaction_information_class
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_INFORMATION_CLASS.TransactionBasicInformation">
            <summary>
            Information about a transaction manager object is stored in a TRANSACTION_BASIC_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_INFORMATION_CLASS.TransactionPropertiesInformation">
            <summary>
            Information about a transaction manager object is stored in a TRANSACTION_PROPERTIES_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_INFORMATION_CLASS.TransactionEnlistmentInformation">
            <summary>
            Information about a transaction manager object is stored in a TRANSACTION_ENLISTMENTS_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_INFORMATION_CLASS.TransactionSuperiorEnlistmentInformation">
            <summary>
            Information about a transaction manager object is stored in a TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_OUTCOME">
            <summary>
            The TRANSACTION_OUTCOME enumeration defines the outcomes (results) that KTM can assign to a transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_transaction_outcome
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_OUTCOME.TransactionOutcomeUndetermined">
            <summary>
            The transaction has not yet been committed or rolled back.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_OUTCOME.TransactionOutcomeCommitted">
            <summary>
            The transaction has been committed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_OUTCOME.TransactionOutcomeAborted">
            <summary>
            The transaction has been rolled back.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_STATE">
            <summary>
            The TRANSACTION_STATE enumeration defines the states that KTM can assign to a transaction.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ne-wdm-_transaction_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_STATE.TransactionStateNormal">
            <summary>
            The transaction's state is neither in doubt nor committed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_STATE.TransactionStateIndoubt">
            <summary>
            The transaction's state is in doubt (that is, KTM cannot determine whether the transaction should be committed or rolled back). 
            A transaction that has been prepared enters the "in doubt" state if its superior transaction manager becomes unavailable.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.TRANSACTION_STATE.TransactionStateCommittedNotify">
            <summary>
            The transaction has been committed. Commit notifications might (or might not) have been delivered to all enlistments.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TRUSTED_INFORMATION_CLASS">
            <summary>
            The TRUSTED_INFORMATION_CLASS enumeration type defines values that indicate the type of information to set or query for a trusted domain.
            Each value has an associated structure that the LsaQueryTrustedDomainInfo and LsaSetTrustedDomainInformation functions use to store the information.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ne-ntsecapi-trusted_information_class
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TRUSTEE_FORM">
            <summary>
            The TRUSTEE_FORM enumeration contains values that indicate the type of data pointed to by the ptstrName member of the TRUSTEE structure.
            https://learn.microsoft.com/en-us/windows/win32/api/accctrl/ne-accctrl-trustee_form
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.TRUSTEE_TYPE">
            <summary>
            The TRUSTEE_TYPE enumeration contains values that indicate the type of trustee identified by a TRUSTEE structure.
            https://learn.microsoft.com/en-us/windows/win32/api/accctrl/ne-accctrl-trustee_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX.UOI_FLAGS">
            <summary>
            The handle flags. The pvInfo parameter must point to a USEROBJECTFLAGS structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX.UOI_NAME">
            <summary>
            The name of the object, as a string.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX.UOI_TYPE">
            <summary>
            The type name of the object, as a string.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX.UOI_USER_SID">
            <summary>
            The SID structure that identifies the user that is currently associated with the specified object.
            If no user is associated with the object, the value returned in the buffer pointed to by lpnLengthNeeded is zero.
            Note that SID is a variable length structure.
            You will usually make a call to GetUserObjectInformation to determine the length of the SID before retrieving its value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX.UOI_HEAPSIZE">
            <summary>
            The size of the desktop heap, in KB, as a ULONG value.
            The hObj parameter must be a handle to a desktop object, otherwise, the function fails.
            Windows Server 2003 and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX.UOI_IO">
            <summary>
            TRUE if the hObj parameter is a handle to the desktop object that is receiving input from the user. FALSE otherwise.
            Windows Server 2003 and Windows XP/2000:  This value is not supported.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.USER_OBJECT_INDEX.UOI_TIMERPROC_EXCEPTION_SUPPRESSION">
            <summary>
            Sets the exception handling behavior when calling TimerProc. hObj must be the process handle returned by the GetCurrentProcess function.
            The pvInfo parameter must point to a BOOL. If TRUE, Windows will enclose its calls to TimerProc with an exception handler that consumes and discards all exceptions.
            This has been the default behavior since Windows 2000, although that may change in future versions of Windows.
            If pvInfo points to FALSE, Windows will not enclose its calls to TimerProc with an exception handler. A setting of FALSE is recommended.
            Otherwise, the application could behave unpredictably, and could be more vulnerable to security exploits.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Enums.WELL_KNOWN_SID_TYPE">
            <summary>
            The WELL_KNOWN_SID_TYPE enumeration is a list of commonly used security identifiers (SIDs).
            Programs can pass these values to the CreateWellKnownSid function to create a SID from this list.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ne-winnt-well_known_sid_type
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.CriticalWorkQueue">
            <summary>
            Indicates a real-time system worker thread. The assigned priority level is 13.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.DelayedWorkQueue">
            <summary>
            Indicates an ordinary worker thread. The assigned priority level is 12.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.HyperCriticalWorkQueue">
            <summary>
            System priority level. The assigned priority level is 15.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.NormalWorkQueue">
            <summary>
            System priority level. The assigned priority level is 8
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.BackgroundWorkQueue">
            <summary>
            System priority level. The assigned priority level is 7.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.RealTimeWorkQueue">
            <summary>
            System priority level. The assigned priority level is18.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.SuperCriticalWorkQueue">
            <summary>
            System priority level. The assigned priority level is 14.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.MaximumWorkQueue">
            <summary>
            System priority maximum. No priority level assigned.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Enums.WORK_QUEUE_TYPE.CustomPriorityWorkQueue">
            <summary>
            The queue has a custom priority level assigned by the caller.
            The CustomPriorityWorkQueue value is the base priority level for the custom priority queue. 
            Work items are queued at a particular priority by setting QueueType to CustomPriorityWorkQueue + Priority where Priority is the KPRIORITY value for the work item.
            This queue type is valid starting with Windows 8.1.
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Extensions.Helper.c_str(System.String)">
            <summary>
            Converts the Wide string into a Multibyte string. The pool has to be freed after usage.
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Extensions.Pointer">
            <summary>
            class for work with pointer
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Extensions.Pointer.IntPtrWrapper">
            <summary>
            wrapper for IntPtr because IntPtr is a structure
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Extensions.Pointer.ObjectWrapper">
            <summary>
            wrapper for object because IntPtr use a wrapper
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Extensions.Pointer.Object">
            <summary>
            return the object
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Extensions.Pointer.IntPtr">
            <summary>
            pointer for object
            </summary>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Extensions.Pointer.GetPointer">
            <summary>
            return pointer for object
            </summary>
            <param name="obj">object for which will get pinter</param>
            <returns></returns>
        </member>
        <member name="M:Ban3.Infrastructures.NativeLibs.Extensions.Pointer.GetPointer(System.Object)">
            <summary>
            return pointer for object
            </summary>
            <param name="obj">object for which will get pinter</param>
            <returns></returns>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Externals.TemporaryInvoke">
            <summary>
            
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACCESS_ALLOWED_ACE">
            <summary>
            The ACCESS_ALLOWED_ACE structure defines an access control entry (ACE) for the discretionary access control list (DACL) that controls access to an object.
            An access-allowed ACE allows access to an object for a specific trustee identified by a security identifier (SID).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-access_allowed_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACCESS_ALLOWED_CALLBACK_ACE">
            <summary>
            The ACCESS_ALLOWED_CALLBACK_ACE structure defines an access control entry (ACE) for the discretionary access control list (DACL) that controls access to an object.
            An access-allowed ACE allows access to an object for a specific trustee identified by a security identifier(SID).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-access_allowed_callback_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACCESS_ALLOWED_CALLBACK_OBJECT_ACE">
            <summary>
            The ACCESS_ALLOWED_CALLBACK_OBJECT_ACE structure defines an access control entry (ACE) that controls allowed access to an object, property set, or property.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-access_allowed_callback_object_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACCESS_ALLOWED_OBJECT_ACE">
            <summary>
            The ACCESS_ALLOWED_OBJECT_ACE structure defines an access control entry (ACE) that controls allowed access to an object, a property set, or property.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-access_allowed_object_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACCESS_DENIED_ACE">
            <summary>
            The ACCESS_DENIED_ACE structure defines an access control entry (ACE) for the discretionary access control list (DACL) that controls access to an object.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-access_denied_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACCESS_DENIED_CALLBACK_ACE">
            <summary>
            The ACCESS_DENIED_CALLBACK_ACE structure defines an access control entry (ACE) for the discretionary access control list (DACL) that controls access to an object.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-access_denied_callback_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACCESS_DENIED_CALLBACK_OBJECT_ACE">
            <summary>
            The ACCESS_DENIED_CALLBACK_OBJECT_ACE structure defines an access control entry (ACE) that controls denied access to an object, a property set, or property.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-access_denied_callback_object_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACCESS_DENIED_OBJECT_ACE">
            <summary>
            The ACCESS_DENIED_OBJECT_ACE structure defines an access control entry (ACE) that controls denied access to an object, a property set, or property.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-access_denied_object_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACE_HEADER">
            <summary>
            The ACE_HEADER structure defines the type and size of an access control entry (ACE).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-ace_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACE_HEADER.AceType">
            <summary>
            An unsigned 8-bit integer that specifies the ACE types. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACE_HEADER.AceFlags">
            <summary>
            An unsigned 8-bit integer that specifies a set of ACE type-specific control flags.
            This field can be a combination of the following values.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACE_HEADER.AceSize">
            <summary>
            An unsigned 16-bit integer that specifies the size, in bytes, of the ACE.
            The AceSize field can be greater than the sum of the individual fields, but MUST be a multiple of 4 to ensure alignment on a DWORD boundary.
            In cases where the AceSize field encompasses additional data for the callback ACEs types, that data is implementation-specific.
            Otherwise, this additional data is not interpreted and MUST be ignored.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACL">
            <summary>
            The ACL structure is the header of an access control list (ACL). 
            A complete ACL consists of an ACL structure followed by an ordered list of zero or more access control entries (ACEs).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-acl
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACL.AclRevision">
            <summary>
            Specifies the revision level of the ACL. 
            This value should be ACL_REVISION, unless the ACL contains an object-specific ACE, 
            in which case this value must be ACL_REVISION_DS. 
            All ACEs in an ACL must be at the same revision level.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACL.Sbz1">
            <summary>
            Specifies a zero byte of padding that aligns the AclRevision member on a 16-bit boundary.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACL.AclSize">
            <summary>
            Specifies the size, in bytes, of the ACL. This value includes both the ACL structure and all the ACEs.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACL.AceCount">
            <summary>
            Specifies the number of ACEs stored in the ACL.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACL.Sbz2">
            <summary>
            Specifies two zero-bytes of padding that align the ACL structure on a 32-bit boundary.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACL_REVISION_INFORMATION">
            <summary>
            The ACL_REVISION_INFORMATION structure contains revision information about an ACL structure.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-acl_revision_information
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACL_SIZE_INFORMATION">
            <summary>
            The ACL_SIZE_INFORMATION structure contains information about the size of an ACL structure.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-acl_size_information
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2">
            <summary>
            This topic describes the ACPI_INTERFACE_STANDARD2 structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-acpi_interface_standard2
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.Size">
            <summary>
            Describes the USHORT member Size.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.Version">
            <summary>
            Describes the USHORT member Version.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.Context">
            <summary>
            Describes the PVOID member Context.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.InterfaceReference">
            <summary>
            Describes the PINTERFACE_REFERENCE member InterfaceReference.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.InterfaceDereference">
            <summary>
            Describes the PINTERFACE_DEREFERENCE member InterfaceDereference.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.GpeConnectVector">
            <summary>
            Describes the PGPE_CONNECT_VECTOR member GpeConnectVector.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.GpeDisconnectVector">
            <summary>
            Describes the PGPE_DISCONNECT_VECTOR member GpeDisconnectVector.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.GpeEnableEvent">
            <summary>
            Describes the PGPE_ENABLE_EVENT member GpeEnableEvent.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.GpeDisableEvent">
            <summary>
            Describes the PGPE_DISABLE_EVENT member GpeDisableEvent.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.GpeClearStatus">
            <summary>
            Describes the PGPE_CLEAR_STATUS member GpeClearStatus.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.RegisterForDeviceNotifications">
            <summary>
            Describes the PREGISTER_FOR_DEVICE_NOTIFICATIONS member RegisterForDeviceNotifications.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACPI_INTERFACE_STANDARD2.UnregisterForDeviceNotifications">
            <summary>
            Describes the PUNREGISTER_FOR_DEVICE_NOTIFICATIONS member UnregisterForDeviceNotifications.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA">
            <summary>
            The ACTCTX structure is used by the CreateActCtx function to create the activation context.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.cbSize">
            <summary>
            The size, in bytes, of this structure. This is used to determine the version of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.dwFlags">
            <summary>
            Flags that indicate how the values included in this structure are to be used.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.lpSource">
            <summary>
            Null-terminated string specifying the path of the manifest file or PE image to be used to create the activation context. 
            If this path refers to an EXE or DLL file, the lpResourceName member is required.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.wProcessorArchitecture">
            <summary>
            Identifies the type of processor used. 
            Specifies the system's processor architecture.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.wLangId">
            <summary>
            Specifies the language manifest that should be used. The default is the current user's current UI language.
            If the requested language cannot be found, an approximation is searched for using the following order:
            The current user's specific language. For example, for US English (1033).
            The current user's primary language. For example, for English (9).
            The current system's specific language.
            The current system's primary language.
            A nonspecific worldwide language.Language neutral (0).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.lpAssemblyDirectory">
            <summary>
            The base directory in which to perform private assembly probing if assemblies in the activation context are not present in the system-wide store.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.lpResourceName">
            <summary>
            Pointer to a null-terminated string that contains the resource name to be loaded from the PE specified in hModule or lpSource. 
            If the resource name is an integer, set this member using MAKEINTRESOURCE. 
            This member is required if lpSource refers to an EXE or DLL.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.lpApplicationName">
            <summary>
            The name of the current application. If the value of this member is set to null, 
            the name of the executable that launched the current process is used.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXA.hModule">
            <summary>
            Use this member rather than lpSource if you have already loaded a DLL 
            and wish to use it to create activation contexts rather than using a path in lpSource. 
            See lpResourceName for the rules of looking up resources in this module.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW">
            <summary>
            The ACTCTX structure is used by the CreateActCtx function to create the activation context.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.cbSize">
            <summary>
            The size, in bytes, of this structure. This is used to determine the version of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.dwFlags">
            <summary>
            Flags that indicate how the values included in this structure are to be used.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.lpSource">
            <summary>
            Null-terminated string specifying the path of the manifest file or PE image to be used to create the activation context. 
            If this path refers to an EXE or DLL file, the lpResourceName member is required.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.wProcessorArchitecture">
            <summary>
            Identifies the type of processor used. 
            Specifies the system's processor architecture.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.wLangId">
            <summary>
            Specifies the language manifest that should be used. The default is the current user's current UI language.
            If the requested language cannot be found, an approximation is searched for using the following order:
            The current user's specific language. For example, for US English (1033).
            The current user's primary language. For example, for English (9).
            The current system's specific language.
            The current system's primary language.
            A nonspecific worldwide language.Language neutral (0).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.lpAssemblyDirectory">
            <summary>
            The base directory in which to perform private assembly probing if assemblies in the activation context are not present in the system-wide store.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.lpResourceName">
            <summary>
            Pointer to a null-terminated string that contains the resource name to be loaded from the PE specified in hModule or lpSource. 
            If the resource name is an integer, set this member using MAKEINTRESOURCE. 
            This member is required if lpSource refers to an EXE or DLL.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.lpApplicationName">
            <summary>
            The name of the current application. If the value of this member is set to null, 
            the name of the executable that launched the current process is used.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTXW.hModule">
            <summary>
            Use this member rather than lpSource if you have already loaded a DLL 
            and wish to use it to create activation contexts rather than using a path in lpSource. 
            See lpResourceName for the rules of looking up resources in this module.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.cbSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.ulDataFormatVersion">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.lpData">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.ulLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.lpSectionGlobalData">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.ulSectionGlobalDataLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.lpSectionBase">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.ulSectionTotalLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.hActCtx">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.ulAssemblyRosterIndex">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA.ulFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA.lpInformation">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA.lpSectionBase">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA.ulSectionLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA.lpSectionGlobalDataBase">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA.ulSectionGlobalDataLength">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO">
            <summary>
            Contains status information for the application-switching (ALT+TAB) window.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-alttabinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.cbSize">
            <summary>
            The size, in bytes, of the structure. The caller must set this to sizeof(ALTTABINFO).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.cItems">
            <summary>
            The number of items in the window.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.cColumns">
            <summary>
            The number of columns in the window.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.cRows">
            <summary>
            The number of rows in the window.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.iColFocus">
            <summary>
            The column of the item that has the focus.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.iRowFocus">
            <summary>
            The row of the item that has the focus.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.cxItem">
            <summary>
            The width of each icon in the application-switching window.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.cyItem">
            <summary>
            The height of each icon in the application-switching window.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ALTTABINFO.ptStart">
            <summary>
            The top-left corner of the first icon.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Ban3.Infrastructures.NativeLibs.Structs.ANIMATIONINFO" -->
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ANIMATIONINFO.cbSize">
            <summary>
            The size of the structure, in bytes. The caller must set this to sizeof(ANIMATIONINFO).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ANIMATIONINFO.iMinAnimate">
            <summary>
            If this member is nonzero, minimize and restore animation is enabled; otherwise it is disabled.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.APP_MEMORY_INFORMATION">
            <summary>
            Represents app memory usage at a single point in time.
            This structure is used by the PROCESS_INFORMATION_CLASS enumeration.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-app_memory_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.APP_MEMORY_INFORMATION.AvailableCommit">
            <summary>
            Total commit available to the app.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.APP_MEMORY_INFORMATION.PrivateCommitUsage">
            <summary>
            The app's usage of private commit.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.APP_MEMORY_INFORMATION.PeakPrivateCommitUsage">
            <summary>
            The app's peak usage of private commit.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.APP_MEMORY_INFORMATION.TotalCommitUsage">
            <summary>
            The app's total usage of private plus shared commit.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.AUDIODESCRIPTION">
            <summary>
            Contains information associated with audio descriptions.
            This structure is used with the SystemParametersInfo function when the SPI_GETAUDIODESCRIPTION or SPI_SETAUDIODESCRIPTION action value is specified.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-audiodescription
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.AUDIODESCRIPTION.cbSize">
            <summary>
            The size of the structure, in bytes.
            The caller must set this member to sizeof(AUDIODESCRIPTION).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.AUDIODESCRIPTION.Enabled">
            <summary>
            If this member is TRUE, audio descriptions are enabled; Otherwise, this member is FALSE.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.AUDIODESCRIPTION.Locale">
            <summary>
            The locale identifier (LCID) of the language for the audio description.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.AUDIT_POLICY_INFORMATION">
            <summary>
            The AUDIT_POLICY_INFORMATION structure specifies a security event type and when to audit that type.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ns-ntsecapi-audit_policy_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.AUDIT_POLICY_INFORMATION.AuditSubCategoryGuid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.AUDIT_POLICY_INFORMATION.AuditingInformation">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.AUDIT_POLICY_INFORMATION.AuditCategoryGuid">
            GUID->_GUID
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.BLENDFUNCTION">
            <summary>
            The BLENDFUNCTION structure controls blending by specifying the blending functions for source and destination bitmaps.
            https://learn.microsoft.com/en-us/windows/win32/api/wingdi/ns-wingdi-blendfunction
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BLENDFUNCTION.BlendOp">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BLENDFUNCTION.BlendFlags">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BLENDFUNCTION.SourceConstantAlpha">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BLENDFUNCTION.AlphaFormat">
            BYTE->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION">
            <summary>
            The BOOTDISK_INFORMATION structure contains basic information describing the boot and system disks.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_bootdisk_information
            IoGetBootDiskInformation returns this structure to describe the boot and system disks.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION.BootPartitionOffset">
            <summary>
            Specifies the offset, in bytes, on the boot disk where the boot partition begins.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION.SystemPartitionOffset">
            <summary>
            Specifies the offset, in bytes, on the system disk where the system partition begins.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION.BootDeviceSignature">
            <summary>
            If the boot disk is formatted with an MBR partition table, 
            this specifies the signature for the disk's MBR partition table. 
            Otherwise, this member is unused.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION.SystemDeviceSignature">
            <summary>
            If the system disk is formatted with an MBR partition table, 
            this specifies the signature for the disk's MBR partition table. 
            Otherwise, this member is unused.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX.BootPartitionOffset">
            <summary>
            Specifies the offset, in bytes, on the boot disk where the boot partition begins.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX.SystemPartitionOffset">
            <summary>
            Specifies the offset, in bytes, on the system disk where the system partition begins.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX.BootDeviceSignature">
            <summary>
            If the boot disk is formatted with an MBR partition table, 
            this specifies the signature for the disk's MBR partition table. 
            Otherwise, this member is unused.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX.SystemDeviceSignature">
            <summary>
            If the system disk is formatted with an MBR partition table, 
            this specifies the signature for the disk's MBR partition table. 
            Otherwise, this member is unused.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX.BootDeviceGuid">
            <summary>
            If the BootDeviceIsGpt member is TRUE, this specifies the GUID for the boot disk. Otherwise, this member is unused.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX.SystemDeviceGuid">
            <summary>
            If the SystemDeviceIsGpt member is TRUE, this specifies the GUID for the boot disk. Otherwise, this member is unused.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX.BootDeviceIsGpt">
            <summary>
            TRUE if the boot disk is formatted with the GPT partition table type.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BOOTDISK_INFORMATION_EX.SystemDeviceIsGpt">
            <summary>
            TRUE if the system disk is formatted with the GPT partition table type.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.BSMINFO">
            <summary>
            Broadcast System Message
            Contains information about a window that denied a request from BroadcastSystemMessageEx.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-bsminfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BSMINFO.cbSize">
            <summary>
            The size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BSMINFO.hdesk">
            <summary>
            A desktop handle to the window specified by hwnd.
            This value is returned only if BroadcastSystemMessageEx specifies BSF_RETURNHDESK and BSF_QUERY.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BSMINFO.hwnd">
            <summary>
            A handle to the window that denied the request.
            This value is returned if BroadcastSystemMessageEx specifies BSF_QUERY.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BSMINFO.luid">
            <summary>
            A locally unique identifier (LUID) for the window.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD">
            <summary>
            The BUS_INTERFACE_STANDARD interface structure enables device drivers to make direct calls to parent bus driver routines. 
            This structure defines the GUID_BUS_INTERFACE_STANDARD interface.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_bus_interface_standard
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.Size">
            <summary>
            The size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.Version">
            <summary>
            The driver-defined interface version.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.Context">
            <summary>
            A pointer to interface-specific context information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.InterfaceReference">
            <summary>
            A pointer to an InterfaceReference routine that increments the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.InterfaceDereference">
            <summary>
            A pointer to an InterfaceDereference routine that decrements the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.TranslateBusAddress">
            <summary>
            A pointer to a TranslateBusAddress routine that translates addresses on the parent bus to logical addresses.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.GetDmaAdapter">
            <summary>
            A pointer to a GetDmaAdapter routine that returns a DMA adapter structure (DMA_ADAPTER) for the target device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.SetBusData">
            <summary>
            A pointer to a SetBusData routine that writes data to the device's configuration space.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_INTERFACE_STANDARD.GetBusData">
            <summary>
            A pointer to a GetBusData routine that reads data from the device's configuration space.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.BUS_RESOURCE_UPDATE_INTERFACE">
            <summary>
            Enables device drivers to make direct calls to parent bus driver routines. 
            This structure defines the GUID_BUS_RESOURCE_UPDATE_INTERFACE interface.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_bus_resource_update_interface
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_RESOURCE_UPDATE_INTERFACE.Size">
            <summary>
            The size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_RESOURCE_UPDATE_INTERFACE.Version">
            <summary>
            The driver-defined interface version.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_RESOURCE_UPDATE_INTERFACE.Context">
            <summary>
            A pointer to interface-specific context information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_RESOURCE_UPDATE_INTERFACE.InterfaceReference">
            <summary>
            A pointer to an InterfaceReference routine that increments the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_RESOURCE_UPDATE_INTERFACE.InterfaceDereference">
            <summary>
            A pointer to an InterfaceDereference routine that decrements the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.BUS_RESOURCE_UPDATE_INTERFACE.GetUpdatedBusResource">
            <summary>
            A pointer to the busdriver-implemented callback function that is invoked to retrieve the pdated resource information.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CBTACTIVATESTRUCT">
            <summary>
            Contains information passed to a WH_CBT hook procedure, CBTProc, before a window is activated.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-cbtactivatestruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CBTACTIVATESTRUCT.fMouse">
            <summary>
            This member is TRUE if a mouse click is causing the activation or FALSE if it is not.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CBTACTIVATESTRUCT.hWndActive">
            <summary>
            A handle to the active window.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CBT_CREATEWNDA">
            <summary>
            Contains information passed to a WH_CBT hook procedure, CBTProc, before a window is created.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-cbt_createwndw
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CBT_CREATEWNDA.lpcs">
            <summary>
            A pointer to a CREATESTRUCTA structure that contains initialization parameters for the window about to be created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CBT_CREATEWNDA.hwndInsertAfter">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CBT_CREATEWNDW.lpcs">
            <summary>
            A pointer to a CREATESTRUCTW structure that contains initialization parameters for the window about to be created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CBT_CREATEWNDW.hwndInsertAfter">
            HWND->HWND__*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CHANGEFILTERSTRUCT">
            <summary>
            Contains extended result information obtained by calling the ChangeWindowMessageFilterEx function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-changefilterstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CHANGEFILTERSTRUCT.cbSize">
            <summary>
            The size of the structure, in bytes.
            Must be set to sizeof(CHANGEFILTERSTRUCT), otherwise the function fails with ERROR_INVALID_PARAMETER.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CHANGEFILTERSTRUCT.ExtStatus">
            <summary>
            If the function succeeds, this field contains one of the following values.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTES_INFORMATION">
            <summary>
            The CLAIM_SECURITY_ATTRIBUTES_INFORMATION structure defines the security attributes for the claim.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-claim_security_attributes_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTES_INFORMATION.Version">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTES_INFORMATION.Reserved">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTES_INFORMATION.AttributeCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTES_INFORMATION.Attribute">
            Anonymous_4562a7d2_6c13_4e3d_922c_d827dda58318
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTES_INFORMATION_ATTRIBUTE.pAttributeV1">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE">
            <summary>
            The CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE structure specifies the fully qualified binary name.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-claim_security_attribute_fqbn_value
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Version">
            DWORD64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE.Name">
            PWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE">
            <summary>
            The CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE structure specifies the OCTET_STRING value type of the claim security attribute.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-claim_security_attribute_octet_string_value
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1">
            <summary>
            The CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1 structure defines a resource attribute that is defined in continuous memory for persistence within a serialized security descriptor.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-claim_security_attribute_relative_v1
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1.Name">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1.ValueType">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1.Reserved">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1.Flags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1.ValueCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1.Values">
            Anonymous_a16cddb8_ae7e_4828_baea_a2dccae6bcc2
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1_VALUES.pInt64">
            DWORD[1]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1_VALUES.pUint64">
            DWORD[1]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1_VALUES.ppString">
            DWORD[1]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1_VALUES.pFqbn">
            DWORD[1]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1_VALUES.pOctetString">
            DWORD[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_V1">
            <summary>
            The CLAIM_SECURITY_ATTRIBUTE_V1 structure defines a security attribute that can be associated with a token or authorization context.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-claim_security_attribute_v1
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_V1.Name">
            PWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_V1.ValueType">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_V1.Reserved">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_V1.Flags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_V1.ValueCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLAIM_SECURITY_ATTRIBUTE_V1.Values">
            Anonymous_be8f13ad_f3b9_4c82_8bb6_cfadd5a93ec2
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_be8f13ad_f3b9_4c82_8bb6_cfadd5a93ec2.pInt64">
            PLONG64->__int64*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_be8f13ad_f3b9_4c82_8bb6_cfadd5a93ec2.pUint64">
            PDWORD64->unsigned __int64*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_be8f13ad_f3b9_4c82_8bb6_cfadd5a93ec2.ppString">
            PWSTR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_be8f13ad_f3b9_4c82_8bb6_cfadd5a93ec2.pFqbn">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_be8f13ad_f3b9_4c82_8bb6_cfadd5a93ec2.pOctetString">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLASSIC_EVENT_ID">
            <summary>
            Identifies the kernel event for which you want to enable call stack tracing.
            Used with the TraceStackTracingInfo class of TraceSetInformation.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-classic_event_id
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLASSIC_EVENT_ID.EventGuid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLASSIC_EVENT_ID.Type">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLASSIC_EVENT_ID.Reserved">
            UCHAR[7]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLFS_LOG_NAME_INFORMATION">
            <summary>
            The CLFS_LOG_NAME_INFORMATION structure holds the name of a Common Log File System (CLFS) stream or log.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_clfs_log_name_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_LOG_NAME_INFORMATION.NameLengthInBytes">
            <summary>
            The size, in bytes, of the log name.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_LOG_NAME_INFORMATION.Name">
            <summary>
            An array of wide characters that holds the log name.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_CLIENT_REGISTRATION">
            <summary>
            The CLFS_MGMT_CLIENT_REGISTRATION structure is given to CLFS management by clients who manage their own logs.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_clfs_mgmt_client_registration
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_CLIENT_REGISTRATION.Version">
            <summary>
            The version of the CLFS_MGMT_CLIENT_REGISTRATION structure. 
            Set this to CLFS_MGMT_CLIENT_REGISTRATION_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_CLIENT_REGISTRATION.AdvanceTailCallback">
            <summary>
            A pointer to the log's ClfsAdvanceTailCallback function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_CLIENT_REGISTRATION.AdvanceTailCallbackData">
            <summary>
            A pointer to user-defined data that will be supplied to the ClfsAdvanceTailCallback function when the function is invoked.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_CLIENT_REGISTRATION.LogGrowthCompleteCallback">
            <summary>
            A pointer to the log's ClfsLogGrowthCompleteCallback function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_CLIENT_REGISTRATION.LogGrowthCompleteCallbackData">
            <summary>
            A pointer to user-defined data that will be supplied to the ClfsLogGrowthCompleteCallback function when the function is invoked.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_CLIENT_REGISTRATION.LogUnpinnedCallback">
            <summary>
            A pointer to the log's ClfsLogUnpinnedCallback function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_CLIENT_REGISTRATION.LogUnpinnedCallbackData">
            <summary>
            A pointer to user-defined data that will be supplied to the ClfsLogUnpinnedCallback function when the function is invoked.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY">
            <summary>
            The CLFS_MGMT_POLICY structure holds a description of a policy for managing a CLFS log.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_clfs_mgmt_policy
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY.Version">
            <summary>
            The version of the CLFS_MGMT_POLICY structure. Set this to CLFS_MGMT_POLICY_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY.LengthInBytes">
            <summary>
            The length of the CLFS_MGMT_POLICY structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY.PolicyFlags">
            <summary>
            The flags that apply to this instance of the CLFS_MGMT_POLICY structure. 
            The only flag that has been implemented for this release is LOG_POLICY_OVERWRITE, 
            which indicates that when the policy is installed, 
            it will replace the policy of the same type, if such a policy already exists.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY.PolicyType">
            <summary>
            A value of the CLFS_MGMT_POLICY_TYPE enumeration that supplies the type of this instance of the CLFS_MGMT_POLICY structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY.PolicyParameters">
            <summary>
            The union that provides the detailed information about this instance of the CLFS_MGMT_POLICY structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_CONTAINERS.Containers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_SIZE.SizeInBytes">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_GROWTH.AbsoluteGrowthInContainers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_GROWTH.RelativeGrowthPercentage">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_AVAILABLE.MinimumAvailablePercentage">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_AVAILABLE.MinimumAvailableContainers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PERCENTAGE.Percentage">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_ENABLED.Enabled">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PREFIX.PrefixLengthInBytes">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PREFIX.PrefixString">
            WCHAR[1]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_SUFFIX.NextContainerSuffix">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_EXTENSION.ExtensionLengthInBytes">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_EXTENSION.ExtensionString">
            WCHAR[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS">
            <summary>
            The union that provides the detailed information about this instance of the CLFS_MGMT_POLICY structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.MaximumSize">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyMaximumSize.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.MinimumSize">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyMinimumSize.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.NewContainerSize">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyNewContainerSize.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.GrowthRate">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyGrowthRate.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.LogTail">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyLogTail.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.AutoShrink">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyAutoShrink.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.AutoGrow">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyAutoGrow.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.NewContainerPrefix">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyNewContainerPrefix.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.NewContainerSuffix">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyNewContainerSuffix.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_MGMT_POLICY_PARAMETERS.NewContainerExtension">
            <summary>
            The structure that provides the detailed information about a policy whose PolicyType is ClfsMgmtPolicyNewContainerExtension.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLFS_NODE_ID">
            <summary>
            Represents a node identifier.
            https://learn.microsoft.com/en-us/windows/win32/api/clfs/ns-clfs-clfs_node_id
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_NODE_ID.cType">
            <summary>
            The CLFS node type.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_NODE_ID.cbNode">
            <summary>
            The size of the CLFS node, in bytes.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLFS_STREAM_ID_INFORMATION">
            <summary>
            The CLFS_STREAM_ID_INFORMATION structure holds a value that identifies a stream in a Common Log File System (CLFS) log.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_clfs_stream_id_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLFS_STREAM_ID_INFORMATION.StreamIdentifier">
            <summary>
            An 8-bit value that identifies a stream.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLIENTCREATESTRUCT">
            <summary>
            Contains information about the menu and first multiple-document interface (MDI) child window of an MDI client window.
            An application passes a pointer to this structure as the lpParam parameter of the CreateWindow function when creating an MDI client window.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-clientcreatestruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLIENTCREATESTRUCT.hWindowMenu">
            <summary>
            A handle to the MDI application's window menu.
            An MDI application can retrieve this handle from the menu of the MDI frame window by using the GetSubMenu function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLIENTCREATESTRUCT.idFirstChild">
            <summary>
            The child window identifier of the first MDI child window created.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLS_ARCHIVE_DESCRIPTOR">
            <summary>
            Used by the GetNextLogArchiveExtent function to return information about log archive extents.
            https://learn.microsoft.com/en-us/windows/win32/api/clfs/ns-clfs-cls_archive_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_ARCHIVE_DESCRIPTOR.coffLow">
            <summary>
            The offset in the container to the first byte of the archive extent.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_ARCHIVE_DESCRIPTOR.coffHigh">
            <summary>
            The offset in the container to the last byte of the archive extent.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_ARCHIVE_DESCRIPTOR.infoContainer">
            <summary>
            The container information structure that describes the container associated with the archive extent.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION">
            <summary>
            The CLFS_CONTAINER_INFORMATION structure holds descriptive information for an individual container in a Common Log File System (CLFS) log.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cls_container_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.FileAttributes">
            <summary>
            A set of flags that specifies attributes of the container. 
            See the fFlagsAndAttributes parameter of the ClfsCreateLogFile function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.CreationTime">
            <summary>
            The time that the container was created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.LastAccessTime">
            <summary>
            The time that the container was last accessed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.LastWriteTime">
            <summary>
            The time of the last write to the container.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.ContainerSize">
            <summary>
            The size, in bytes, of the container.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.FileNameActualLength">
            <summary>
            The size, in characters, of the actual file name of the container.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.FileNameLength">
            <summary>
            The size of the file name in the FileName buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.FileName">
            <summary>
            An array of wide characters that holds the file name of the container.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.State">
            <summary>
            An integer that specifies the state of the container. This member must be one of the CLFS_CONTAINER_STATE.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.PhysicalContainerId">
            <summary>
            A 32-bit identifier that remains the same over the life of the log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_CONTAINER_INFORMATION.LogicalContainerId">
            <summary>
            A 32-bit identifier that changes every time the container is recycled.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION">
            <summary>
            The CLFS_INFORMATION structure holds metadata and state information for a Common Log File System (CLFS) stream 
            and/or its underlying physical log.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cls_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.TotalAvailable">
            <summary>
            The total available space allocated to the log. 
            This is calculated as the sum of the sizes of all containers in the log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.CurrentAvailable">
            <summary>
            The amount of space available in the log for new records and reservation allocations. 
            This space is the total available space minus the undo commitment space 
            and space used for storing owner pages in a multiplexed log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.TotalReservation">
            <summary>
            The amount of space reserved in the stream (or physical log) for undo operations.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.BaseFileSize">
            <summary>
            The size, in bytes, of the base log file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.ContainerSize">
            <summary>
            The size, in bytes, of an individual container in the log. 
            Note that all containers in the log are the same size.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.TotalContainers">
            <summary>
            The number of containers in the log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.FreeContainers">
            <summary>
            The number of containers in the log that are not active.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.TotalClients">
            <summary>
            The number of streams that share the log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.Attributes">
            <summary>
            A set of flags that specify stream (or physical log) attributes. 
            See the fFlagsAndAttributes parameter of the ClfsCreateLogFile function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.FlushThreshold">
            <summary>
            The number of bytes of data (including headers) that are allowed 
            to remain pending on the internal flush queue before CLFS automatically schedules a thread 
            to write the flush queue to stable storage.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.SectorSize">
            <summary>
            The sector size, in bytes, of the underlying disk geometry. 
            The sector size is assumed to be a multiple of 512 and consistent across containers.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.MinArchiveTailLsn">
            <summary>
            The LSN of the oldest record in the log for which archiving has not taken place. 
            The minimum of this and the base LSN determines the last container 
            that can be reused when containers are recycled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.BaseLsn">
            <summary>
            The LSN of the oldest record in the stream (or physical log) that is still needed by the stream (or log) clients.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.LastFlushedLsn">
            <summary>
            The LSN of the last record that was flushed to stable storage.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.LastLsn">
            <summary>
            The LSN of the youngest record in the stream (or physical log) that is still needed by the stream (or log) clients.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.RestartLsn">
            <summary>
            The LSN of the last restart record written to the stream (or physical log).
            If there are no restart records, this member is equal to CLFS_LSN_INVALID.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_INFORMATION.Identity">
            <summary>
            A GUID that serves as a unique identifier for the log.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS">
            <summary>
            The CLFS_IO_STATISTICS structure holds I/O statistics data for a Common Log File System (CLFS) log.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cls_io_statistics
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS.hdrIoStats">
            <summary>
            A CLFS_IO_STATISTICS_HEADER structure that holds header information for the set of statistics.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS.cFlush">
            <summary>
            The number of data flushes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS.cbFlush">
            <summary>
            The number of bytes of data flushed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS.cMetaFlush">
            <summary>
            The number of metadata flushes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS.cbMetaFlush">
            <summary>
            The number of bytes of metadata flushed.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS_HEADER">
            <summary>
            The CLFS_IO_STATISTICS_HEADER structure holds the header portion of a CLFS_IO_STATISTICS structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cls_io_statistics_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS_HEADER.ubMajorVersion">
            <summary>
            The major version of the CLFS_IO_STATISTICS structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS_HEADER.ubMinorVersion">
            <summary>
            The minor version of the CLFS_IO_STATISTICS structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS_HEADER.eStatsClass">
            <summary>
            Reserved for future use. This member is ignored.
            CLFS_IOSTATS_CLASS
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS_HEADER.cbLength">
            <summary>
            The size, in bytes, of the CLFS_IO_STATISTICS structure, including the header.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_IO_STATISTICS_HEADER.coffData">
            <summary>
            The offset, in bytes, from the beginning of the CLFS_IO_STATISTICS structure to the beginning of the statistics data. 
            This member allows for transparent modifications to the header.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLS_LSN">
            <summary>
            The CLFS_LSN structure identifies an individual record in a Common Log File System (CLFS) stream.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cls_lsn
            A container is a contiguous physical disk extent that serves as part of a CLFS log.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_LSN.Internal">
            <summary>
            A 64-bit value that holds three pieces of information about a log record: 
            container identifier, block offset, and record sequence number.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CLS_WRITE_ENTRY">
            <summary>
            Contains a user buffer, which is to become part of a log record, and its length.
            The ReserveAndAppendLog function uses CLFS_WRITE_ENTRY structures in the routine 
            that appends log records to logs.
            https://learn.microsoft.com/en-us/windows/win32/api/clfs/ns-clfs-cls_write_entry
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_WRITE_ENTRY.Buffer">
            <summary>
            The log record data buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CLS_WRITE_ENTRY.ByteLength">
            <summary>
            The length of the log record data buffer, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.CompressedId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.IdSlotFlags1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.IdSlotFlags2">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.MinorRevision">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.MajorRevision">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.Selections">
            UCHAR[26]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.FunctionFlags">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.TypeString">
            UCHAR[80]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.EisaMemory">
            DWORD[9]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.EisaIrq">
            DWORD[7]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.EisaDma">
            DWORD[4]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.EisaPort">
            DWORD[20]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_FUNCTION_INFORMATION.InitializationData">
            UCHAR[60]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_MEMORY_CONFIGURATION.ConfigurationByte">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_MEMORY_CONFIGURATION.DataSize">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_MEMORY_CONFIGURATION.AddressLowWord">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_MEMORY_CONFIGURATION.AddressHighByte">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_MEMORY_CONFIGURATION.MemorySize">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_IRQ_CONFIGURATION.ConfigurationByte">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_IRQ_CONFIGURATION.Reserved">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_DMA_CONFIGURATION.ConfigurationByte0">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_DMA_CONFIGURATION.ConfigurationByte1">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_PORT_CONFIGURATION.Configuration">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EISA_PORT_CONFIGURATION.PortAddress">
            USHORT->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION">
            <summary>
            The CM_EISA_SLOT_INFORMATION structure defines EISA configuration header information 
            returned by HalGetBusData for the input BusDataType = EisaConfiguration, 
            or by HalGetBusDataByOffset for the inputs BusDataType = EisaConfiguration and Offset = 0, 
            assuming the caller-allocated Buffer is of sufficient Length.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_eisa_slot_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION.ReturnCode">
            <summary>
            Contains a status code if an error occurs when the EISA BIOS is queried. Possible status codes include the following:
            EISA_INVALID_SLOT
            EISA_INVALID_FUNCTION
            EISA_INVALID_CONFIGURATION
            EISA_EMPTY_SLOT
            EISA_INVALID_BIOS_CALL
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION.ReturnFlags">
            <summary>
            The return flags.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION.MajorRevision">
            <summary>
            Information supplied by the manufacturer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION.MinorRevision">
            <summary>
            Information supplied by the manufacturer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION.Checksum">
            <summary>
            The checksum value, allowing validation of the configuration data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION.NumberFunctions">
            <summary>
            The number at this slot.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION.FunctionInformation">
            <summary>
            Whether there is available CM_EISA_FUNCTION_INFORMATION for this slot.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_EISA_SLOT_INFORMATION.CompressedId">
            <summary>
            The EISA compressed identification of the device at this slot.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA">
            <summary>
            The CM_FLOPPY_DEVICE_DATA structure defines a device-type-specific data record 
            that is stored in the \Registry\Machine\Hardware\Description tree for a floppy controller 
            if the system can collect this information during the boot process.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_floppy_device_data
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.Revision">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.Size">
            CHAR[8]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.MaxDensity">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.MountDensity">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.StepRateHeadUnloadTime">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.HeadLoadTime">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.MotorOffTime">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.SectorLengthCode">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.SectorPerTrack">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.ReadWriteGapLength">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.DataTransferLength">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.FormatGapLength">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.FormatFillCharacter">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.HeadSettleTime">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.MotorSettleTime">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.MaximumTrackValue">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FLOPPY_DEVICE_DATA.DataTransferRate">
            UCHAR->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_FULL_RESOURCE_DESCRIPTOR">
            <summary>
            The CM_FULL_RESOURCE_DESCRIPTOR structure specifies a set of system hardware resources of various types, 
            assigned to a device that is connected to a specific bus. 
            This structure is contained within a CM_RESOURCE_LIST structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_full_resource_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FULL_RESOURCE_DESCRIPTOR.InterfaceType">
            <summary>
            Specifies the type of bus to which the device is connected. 
            This must be one of the types defined by INTERFACE_TYPE, in Wdm.h or Ntddk.h. (Not used by WDM drivers.)
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FULL_RESOURCE_DESCRIPTOR.BusNumber">
            <summary>
            The system-assigned, driver-supplied, zero-based number of the bus to which the device is connected. (Not used by WDM drivers.)
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_FULL_RESOURCE_DESCRIPTOR.PartialResourceList">
            <summary>
            A CM_PARTIAL_RESOURCE_LIST structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_INT13_DRIVE_PARAMETER">
            <summary>
            The CM_INT13_DRIVE_PARAMETER structure defines a device-type-specific data record 
            that is stored in the \Registry\Machine\Hardware\Description tree for a disk controller 
            if the system can collect this information during the boot process.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_int13_drive_parameter
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_INT13_DRIVE_PARAMETER.DriveSelect">
            <summary>
            The drive selected value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_INT13_DRIVE_PARAMETER.MaxCylinders">
            <summary>
            The maximum number of cylinders.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_INT13_DRIVE_PARAMETER.SectorsPerTrack">
            <summary>
            The number of sectors per track.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_INT13_DRIVE_PARAMETER.MaxHeads">
            <summary>
            The maximum number of heads.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_INT13_DRIVE_PARAMETER.NumberDrives">
            <summary>
            The number of drives.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_KEYBOARD_DEVICE_DATA">
            <summary>
            The CM_KEYBOARD_DEVICE_DATA structure defines a device-type-specific data record 
            that is stored in the \Registry\Machine\Hardware\Description tree for a keyboard peripheral 
            if the system can collect this information during the boot process.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_keyboard_device_data
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_KEYBOARD_DEVICE_DATA.Version">
            <summary>
            The version number of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_KEYBOARD_DEVICE_DATA.Revision">
            <summary>
            The revision of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_KEYBOARD_DEVICE_DATA.Type">
            <summary>
            The type of the keyboard.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_KEYBOARD_DEVICE_DATA.Subtype">
            <summary>
            The subtype of the keyboard.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_KEYBOARD_DEVICE_DATA.KeyboardFlags">
            <summary>
            Defined by x86 BIOS INT 16h, function 02 as KEYBOARD_FLAGS
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_MCA_POS_DATA">
            <summary>
            The CM_MCA_POS_DATA structure is obsolete. It defines IBM-compatible MCA POS configuration information for a slot.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_mca_pos_data
            This structure is used by the obsolete HalGetBusData and HalGetBusDataByOffset routines.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_MCA_POS_DATA.AdapterId">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_MCA_POS_DATA.PosData1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_MCA_POS_DATA.PosData2">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_MCA_POS_DATA.PosData3">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_MCA_POS_DATA.PosData4">
            UCHAR->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR">
            <summary>
            
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_partial_resource_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR.Type">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR.ShareDisposition">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR.Flags">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR.u">
            Anonymous_e21be3c5_70b1_4c80_a070_64e6a02a5de8
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Generic">
            Anonymous_c2fc7085_138f_445f_b046_4f60eefd9cc4
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Port">
            Anonymous_ec255818_6df4_4db9_b420_24f209353cfe
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Interrupt">
            Anonymous_cbe88d1a_af84_43e8_bfe2_caa3a700b4ec
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.MessageInterrupt">
            Anonymous_a1de93af_4333_4846_bc52_92f2756d8f91
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Memory">
            Anonymous_2f086847_587a_483c_8512_3620d889eb71
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Dma">
            Anonymous_8f130c07_6e4d_479b_a72b_577d7cac14d4
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.DmaV3">
            Anonymous_11c7fc4b_9c69_4994_b06d_7372a9cddb81
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.DevicePrivate">
            Anonymous_8a4759fd_a6a4_4362_ac00_f239254523e2
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.BusNumber">
            Anonymous_9ea9ef79_a2ed_4d72_ae79_3087f75471a1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.DeviceSpecificData">
            Anonymous_5171fa9e_cf1a_439c_91d4_8d820c49081e
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Memory40">
            Anonymous_6bd6a2b4_5cf7_4611_9e64_47bd2bba5b75
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Memory48">
            Anonymous_501f586f_46fb_4aae_bcb9_3ec1a87defee
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Memory64">
            Anonymous_2ad3800f_95b1_46a3_b805_71b2fdbe7c38
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VALUE.Connection">
            Anonymous_25a6ed6f_3eff_4576_ba7d_387a6fe96bed
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BLOCK.Start">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BLOCK.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_PAGE.Level">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_PAGE.Group">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_PAGE.Vector">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_PAGE.Affinity">
            KAFFINITY->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VECTOR.Group">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VECTOR.Reserved">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VECTOR.MessageCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VECTOR.Vector">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_VECTOR.Affinity">
            KAFFINITY->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DUMMYUNION.Raw">
            Anonymous_22282484_ed7f_4e1a_841f_373bb6e4a572
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DUMMYUNION.Translated">
            Anonymous_ca168e9e_ac46_4a8d_bf33_c1503bcbac46
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DUMMY.DUMMYUNIONNAME">
            Anonymous_e1218d27_d76a_498f_a96b_e3881c49ed3f
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMA.Channel">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMA.Port">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMA.Reserved1">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMAV3.Channel">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMAV3.RequestLine">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMAV3.TransferWidth">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMAV3.Reserved1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMAV3.Reserved2">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DMAV3.Reserved3">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DEVICEPRIVATE.Data">
            ULONG[3]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BUSNUMBER.Start">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BUSNUMBER.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BUSNUMBER.Reserved">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DEVICESPECIFICDATA.DataSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DEVICESPECIFICDATA.Reserved1">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_DEVICESPECIFICDATA.Reserved2">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BLOCK40.Start">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BLOCK40.Length40">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BLOCK48.Start">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BLOCK48.Length48">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BLOCK64.Start">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_BLOCK64.Length64">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_CONNECTION.Class">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_CONNECTION.Type">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_CONNECTION.Reserved1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_CONNECTION.Reserved2">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_CONNECTION.IdLowPart">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_DESCRIPTOR_CONNECTION.IdHighPart">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_LIST">
            <summary>
            The CM_PARTIAL_RESOURCE_LIST structure specifies a set of system hardware resources, of various types, assigned to a device. 
            This structure is contained within a CM_FULL_RESOURCE_DESCRIPTOR structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_partial_resource_list
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_LIST.Version">
            <summary>
            The version number of this structure. This value should be 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_LIST.Revision">
            <summary>
            The revision of this structure. This value should be 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_LIST.Count">
            <summary>
            The number of elements contained in the PartialDescriptors array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_PARTIAL_RESOURCE_LIST.PartialDescriptors">
            <summary>
            The first element in an array of one or more CM_PARTIAL_RESOURCE_DESCRIPTOR structures.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_RESOURCE_LIST">
            <summary>
            The CM_RESOURCE_LIST structure specifies all of the system hardware resources assigned to a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_resource_list
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_RESOURCE_LIST.Count">
            <summary>
            The number of full resource descriptors that are specified by this CM_RESOURCE_LIST structure. 
            The List member is the header for the first full resource descriptor. 
            For WDM drivers, Count is always 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_RESOURCE_LIST.List">
            <summary>
            The CM_FULL_RESOURCE_DESCRIPTOR structure that serves as the header for the first full resource descriptor. 
            If the CM_RESOURCE_LIST structure contains more than one full resource descriptor, 
            the second full resource descriptor immediately follows the first in memory, and so on. 
            The size of each full resource descriptor depends on the length of the CM_PARTIAL_RESOURCE_DESCRIPTOR array that it contains.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_SCSI_DEVICE_DATA">
            <summary>
            The CM_SCSI_DEVICE_DATA structure defines a device-type-specific data record 
            that is stored in the \Registry\Machine\Hardware\Description tree for a SCSI HBA 
            if the system can collect this information during the boot process.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_scsi_device_data
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_SCSI_DEVICE_DATA.Version">
            <summary>
            The version number of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_SCSI_DEVICE_DATA.Revision">
            <summary>
            The revision for this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_SCSI_DEVICE_DATA.HostIdentifier">
            <summary>
            The SCSI bus identifier used by the ARC firmware.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CM_SERIAL_DEVICE_DATA">
            <summary>
            The CM_SERIAL_DEVICE_DATA structure defines a device-type-specific data record 
            that is stored in the \Registry\Machine\Hardware\Description tree for a serial controller 
            if the system can collect this information during the boot process.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_cm_serial_device_data
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_SERIAL_DEVICE_DATA.Version">
            <summary>
            The version number of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_SERIAL_DEVICE_DATA.Revision">
            <summary>
            The revision of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CM_SERIAL_DEVICE_DATA.BaudClock">
            <summary>
            The clock baud rate, in megahertz, at which data is transferred.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.COMBOBOXINFO">
            <summary>
            Contains combo box status information.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-comboboxinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMBOBOXINFO.cbSize">
            <summary>
            The size, in bytes, of the structure. The calling application must set this to sizeof(COMBOBOXINFO).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMBOBOXINFO.rcItem">
            <summary>
            A RECT structure that specifies the coordinates of the edit box.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMBOBOXINFO.rcButton">
            <summary>
            A RECT structure that specifies the coordinates of the button that contains the drop-down arrow.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMBOBOXINFO.stateButton">
            <summary>
            The combo box button state. This parameter can be one of the following values.
            0                       :           The button exists and is not pressed.
            STATE_SYSTEM_INVISIBLE              There is no button.
            STATE_SYSTEM_PRESSED                The button is pressed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMBOBOXINFO.hwndCombo">
            <summary>
            A handle to the combo box.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMBOBOXINFO.hwndItem">
            <summary>
            A handle to the edit box.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMBOBOXINFO.hwndList">
            <summary>
            A handle to the drop-down list.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT">
            <summary>
            Supplies the identifiers and application-supplied data for two items in a sorted, owner-drawn list box or combo box.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-compareitemstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT.CtlType">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT.CtlID">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT.hwndItem">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT.itemID1">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT.itemData1">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT.itemID2">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT.itemData2">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COMPAREITEMSTRUCT.dwLocaleId">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.COPYDATASTRUCT">
            <summary>
            Contains data to be passed to another application by the WM_COPYDATA message.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-copydatastruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COPYDATASTRUCT.dwData">
            <summary>
            The type of the data to be passed to the receiving application. 
            The receiving application defines the valid types.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COPYDATASTRUCT.cbData">
            <summary>
            The size, in bytes, of the data pointed to by the lpData member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COPYDATASTRUCT.lpData">
            <summary>
            The data to be passed to the receiving application. 
            This member can be NULL.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT.Version">
            <summary>
            The version number of the structure. Set this member to DIAGNOSTIC_REASON_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT.Flags">
            <summary>
            Indicates whether the structure contains a simple reason string or a detailed set of reason strings.
            DIAGNOSTIC_REASON_SIMPLE_STRING
            DIAGNOSTIC_REASON_DETAILED_STRING
            If Flags = DIAGNOSTIC_REASON_SIMPLE_STRING, the SimpleString member of the union is valid. 
            If Flags = DIAGNOSTIC_REASON_DETAILED_STRING, the ResourceFileName, ResourceReasonId, StringCount, and ReasonStrings members are valid (and the SimpleString member is not valid).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT.Union1">
            Anonymous_04dabf8f_3860_4f89_9e83_bbadbac21e84
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT_UNION.DUMMYSTRUCTNAME">
            Anonymous_aaec3476_366b_4dee_b596_bce36181ff98
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT_UNION.SimpleString">
            <summary>
            A pointer to a wide-character, null-terminated string that explains the reason for a power request. 
            This member is valid only if Flags = DIAGNOSTIC_REASON_SIMPLE_STRING.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT_DUMMY.ResourceFileName">
            <summary>
            A pointer to a wide-character, null-terminated string that contains the pathname of a resource file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT_DUMMY.ResourceReasonId">
            <summary>
            The resource ID assigned to the first reason string in the resource file that is specified by ResourceFileName. 
            This member is valid only if Flags = DIAGNOSTIC_REASON_DETAILED_STRING.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT_DUMMY.StringCount">
            <summary>
            The number of reason strings in the ReasonStrings array or in the resource file that is specified by ResourceFileName. 
            This member is valid only if Flags = DIAGNOSTIC_REASON_DETAILED_STRING.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.COUNTED_REASON_CONTEXT_DUMMY.ReasonStrings">
            <summary>
            A pointer to an array of string pointers. Each array element is a pointer to a wide-character, null-terminated string. 
            The number of array elements is specified by StringCount.
            This member is valid only if Flags = DIAGNOSTIC_REASON_DETAILED_STRING.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.lpCreateParams">
            LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.hInstance">
            HINSTANCE->HINSTANCE__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.hMenu">
            HMENU->HMENU__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.hwndParent">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.cy">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.cx">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.y">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.x">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.style">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.lpszName">
            LPCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.lpszClass">
            LPCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTA.dwExStyle">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.lpCreateParams">
            LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.hInstance">
            HINSTANCE->HINSTANCE__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.hMenu">
            HMENU->HMENU__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.hwndParent">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.cy">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.cx">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.y">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.x">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.style">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.lpszName">
            LPCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.lpszClass">
            LPCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATESTRUCTW.dwExStyle">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO">
            <summary>
            Contains process creation information that can be used by a debugger.
            https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-create_process_debug_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.hFile">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.hProcess">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.hThread">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.lpBaseOfImage">
            LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.dwDebugInfoFileOffset">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.nDebugInfoSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.lpThreadLocalBase">
            LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.lpStartAddress">
            LPTHREAD_START_ROUTINE->PTHREAD_START_ROUTINE
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.lpImageName">
            LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_PROCESS_DEBUG_INFO.fUnicode">
            WORD->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PTHREAD_START_ROUTINE">
             Return Type: DWORD->unsigned int
            lpThreadParameter: LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_THREAD_DEBUG_INFO.hThread">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_THREAD_DEBUG_INFO.lpThreadLocalBase">
            LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CREATE_THREAD_DEBUG_INFO.lpStartAddress">
            LPTHREAD_START_ROUTINE->PTHREAD_START_ROUTINE
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION.DebugInfo">
            PRTL_CRITICAL_SECTION_DEBUG->_RTL_CRITICAL_SECTION_DEBUG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION.LockCount">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION.RecursionCount">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION.OwningThread">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION.LockSemaphore">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CRITICAL_SECTION.SpinCount">
            ULONG_PTR->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.CWPRETSTRUCT">
            <summary>
            Defines the message parameters passed to a WH_CALLWNDPROCRET hook procedure, CallWndRetProc.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-cwpretstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CWPRETSTRUCT.lResult">
            <summary>
            The return value of the window procedure that processed the message specified by the message value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CWPRETSTRUCT.lParam">
            <summary>
            Additional information about the message. The exact meaning depends on the message value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CWPRETSTRUCT.wParam">
            <summary>
            Additional information about the message. The exact meaning depends on the message value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CWPRETSTRUCT.message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.CWPRETSTRUCT.hwnd">
            <summary>
            A handle to the window that processed the message specified by the message value.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE">
            <summary>
            An extended version of the INTERFACE structure that allows device drivers to negotiate a higher auxiliary power 
            for their PCI devices while in D3Cold state.
            This interface allows device drivers to invoke the functions that manipulate _DSM functions 0Ah, 0Bh.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_d3cold_aux_power_and_timing_interface
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE.Size">
            <summary>
            The size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE.Version">
            <summary>
            The driver-defined interface version. 
            The current version of this interface is D3COLD_AUX_POWER_AND_TIMING_INTERFACE_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE.Context">
            <summary>
            A pointer to interface-specific context information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE.InterfaceReference">
            <summary>
            A pointer to an InterfaceReference routine that increments the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE.InterfaceDereference">
            <summary>
            A pointer to an InterfaceDereference routine that decrements the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE.RequestCorePowerRail">
            <summary>
            A pointer to a D3COLD_REQUEST_CORE_POWER_RAIL callback function 
            that enables the function device object (FDO) to indicate whether the core power rail is needed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE.RequestAuxPower">
            <summary>
            A pointer to a _D3COLD_REQUEST_AUX_POWER callback function 
            that enables the function device object (FDO) to convey its auxiliary power requirement.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_AUX_POWER_AND_TIMING_INTERFACE.RequestPerstDelay">
            <summary>
            A pointer to a D3COLD_REQUEST_PERST_DELAY enables the function device object (FDO) to convey its requirement for a fixed delay time.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE">
            <summary>
            The D3COLD_SUPPORT_INTERFACE interface structure contains pointers to the routines in the D3COLD Support Interface.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_d3cold_support_interface
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.Size">
            <summary>
            The size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.Version">
            <summary>
            The driver-defined interface version. 
            The current version of this interface is D3COLD_SUPPORT_INTERFACE_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.Context">
            <summary>
            A pointer to interface-specific context information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.InterfaceReference">
            <summary>
            A pointer to an InterfaceReference routine that increments the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.InterfaceDereference">
            <summary>
            A pointer to an InterfaceDereference routine that decrements the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.SetD3ColdSupport">
            <summary>
            A pointer to a SetD3ColdSupport routine that enables or disables transitions to the D3cold device power state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.GetIdleWakeInfo">
            <summary>
            A pointer to a GetIdleWakeInfo routine that the device driver calls 
            to discover the device power states from which this device can signal wake events to the processor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.GetD3ColdCapability">
            <summary>
            A pointer to a GetD3ColdCapability routine 
            that reports whether this device is capable of entering the D3cold device power state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.GetBusDriverD3ColdSupport">
            <summary>
            A pointer to a GetBusDriverD3ColdSupport routine 
            that reports whether the underlying bus driver and ACPI system firmware support D3cold for this device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.D3COLD_SUPPORT_INTERFACE.GetLastTransitionStatus">
            <summary>
            A pointer to a GetLastTransitionStatus routine 
            that reports whether this device's most recent transition to D3hot was followed by a transition to D3cold.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DCB">
            <summary>
            Defines the control setting for a serial communications device.
            https://learn.microsoft.com/en-us/windows/win32/api/winbase/ns-winbase-dcb
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.DCBlength">
            <summary>
            The length of the structure, in bytes. 
            The caller must set this member to sizeof(DCB).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.BaudRate">
            <summary>
            The baud rate at which the communications device operates. 
            This member can be an actual baud rate value, or one of the following indexes(in enums).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.bitvector1">
            <summary>
            fBinary : 1
            fParity : 1
            fOutxCtsFlow : 1
            fOutxDsrFlow : 1
            fDtrControl : 2
            fDsrSensitivity : 1
            fTXContinueOnXoff : 1
            fOutX : 1
            fInX : 1
            fErrorChar : 1
            fNull : 1
            fRtsControl : 2
            fAbortOnError : 1
            fDummy2 : 17 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.wReserved">
            <summary>
            Reserved; must be zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.XonLim">
            <summary>
            The minimum number of bytes in use allowed in the input buffer before flow control is activated to allow transmission by the sender. 
            This assumes that either XON/XOFF, RTS, or DTR input flow control is specified in the fInX, fRtsControl, or fDtrControl members.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.XoffLim">
            <summary>
            The minimum number of free bytes allowed in the input buffer before flow control is activated to inhibit the sender. 
            Note that the sender may transmit characters after the flow control signal has been activated, so this value should never be zero. 
            This assumes that either XON/XOFF, RTS, or DTR input flow control is specified in the fInX, fRtsControl, or fDtrControl members. 
            The maximum number of bytes in use allowed is calculated by subtracting this value from the size, in bytes, of the input buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.ByteSize">
            <summary>
            The number of bits in the bytes transmitted and received.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.Parity">
            <summary>
            The parity scheme to be used. This member can be one of the following values(enum).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.StopBits">
            <summary>
            The number of stop bits to be used. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.XonChar">
            <summary>
            The value of the XON character for both transmission and reception.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.XoffChar">
            <summary>
            The value of the XOFF character for both transmission and reception.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.ErrorChar">
            <summary>
            The value of the character used to replace bytes received with a parity error.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.EofChar">
            <summary>
            The value of the character used to signal the end of data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.EvtChar">
            <summary>
            The value of the character used to signal an event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DCB.wReserved1">
            <summary>
            Reserved; do not use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fBinary">
            <summary>
            If this member is TRUE, binary mode is enabled. Windows does not support nonbinary mode transfers, so this member must be TRUE.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fParity">
            <summary>
            If this member is TRUE, parity checking is performed and errors are reported.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fDtrControl">
            <summary>
            DTR_CONTROL_DISABLE     :   0x00    Disables the DTR line when the device is opened and leaves it disabled.
            DTR_CONTROL_ENABLE      :   0x01    Enables the DTR line when the device is opened and leaves it on.
            DTR_CONTROL_HANDSHAKE   :   0x02    Enables DTR handshaking. If handshaking is enabled, it is an error for the application to adjust the line by using the EscapeCommFunction function.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fDsrSensitivity">
            <summary>
            If this member is TRUE, 
            the communications driver is sensitive to the state of the DSR signal. 
            The driver ignores any bytes received, unless the DSR modem input line is high.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fTXContinueOnXoff">
            <summary>
            If this member is TRUE, transmission continues after the input buffer has come within XoffLim bytes of being full 
            and the driver has transmitted the XoffChar character to stop receiving bytes. 
            If this member is FALSE, transmission does not continue until the input buffer is within XonLim bytes of being empty 
            and the driver has transmitted the XonChar character to resume reception.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fOutX">
            <summary>
            Indicates whether XON/XOFF flow control is used during transmission. 
            If this member is TRUE, transmission stops when the XoffChar character is received and starts again when the XonChar character is received.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fInX">
            <summary>
            Indicates whether XON/XOFF flow control is used during reception. If this member is TRUE, 
            the XoffChar character is sent when the input buffer comes within XoffLim bytes of being full, 
            and the XonChar character is sent when the input buffer comes within XonLim bytes of being empty.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fErrorChar">
            <summary>
            Indicates whether bytes received with parity errors are replaced with the character specified by the ErrorChar member. 
            If this member is TRUE and the fParity member is TRUE, replacement occurs.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fNull">
            <summary>
            If this member is TRUE, null bytes are discarded when received.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fRtsControl">
            <summary>
            The RTS (request-to-send) flow control. This member can be one of the following values.
            RTS_CONTROL_DISABLE         0x00    Disables the RTS line when the device is opened and leaves it disabled.
            RTS_CONTROL_ENABLE          0x01    Enables the RTS line when the device is opened and leaves it on.
            RTS_CONTROL_HANDSHAKE       0x02    Enables RTS handshaking.The driver raises the RTS line when the "type-ahead" (input) 
                                                buffer is less than one-half full and lowers the RTS line when the buffer is 
                                                more than three-quarters full.If handshaking is enabled, 
                                                it is an error for the application to adjust the line by using the EscapeCommFunction function.
            RTS_CONTROL_TOGGLE          0x03    Specifies that the RTS line will be high if bytes are available for transmission.
                                                After all buffered bytes have been sent, the RTS line will be low.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fAbortOnError">
            <summary>
            If this member is TRUE, the driver terminates all read and write operations with an error status if an error occurs. 
            The driver will not accept any further communications operations until the application 
            has acknowledged the error by calling the ClearCommError function.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DCB.fDummy2">
            <summary>
            Reserved; do not use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEBUGHOOKINFO">
            <summary>
            Contains debugging information passed to a WH_DEBUG hook procedure, DebugProc.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-debughookinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUGHOOKINFO.idThread">
            <summary>
            A handle to the thread containing the filter function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUGHOOKINFO.idThreadInstaller">
            <summary>
            A handle to the thread that installed the debugging filter function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUGHOOKINFO.lParam">
            <summary>
            The value to be passed to the hook in the lParam parameter of the DebugProc callback function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUGHOOKINFO.wParam">
            <summary>
            The value to be passed to the hook in the wParam parameter of the DebugProc callback function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUGHOOKINFO.code">
            <summary>
            The value to be passed to the hook in the nCode parameter of the DebugProc callback function.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT">
            <summary>
            Describes a debugging event.
            https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-debug_event
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT.dwDebugEventCode">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT.dwProcessId">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT.dwThreadId">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT.u">
            Anonymous_7b4c34ae_4ce0_4bbd_ac97_c5a1d3f477ff
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.Exception">
            EXCEPTION_DEBUG_INFO->_EXCEPTION_DEBUG_INFO
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.CreateThread">
            CREATE_THREAD_DEBUG_INFO->_CREATE_THREAD_DEBUG_INFO
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.CreateProcessInfo">
            CREATE_PROCESS_DEBUG_INFO->_CREATE_PROCESS_DEBUG_INFO
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.ExitThread">
            EXIT_THREAD_DEBUG_INFO->_EXIT_THREAD_DEBUG_INFO
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.ExitProcess">
            EXIT_PROCESS_DEBUG_INFO->_EXIT_PROCESS_DEBUG_INFO
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.LoadDll">
            LOAD_DLL_DEBUG_INFO->_LOAD_DLL_DEBUG_INFO
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.UnloadDll">
            UNLOAD_DLL_DEBUG_INFO->_UNLOAD_DLL_DEBUG_INFO
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.DebugString">
            OUTPUT_DEBUG_STRING_INFO->_OUTPUT_DEBUG_STRING_INFO
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEBUG_EVENT_UNION.RipInfo">
            RIP_INFO->_RIP_INFO
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DELETEITEMSTRUCT">
            <summary>
            Describes a deleted list box or combo box item.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-deleteitemstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DELETEITEMSTRUCT.CtlType">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DELETEITEMSTRUCT.CtlID">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DELETEITEMSTRUCT.itemID">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DELETEITEMSTRUCT.hwndItem">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DELETEITEMSTRUCT.itemData">
            ULONG_PTR->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_BUS_SPECIFIC_RESET_TYPE">
            <summary>
            Defines the DEVICE_BUS_SPECIFIC_RESET_TYPE structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-device_bus_specific_reset_type
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES">
            <summary>
            A DEVICE_CAPABILITIES structure describes PnP and power capabilities of a device. 
            This structure is returned in response to an IRP_MN_QUERY_CAPABILITIES IRP.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_device_capabilities
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.Size">
            <summary>
            Specifies the size of the structure, in bytes. 
            This field is set by the component that sends the IRP_MN_QUERY_CAPABILITIES request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.Version">
            <summary>
            Specifies the version of the structure, currently version 1. 
            This field is set by the component that sends the IRP_MN_QUERY_CAPABILITIES request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.bitvector1">
            DeviceD1 : 1
            DeviceD2 : 1
            LockSupported : 1
            EjectSupported : 1
            Removable : 1
            DockDevice : 1
            UniqueID : 1
            SilentInstall : 1
            RawDeviceOK : 1
            SurpriseRemovalOK : 1
            WakeFromD0 : 1
            WakeFromD1 : 1
            WakeFromD2 : 1
            WakeFromD3 : 1
            HardwareDisabled : 1
            NonDynamic : 1
            WarmEjectSupported : 1
            NoDisplayInUI : 1
            Reserved1 : 1
            WakeFromInterrupt : 1
            SecureDevice : 1
            ChildOfVgaEnabledBridge : 1
            DecodeIoOnBoot : 1
            Reserved : 9
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.Address">
            <summary>
            Specifies an address indicating where the device is located on its underlying bus.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.UINumber">
            <summary>
            Specifies a number associated with the device that can be displayed in the user interface.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.DeviceState">
            <summary>
            An array of values indicating the most-powered device power state that the device can maintain for each system power state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.SystemWake">
            <summary>
            Specifies the least-powered system power state from which the device can signal a wake event. 
            A value of PowerSystemUnspecified indicates that the device cannot wake the system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.DeviceWake">
            <summary>
            Specifies the least-powered device power state from which the device can signal a wake event. 
            A value of PowerDeviceUnspecified indicates that the device cannot signal a wake event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.D1Latency">
            <summary>
            Specifies the device's approximate worst-case latency, in 100-microsecond units, 
            for returning the device to the PowerDeviceD0 state from the PowerDeviceD1 state. 
            Set to zero if the device does not support the D1 state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.D2Latency">
            <summary>
            Specifies the device's approximate worst-case latency, in 100-microsecond units, 
            for returning the device to the PowerDeviceD0 state from the PowerDeviceD2 state. 
            Set to zero if the device does not support the D2 state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.D3Latency">
            <summary>
            Specifies the device's approximate worst-case latency, in 100-microsecond units, 
            for returning the device to the PowerDeviceD0 state from the PowerDeviceD3 state. 
            Set to zero if the device does not support the D3 state.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.DeviceD1">
            <summary>
            Specifies whether the device hardware supports the D1 power state. 
            Drivers should not change this value.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.DeviceD2">
            <summary>
            Specifies whether the device hardware supports the D2 power state. 
            Drivers should not change this value.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.LockSupported">
            <summary>
            Specifies whether the device supports physical-device locking that prevents device ejection. 
            This member pertains to ejecting the device from its slot, 
            rather than ejecting a piece of removable media from the device.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.EjectSupported">
            <summary>
            Specifies whether the device supports software-controlled device ejection while the system is in the PowerSystemWorking state. 
            This member pertains to ejecting the device from its slot, 
            rather than ejecting a piece of removable media from the device.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.Removable">
            <summary>
            Specifies whether the device can be dynamically removed from its immediate parent. 
            If Removable is set to TRUE, the device does not belong to the same physical object as its parent.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.DockDevice">
            <summary>
            Specifies whether the device is a docking peripheral.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.UniqueID">
            <summary>
            Specifies whether the device's instance ID is unique system-wide.
            This bit is clear if the instance ID is unique only within the scope of the bus.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.SilentInstall">
            <summary>
            Specifies whether Device Manager should suppress all installation dialog boxes; 
            except required dialog boxes such as "no compatible drivers found."
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.RawDeviceOK">
            <summary>
            Specifies whether the driver for the underlying bus can drive the device if there is no function driver (for example, SCSI devices in pass-through mode). 
            This mode of operation is called raw mode.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.SurpriseRemovalOK">
            <summary>
            Specifies whether the function driver for the device can handle the case where the device is removed before Windows can send IRP_MN_QUERY_REMOVE_DEVICE to it.
            If SurpriseRemovalOK is set to TRUE, the device can be safely removed from its immediate parent regardless of the state that its driver is in.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.WakeFromD0">
            <summary>
            Specifies whether the device can respond to an external wake signal while in the D0 state. Drivers should not change this value.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.WakeFromD1">
            <summary>
            Specifies whether the device can respond to an external wake signal while in the D1 state. Drivers should not change this value.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.WakeFromD2">
            <summary>
            Specifies whether the device can respond to an external wake signal while in the D2 state. Drivers should not change this value.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.WakeFromD3">
            <summary>
            Specifies whether the device can respond to an external wake signal while in the D3 state. Drivers should not change this value.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.HardwareDisabled">
            <summary>
            When set, this flag specifies that the device's hardware is disabled.
            A device's parent bus driver or a bus filter driver sets this flag when such a driver determines that the device hardware is disabled.
            The PnP manager sends one IRP_MN_QUERY_CAPABILITIES IRP right after a device is enumerated and sends another after the device has been started. 
            The PnP manager only checks this bit right after the device is enumerated. Once the device is started, this bit is ignored.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.NonDynamic">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.WarmEjectSupported">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.NoDisplayInUI">
            <summary>
            Do not display the device in the user interface. 
            If this bit is set, the device is never displayed in the user interface, even if the device is present but fails to start. 
            Only bus drivers and associated bus filter drivers should set this bit.
            (Also see the PNP_DEVICE_DONT_DISPLAY_IN_UI flag in the PNP_DEVICE_STATE structure.)
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.Reserved1">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.WakeFromInterrupt">
            <summary>
            Indicates whether the driver or ACPI is responsible for handling the wake event. 
            If set, the driver is responsible for handling the wake event. 
            ACPI arms the device when it receives an IRP_MN_WAIT_WAKE IRP, but does not connect the interrupt, 
            complete the IRP to notify the device stack of a wake event.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.SecureDevice">
            <summary>
            Indicates whether the device is a secure device.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.ChildOfVgaEnabledBridge">
            <summary>
            For a VGA device, indicates whether the parent bridge has the VGA decoding bit set.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.DecodeIoOnBoot">
            <summary>
            Indictates whether the device has IO decode enabled on boot.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_CAPABILITIES.Reserved">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.Master">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.ScatterGather">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DemandMode">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.AutoInitialize">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.Dma32BitAddresses">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.IgnoreCount">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.Reserved1">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.Dma64BitAddresses">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.BusNumber">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DmaChannel">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.InterfaceType">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DmaWidth">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DmaSpeed">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.MaximumLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DmaPort">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DmaAddressWidth">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DmaControllerInstance">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DmaRequestLine">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_DESCRIPTION.DeviceAddress">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT">
            <summary>
            The DEVICE_OBJECT structure is used by the operating system to represent a device object. 
            A device object represents a logical, virtual, or physical device for which a driver handles I/O requests.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_device_object
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Type">
            <summary>
            Used by the operating system to indicate that an object is a device object. 
            For device objects, the value of this member is 3. 
            This is a read-only member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Size">
            <summary>
            Specifies the size, in bytes, of the device object. 
            This size includes the driver-specified device extension pointed to by the DeviceExtension member, 
            but does not include the opaque device object extension pointed to by the DeviceObjectExtension member. 
            Size is a read-only member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.ReferenceCount">
            <summary>
            Used by the I/O manager to track the number of open handles for the device that are associated with the device object. 
            This allows the I/O manager to avoid unloading a driver when there are outstanding handles for the driver's device(s). 
            This is a read-only member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.DriverObject">
            <summary>
            A pointer to the driver object (DRIVER_OBJECT), that represents the loaded image of the driver that was input to the DriverEntry and AddDevice routines. 
            This member is set by the I/O manager upon a successful call to IoCreateDevice or IoCreateDeviceSecure.
            This is a read-only member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.NextDevice">
            <summary>
            A pointer to the next device object, if any, that was created by the same driver. 
            The I/O manager updates this list at each successful call to IoCreateDevice or IoCreateDeviceSecure.
            A non- Plug and Play(PnP) driver that is being unloaded must traverse("walk") the list of its device objects and delete them.
            A PnP driver does not have to walk this list of device objects.Instead, PnP drivers perform their cleanup during the device removal PnP operation (IRP_MN_REMOVE_DEVICE).
            A driver that recreates its device objects dynamically also uses this member.
            This is a read/write member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.AttachedDevice">
            <summary>
            A pointer to the attached device object. 
            If there is no attached device object, this member is NULL.
            The device object that is pointed to by the AttachedDevice member typically is the device object of a filter driver, 
            which intercepts I/O requests originally targeted to the device represent by the device object. 
            For more information, see the IoAttachDevice and IoAttachDeviceByPointer topics.
            This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.CurrentIrp">
            <summary>
            A pointer to the current IRP if the driver has a StartIo routine whose entry point was set in the driver object and if the driver is currently processing IRP(s). 
            Otherwise, this member is NULL. For more information, see the IoStartPacket and IoStartNextPacket topics. 
            This is a read-only member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Timer">
            <summary>
            A pointer to a timer object. This allows the I/O manager to call a driver-supplied timer routine every second. 
            For more information, see IoInitializeTimer. 
            This is a read/write member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Flags">
            <summary>
            Device drivers perform a bitwise OR operation with this member in their newly created device objects by 
            using one or more of the DEVICE_OBJECT_FLAGS
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Characteristics">
            <summary>
            Specifies one or more system-defined constants, combined with a bitwise OR operation, 
            that provide additional information about the driver's device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Vpb">
            <summary>
            A pointer to the volume parameter block (VPB) that is associated with the device object. 
            For file system drivers, the VPB can provide a connection to any unnamed logical device object that represents an instance of a mounted volume. 
            This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.DeviceExtension">
            <summary>
            A pointer to the device extension. 
            The structure and contents of the device extension are driver-defined. 
            The size is driver-determined, specified in the driver's call to IoCreateDevice or IoCreateDeviceSecure. 
            For more information about device extensions, see Device Extensions. 
            This is a read-only member. However, the object that the member points to can be modified by the driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.DeviceType">
            <summary>
            Set by IoCreateDevice and IoCreateDeviceSecure by using the value that is specified for that routine's DeviceType parameter. 
            For more information, see the Specifying Device Types topic.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.StackSize">
            <summary>
            Specifies the minimum number of stack locations in IRPs to be sent to this driver. 
            IoCreateDevice and IoCreateDeviceSecure set this member to 1 in newly created device objects; lowest-level drivers can therefore ignore this member. 
            The I/O manager automatically sets the StackSize member in a higher-level driver's device object to the appropriate value if the driver calls IoAttachDevice or IoAttachDeviceToDeviceStack. 
            Only a higher-level driver that chains itself over another driver with IoGetDeviceObjectPointer must explicitly set the value of StackSize in its own device object(s) to 1 + the StackSize value of the next-lower driver's device object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Queue">
            <summary>
            Used internally by the I/O manager to queue the device object when it is required. 
            This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.AlignmentRequirement">
            <summary>
            Specifies the device's address alignment requirement for data transfers. 
            The value must be one of the FILE_XXX_ALIGNMENT values that are defined in Wdm.h. 
            For more information, see the Initializing a Device Object, GetDmaAlignment, and ZwQueryInformationFile topics.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.DeviceQueue">
            <summary>
            The device queue object for the device object. 
            The device queue object contains any IRPs that are waiting to be processed by the driver that is associated with the device object. 
            For more information, see the Driver-Managed IRP Queues topic. 
            This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Dpc">
            <summary>
            The deferred procedure call (DPC) object for the device object.
            For more information, see the Introduction to DPC Objects topic. 
            This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.ActiveThreadCount">
            <summary>
            Reserved for future use. This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.SecurityDescriptor">
            <summary>
            Specifies a security descriptor (SECURITY_DESCRIPTOR) for the device object when the device object is created. 
            If this member is NULL, the device object receives default security settings.
            This is a read-only member, although the member can be modified through the ZwSetSecurityObjectfunction.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.DeviceLock">
            <summary>
            A synchronization event object that is allocated by the I/O manager. 
            The I/O manager obtains his event object before it dispatches a mount or mount-verify request to a file-system driver. 
            This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.SectorSize">
            <summary>
            If the device object does not represent a volume, this member is set to zero. 
            If the device object represents a volume, this member specifies the volume's sector size, in bytes. 
            The I/O manager uses this member to make sure that all read operations, write operations, 
            and set file position operations that are issued are aligned correctly when intermediate buffering is disabled. 
            A default system bytes-per-sector value is used when the device object is created, however, file system drivers; 
            and more rarely, legacy and minifilter drivers, can update this value that is based on the geometry of the underlying volume hardware when a mount occurs. 
            Other drivers should not modify this member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Spare1">
            <summary>
            Reserved for system use. This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.DeviceObjectExtension">
            <summary>
            A pointer to a device object extension that is used by the I/O manager and PnP manager to store information about the state of the device. 
            This is an opaque member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT.Reserved">
            <summary>
            Reserved for system use. This is an opaque member.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT_QUEUE">
            <summary>
            Used internally by the I/O manager to queue the device object when it is required.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT_QUEUE.ListEntry">
            <summary>
            A LIST_ENTRY structure that contains forward and backward pointers for a doubly linked list.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_OBJECT_QUEUE.Wcb">
            <summary>
            Device context information used by I/O manager.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD">
            <summary>
            The DEVICE_RESET_INTERFACE_STANDARD structure enables function drivers to reset and recover malfunctioning devices. 
            This structure describes the GUID_DEVICE_RESET_INTERFACE_STANDARD interface.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_device_reset_interface_standard
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.Size">
            <summary>
            The size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.Version">
            <summary>
            The driver-defined interface version.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.Context">
            <summary>
            A pointer to interface-specific context information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.InterfaceReference">
            <summary>
            A pointer to an InterfaceReference routine that increments the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.InterfaceDereference">
            <summary>
            A pointer to an InterfaceDereference routine that decrements the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.DeviceReset">
            <summary>
            A pointer to the interface's DeviceReset routine. 
            This routine can be used by function drivers to attempt to reset and recover a malfunctioning device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.SupportedResetTypes">
            <summary>
            Defines the ULONG parameter SupportedResetTypes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.Reserved">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.QueryBusSpecificResetInfo">
            <summary>
            Defines the PDEVICE_QUERY_BUS_SPECIFIC_RESET_HANDLER parameter QueryBusSpecificResetInfo.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.DeviceBusSpecificReset">
            <summary>
            Defines the PDEVICE_BUS_SPECIFIC_RESET_HANDLER parameter DeviceBusSpecificReset.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_INTERFACE_STANDARD.GetDeviceResetStatus">
            <summary>
            Defines the PGET_DEVICE_RESET_STATUS parameter GetDeviceResetStatus.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_STATUS_FLAGS">
            <summary>
            This topic describes the DEVICE_RESET_STATUS_FLAGS union.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-device_reset_status_flags
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_STATUS_FLAGS.u">
            <summary>
            Defines the u structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_STATUS_FLAGS.AsUlonglong">
            <summary>
            Defines the ULONGLONG member AsUlonglong.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_STATUS_FLAGS_U">
            <summary>
            Defines the u structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_STATUS_FLAGS_U.KeepStackReset">
            <summary>
            Defines the ULONGLONG member KeepStackReset.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_STATUS_FLAGS_U.RecoveringFromBusError">
            <summary>
            Defines the ULONGLONG member RecoveringFromBusError.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DEVICE_RESET_STATUS_FLAGS_U.Reserved">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER">
            <summary>
            The DMA_ADAPTER structure describes a system-defined interface to a DMA controller for a given device. 
            A driver calls IoGetDmaAdapter to obtain this structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_dma_adapter
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER.Version">
            <summary>
            Specifies the version of this structure. 
            Version 3 of the DMA_ADAPTER structure is available starting with Windows 8. 
            For versions 1 and 2 of this structure, this member is set to the value 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER.Size">
            <summary>
            Specifies the size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER.DmaOperations">
            <summary>
            Pointer to a DMA_OPERATIONS structure that contains pointers to DMA adapter functions.
            The version of the DMA_OPERATIONS structure that this member points to is determined by the version of the DMA_ADAPTER structure.
            Thus, for version 1 of the DMA_ADAPTER structure, DmaOperations points to version 1 of the DMA_OPERATIONS structure, and so on. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO">
            <summary>
            The DMA_ADAPTER_INFO structure is a container for a DMA_ADAPTER_INFO_XXX structure that describes the capabilities of a system DMA controller.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_dma_adapter_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO.Version">
            <summary>
            The version number of the **DMA_ADAPTER_INFO_**XXX structure that follows this member. 
            For a DMA_ADAPTER_INFO_V1 structure, set this member to DMA_ADAPTER_INFO_VERSION1 before calling the GetDmaAdapterInfo routine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO.Union1">
            Anonymous_d9213074_2bb3_460f_a88a_4df8662bbf20
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_UNION.V1">
            <summary>
            The capabilities of the bus-master DMA device or the system DMA controller. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_UNION.Crashdump">
            <summary>
            Defines the DMA_ADAPTER_INFO_CRASHDUMP member Crashdump.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_V1">
            <summary>
            The DMA_ADAPTER_INFO_V1 structure describes the capabilities of the system DMA controller that is represented by an adapter object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_V1.ReadDmaCounterAvailable">
            <summary>
            Whether the counter value in each DMA channel can be read. 
            This member is TRUE if the counter can be read, and is FALSE if it cannot be read.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_V1.ScatterGatherLimit">
            <summary>
            The maximum number of elements in a scatter/gather list that the DMA controller can process in a single scatter/gather DMA transfer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_V1.DmaAddressWidth">
            <summary>
            The memory address width, in bits, of the DMA controller. The width is expressed as the number of bits in a DMA address. 
            If the DMA address width is less than the memory address width, 
            the platform hardware drives the remaining, high-order memory address bits to zero during a DMA transfer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_V1.Flags">
            <summary>
            A set of flags that describe the capabilities of the DMA adapter. 
            No flags are currently defined for this member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_V1.MinimumTransferUnit">
            <summary>
            The size, in bytes, of the minimum transfer unit. 
            The number of bytes specified by an element in a scatter/gather list must be an integer multiple of the minimum transfer unit.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_CRASHDUMP">
            <summary>
            This topic describes the DMA_ADAPTER_INFO_CRASHDUMP structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_CRASHDUMP.DeviceDescription">
            <summary>
            Defines the DEVICE_DESCRIPTION member DeviceDescription.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_CRASHDUMP.DeviceIdSize">
            <summary>
            Defines the SIZE_T member DeviceIdSize.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_ADAPTER_INFO_CRASHDUMP.DeviceId">
            <summary>
            Defines the PVOID member DeviceId.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE">
            <summary>
            An extended version of the INTERFACE structure that allows device drivers to invoke the callback functions that perform device domain operations.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_dma_iommu_interface
            DMA_IOMMU_INTERFACE has been deprecated in Windows 10, version 2103 and has been replaced by DMA_IOMMU_INTERFACE_EX.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.CreateDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.DeleteDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.AttachDevice">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.DetachDevice">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.FlushDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.FlushDomainByVaList">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.QueryInputMappings">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.MapLogicalRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.UnmapLogicalRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.MapIdentityRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.UnmapIdentityRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.SetDeviceFaultReporting">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE.ConfigureDomain">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX">
            <summary>
            An interface structure that allows device drivers to interface with the IOMMU functions that perform device domain operations.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-dma_iommu_interface_ex
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX.Size">
            <summary>
            The size (in bytes) of the interface structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX.Version">
            <summary>
            The interface version number that determines the set of interface functions that are provided by this interface structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX.Union1">
            Anonymous_d23a8e47_75d3_42c3_9d99_30ec97388fdf
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1">
            <summary>
            A DMA_IOMMU_INTERFACE_V1 structure that specifies the set of Version 1 (V1) IOMMU interface functions.
            These are the same set of functions as those provided by the deprecated DMA_IOMMU_INTERFACE structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.CreateDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.DeleteDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.AttachDevice">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.DetachDevice">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.FlushDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.FlushDomainByVaList">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.QueryInputMappings">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.MapLogicalRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.UnmapLogicalRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.MapIdentityRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.UnmapIdentityRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.SetDeviceFaultReporting">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V1.ConfigureDomain">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2">
            <summary>
            A DMA_IOMMU_INTERFACE_V2 structure that specifies the set of Version 2 (V2) IOMMU interface functions.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.CreateDomainEx">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.DeleteDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.AttachDeviceEx">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.DetachDeviceEx">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.FlushDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.FlushDomainByVaList">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.QueryInputMappings">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.MapLogicalRangeEx">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.UnmapLogicalRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.MapIdentityRangeEx">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.UnmapIdentityRangeEx">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.SetDeviceFaultReportingEx">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.ConfigureDomain">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.QueryAvailableDomainTypes">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.RegisterInterfaceStateChangeCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.UnregisterInterfaceStateChangeCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.ReserveLogicalAddressRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.FreeReservedLogicalAddressRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.MapReservedLogicalRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.UnmapReservedLogicalRange">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.CreateDevice">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_IOMMU_INTERFACE_EX_V2.DeleteDevice">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS">
            <summary>
            The DMA_OPERATIONS structure provides a table of pointers to functions that control the operation of a DMA controller.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_dma_operations
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.Size">
            <summary>
            The size, in bytes, of this DMA_OPERATIONS structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.PutDmaAdapter">
            <summary>
            A pointer to a system-defined routine to free a DMA_ADAPTER structure. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.AllocateCommonBuffer">
            <summary>
            A pointer to a system-defined routine to allocate a physically contiguous DMA buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FreeCommonBuffer">
            <summary>
            A pointer to a system-defined routine to free a physically contiguous DMA buffer previously allocated by AllocateCommonBuffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.AllocateAdapterChannel">
            <summary>
            A pointer to a system-defined routine to allocate a channel for DMA operations.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FlushAdapterBuffers">
            <summary>
            A pointer to a system-defined routine to flush data from the system or bus-master adapter's internal cache after a DMA operation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FreeAdapterChannel">
            <summary>
            A pointer to a system-defined routine to free a channel previously allocated for DMA operations by AllocateAdapterChannel.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FreeMapRegisters">
            <summary>
            A pointer to a system-defined routine to free map registers allocated for DMA operations.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.MapTransfer">
            <summary>
            A pointer to a system-defined routine to begin a DMA operation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.GetDmaAlignment">
            <summary>
            A pointer to a system-defined routine to obtain the DMA alignment requirements of the controller.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.ReadDmaCounter">
            <summary>
            A pointer to a system-defined routine to obtain the current transfer count for a DMA operation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.GetScatterGatherList">
            <summary>
            A pointer to a system-defined routine that allocates map registers and creates a scatter/gather list for DMA.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.PutScatterGatherList">
            <summary>
            A pointer to a system-defined routine that frees map registers and a scatter/gather list after a DMA operation is complete.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.CalculateScatterGatherList">
            <summary>
            A pointer to a system-defined routine that determines the buffer size needed to hold the scatter/gather list that describes an I/O data buffer. 
            This member is available only in versions 2 and later of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.BuildScatterGatherList">
            <summary>
            A pointer to a system-defined routine that allocates map registers and creates a scatter/gather list for DMA in a driver-supplied buffer. 
            This member is available only in versions 2 and later of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.BuildMdlFromScatterGatherList">
            <summary>
            A pointer to a system-defined routine that builds an MDL corresponding to a scatter/gather list. 
            This member is available only in versions 2 and later of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.GetDmaAdapterInfo">
            <summary>
            A pointer to a system-defined routine that describes the capabilities of a bus-master DMA device or a system DMA controller. 
            GetDmaAdapterInfo is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.GetDmaTransferInfo">
            <summary>
            A pointer to a system-defined routine that describes the allocation requirements for a scatter/gather list. 
            This routine replaces CalculateScatterGatherList. 
            GetDmaTransferInfo is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.InitializeDmaTransferContext">
            <summary>
            A pointer to a system-defined routine that initializes an opaque DMA transfer context. 
            The operating system stores the internal status of a DMA transfer in this context. 
            InitializeDmaTransferContext is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.AllocateCommonBufferEx">
            <summary>
            A pointer to a system-defined routine that allocates memory for a common buffer 
            and maps this memory so that it can accessed both by the processor and by a DMA device. 
            AllocateCommonBufferEx is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.AllocateAdapterChannelEx">
            <summary>
            A pointer to a system-defined routine that allocates the resources required for a DMA transfer 
            and then calls the driver-supplied AdapterControl routine to initiate the DMA transfer. 
            AllocateAdapterChannelEx is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.ConfigureAdapterChannel">
            <summary>
            A pointer to a system-defined routine enables a custom function that is implemented by the DMA controller. 
            ConfigureAdapterChannel is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.CancelAdapterChannel">
            <summary>
            A pointer to a system-defined routine that tries to cancel a pending request to allocate a DMA channel. 
            CancelAdapterChannel is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.MapTransferEx">
            <summary>
            A pointer to a system-defined routine that sets up map registers to map the physical addresses in a scatter/gather list 
            to the logical addresses that are required to do a DMA transfer. 
            MapTransferEx is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.GetScatterGatherListEx">
            <summary>
            A pointer to a system-defined routine that allocates resources required for a DMA transfer, 
            builds a scatter/gather list, and then calls the driver-supplied AdapterListControl routine to initiate the DMA transfer. 
            GetScatterGatherListEx is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.BuildScatterGatherListEx">
            <summary>
            A pointer to a system-defined routine that builds a scatter/gather list in a caller-allocated buffer, 
            and then calls the driver-supplied AdapterListControl routine to initiate the DMA transfer. 
            BuildScatterGatherListEx is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FlushAdapterBuffersEx">
            <summary>
            A pointer to a system-defined routine that flushes any data that remains in the system DMA controller's internal cache 
            or in a bus-master adapter's internal cache at the end of a DMA transfer. 
            For a device that uses a system DMA controller, this routine cancels the current DMA transfer on the controller 
            if the transfer is not complete. 
            FlushAdapterBuffersEx is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FreeAdapterObject">
            <summary>
            A pointer to a system-defined routine that releases the specified adapter object after a driver has completed all DMA operations. 
            FreeAdapterObject is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.CancelMappedTransfer">
            <summary>
            A pointer to a system-defined routine that cancels a mapped transfer. 
            CancelMappedTransfer is available only in version 3 of DMA_OPERATIONS.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.AllocateDomainCommonBuffer">
            <summary>
            A pointer to a PALLOCATE_DOMAIN_COMMON_BUFFER callback routine to allocate a domain common buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FlushDmaBuffer">
            <summary>
            A pointer to a PFLUSH_DMA_BUFFER callback function that flushes any data remaining in the cache.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.JoinDmaDomain">
            <summary>
            A pointer to a PJOIN_DMA_DOMAIN callback function that joins the specified DMA domain.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.LeaveDmaDomain">
            <summary>
            A pointer to a PLEAVE_DMA_DOMAIN callback function that leaves the specified DMA domain.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.GetDmaDomain">
            <summary>
            A pointer to the PGET_DMA_DOMAIN callback function that gets a handle to the DMA domain.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.AllocateCommonBufferWithBounds">
            <summary>
            A pointer to a PALLOCATE_COMMON_BUFFER_WITH_BOUNDS callback function that allocates the memory for a common buffer 
            and maps it so that it can be accessed by a master device and the CPU.
            The common buffer can be bound by an optional minimum and maximum logical address. 
            This option is available starting in Windows 10, version 1803.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.AllocateCommonBufferVector">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.GetCommonBufferFromVectorByIndex">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FreeCommonBufferFromVector">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.FreeCommonBufferVector">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_OPERATIONS.CreateCommonBufferFromMdl">
            <summary>
            A pointer to a PCREATE_COMMON_BUFFER_FROM_MDL callback function that will create a DMA common buffer from an MDL 
            and maps the backing memory so that it can be accessed by a bus-mastering device and the CPU. 
            This optional callback is available starting in Windows Server 2022.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO">
            <summary>
            The DMA_TRANSFER_INFO structure is a container for a DMA_TRANSFER_INFO_XXX structure that describes the allocation requirements for a scatter/gather list.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_dma_transfer_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO.Version">
            <summary>
            The version number of the DMA_TRANSFER_INFO_XXX structure that follows this member. 
            For a DMA_TRANSFER_INFO_V1 structure, set this member to DMA_TRANSFER_INFO_VERSION1 before calling the GetDmaTransferInfo routine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO.Union1">
            
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V1">
            <summary>
            The allocation requirements for a scatter/gather list.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V1.MapRegisterCount">
            <summary>
            The number of map registers required to translate all the physical addresses in the scatter/gather list to logical addresses.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V1.ScatterGatherElementCount">
            <summary>
            The number of scatter/gather elements in the scatter/gather list. Each element is a structure of type SCATTER_GATHER_ELEMENT.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V1.ScatterGatherListSize">
            <summary>
            The required size, in bytes, of the scatter/gather buffer. 
            This buffer contains the scatter/gather list that describes the memory that is used to buffer I/O data during the DMA transfer. 
            The scatter/gather buffer must be large enough to contain a SCATTER_GATHER_LIST structure and an array of SCATTER_GATHER_ELEMENT structures, 
            plus additional data that is used internally by the operating system.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V2">
            <summary>
            The allocation requirements for a scatter/gather list.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V2.MapRegisterCount">
            same as DMA_TRANSFER_INFO_V1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V2.ScatterGatherElementCount">
            same as DMA_TRANSFER_INFO_V1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V2.ScatterGatherListSize">
            same as DMA_TRANSFER_INFO_V1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DMA_TRANSFER_INFO_V2.LogicalPageCount">
            <summary>
            The number of logical pages.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION">
            <summary>
            Contains information required to configure a domain. 
            This structure is used by the IOMMU_DOMAIN_CONFIGURE callback function.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_domain_configuration
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION.Type">
            <summary>
            A DOMAIN_CONFIGURATION_ARCH-type value that indicates the domain architecture.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64">
            <summary>
            Contains information required to configure a domain for an ARM64 system.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_domain_configuration_arm64
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64.Ttbr0">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64.Ttbr1">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64.Mair0">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64.Mair1">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64.InputSize0">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64.InputSize1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64.CoherentTableWalks">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_ARM64.TranslationEnabled">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_X64">
            <summary>
            Contains information required to configure a domain for an ARM64 system.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_domain_configuration_arm64
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_X64.FirstLevelPageTableRoot">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_CONFIGURATION_X64.TranslationEnabled">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_PASSWORD_INFORMATION">
            <summary>
            The DOMAIN_PASSWORD_INFORMATION structure contains information about a domain's password policy, such as the minimum length for passwords and how unique passwords must be.
            It is used in the MSV1_0_CHANGEPASSWORD_RESPONSE structure.
            https://learn.microsoft.com/en-us/windows/win32/api/ntsecapi/ns-ntsecapi-domain_password_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_PASSWORD_INFORMATION.MinPasswordLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_PASSWORD_INFORMATION.PasswordHistoryLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_PASSWORD_INFORMATION.PasswordProperties">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_PASSWORD_INFORMATION.MaxPasswordAge">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DOMAIN_PASSWORD_INFORMATION.MinPasswordAge">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT">
            <summary>
            Provides information that the owner window uses to determine how to paint an owner-drawn control or menu item. The owner window of the owner-drawn control or menu item receives a pointer to this structure as the lParam parameter of the WM_DRAWITEM message.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-drawitemstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.CtlType">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.CtlID">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.itemID">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.itemAction">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.itemState">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.hwndItem">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.hDC">
            HDC->HDC__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.rcItem">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWITEMSTRUCT.itemData">
            ULONG_PTR->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.DRAWTEXTPARAMS">
            <summary>
            The DRAWTEXTPARAMS structure contains extended formatting options for the DrawTextEx function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-drawtextparams
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWTEXTPARAMS.cbSize">
            <summary>
            The structure size, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWTEXTPARAMS.iTabLength">
            <summary>
            The size of each tab stop, in units equal to the average character width.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWTEXTPARAMS.iLeftMargin">
            <summary>
            The left margin, in units equal to the average character width.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWTEXTPARAMS.iRightMargin">
            <summary>
            The right margin, in units equal to the average character width.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.DRAWTEXTPARAMS.uiLengthDrawn">
            <summary>
            Receives the number of characters processed by DrawTextEx, including white-space characters.
            The number can be the length of the string or the index of the first line that falls below the drawing area.
            Note that DrawTextEx always processes the entire string if the DT_NOCLIP formatting flag is specified.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EFS_CERTIFICATE_BLOB">
            <summary>
            Contains a certificate.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/ns-winefs-efs_certificate_blob
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EFS_CERTIFICATE_BLOB.dwCertEncodingType">
            <summary>
            A certificate encoding type. This member can be one of the following values.
            CRYPT_ASN_ENCODING
            CRYPT_NDR_ENCODING
            X509_ASN_ENCODING
            X509_NDR_ENCODING
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EFS_CERTIFICATE_BLOB.cbData">
            <summary>
            The number of bytes in the pbData buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EFS_CERTIFICATE_BLOB.pbData">
            <summary>
            The binary certificate.
            The dwCertEncodingType member specifies the format for this certificate.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EFS_HASH_BLOB">
            <summary>
            Contains a certificate hash.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/ns-winefs-efs_hash_blob
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EFS_HASH_BLOB.cbData">
            <summary>
            The number of bytes in the pbData buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EFS_HASH_BLOB.pbData">
            <summary>
            The certificate hash.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS">
            <summary>
            The ENABLE_TRACE_PARAMETERS structure contains information used to enable a provider via EnableTraceEx2.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-enable_trace_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS.EnableProperty">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS.ControlFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS.SourceId">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS.EnableFilterDesc">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS.FilterDescCount">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS_V1">
            <summary>
            The ENABLE_TRACE_PARAMETERS_V1 structure contains information used to enable a provider via EnableTraceEx2.
            This structure is obsolete.
            Use ENABLE_TRACE_PARAMETERS instead.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-enable_trace_parameters_v1
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS_V1.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS_V1.EnableProperty">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS_V1.ControlFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS_V1.SourceId">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENABLE_TRACE_PARAMETERS_V1.EnableFilterDesc">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE">
            <summary>
            Contains a certificate and the SID of its owner.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/ns-winefs-encryption_certificate
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE.cbTotalLength">
            <summary>
            The length of this structure, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE.pUserSid">
            <summary>
            The SID of the user who owns the certificate.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE.pCertBlob">
            <summary>
            A pointer to an EFS_CERTIFICATE_BLOB structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH">
            <summary>
            Contains a certificate hash and display information for the certificate.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/ns-winefs-encryption_certificate_hash
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH.cbTotalLength">
            <summary>
            The length of this structure, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH.pUserSid">
            <summary>
            The SID of the user who owns the certificate.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH.pHash">
            <summary>
            A pointer to an EFS_HASH_BLOB structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH.lpDisplayInformation">
            <summary>
            User-displayable information for the certificate.
            This is usually the user's common name and universal principal name (UPN).
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH_LIST">
            <summary>
            Contains a list of certificate hashes.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/ns-winefs-encryption_certificate_hash_list
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH_LIST.nCert_Hash">
            <summary>
            The number of certificate hashes in the list.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_HASH_LIST.pUsers">
            <summary>
            A pointer to the first ENCRYPTION_CERTIFICATE_HASH structure in the list.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_LIST">
            <summary>
            Contains a list of certificates.
            https://learn.microsoft.com/en-us/windows/win32/api/winefs/ns-winefs-encryption_certificate_list
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_LIST.nCert_Hash">
            <summary>
            The number of certificates in the list.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENCRYPTION_CERTIFICATE_LIST.pUsers">
            <summary>
            A pointer to the first ENCRYPTION_CERTIFICATE structure in the list.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ENLISTMENT_BASIC_INFORMATION">
            <summary>
            The ENLISTMENT_BASIC_INFORMATION structure contains information about an enlistment object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_enlistment_basic_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENLISTMENT_BASIC_INFORMATION.EnlistmentId">
            <summary>
            A GUID that KTM has assigned to the enlistment object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENLISTMENT_BASIC_INFORMATION.TransactionId">
            <summary>
            A GUID that KTM has assigned to the transaction object that is associated with the enlistment object that the EnlistmentId member identifies.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENLISTMENT_BASIC_INFORMATION.ResourceManagerId">
            <summary>
            A GUID that KTM has assigned to the resource manager that created the enlistment.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ENUM_PAGE_FILE_INFORMATION">
            <summary>
            Contains information about a pagefile.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-enum_page_file_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENUM_PAGE_FILE_INFORMATION.cb">
            <summary>
            The size of this structure, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENUM_PAGE_FILE_INFORMATION.Reserved">
            <summary>
            This member is reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENUM_PAGE_FILE_INFORMATION.TotalSize">
            <summary>
            The total size of the pagefile, in pages.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENUM_PAGE_FILE_INFORMATION.TotalInUse">
            <summary>
            The current pagefile usage, in pages.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ENUM_PAGE_FILE_INFORMATION.PeakUsage">
            <summary>
            The peak pagefile usage, in pages.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CALLBACK_INFORMATION">
            <summary>
            Provided to the BufferCallback as the ConsumerInfo parameter and provides details on the current processing session.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-etw_buffer_callback_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CALLBACK_INFORMATION.TraceHandle">
            <summary>
            The TraceHandle for this processing session.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CALLBACK_INFORMATION.LogfileHeader">
            <summary>
            TRACE_LOGFILE_HEADER structure containing trace processing status (previously-existing structure).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CALLBACK_INFORMATION.BuffersRead">
            <summary>
            The count of how many buffers have been processed up to this point.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CONTEXT">
            <summary>
            The ETW_BUFFER_CONTEXT structure provides context information about the event.
            An instance of the ETW_BUFFER_CONTEXT structure is included in the EVENT_RECORD and EVENT_TRACE structures.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-etw_buffer_context
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CONTEXT.Union1">
            Anonymous_80777bca_eb74_46b6_8d48_9884dfaeb9f1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CONTEXT.LoggerId">
            <summary>
            Identifier of the session that logged the event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CONTEXT_UNION.DUMMYSTRUCTNAME">
            Anonymous_06268289_d5c4_4826_95b5_6392f5aa57c8
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CONTEXT_UNION.ProcessorIndex">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CONTEXT_DUMMY.ProcessorNumber">
            <summary>
            The number of the CPU on which the provider process was running.
            The number is zero on a single-processor computer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_CONTEXT_DUMMY.Alignment">
            <summary>
            Alignment between events (always eight).
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_HEADER">
            <summary>
            The header structure of an ETW buffer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-etw_buffer_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_HEADER.Reserved1">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_HEADER.TimeStamp">
            <summary>
            The time when the buffer was flushed. It will be in the raw clock type of the session from which the buffer was collected (for example, QueryPerformanceCounter, CPU timestamp counter, or GetSystemTimeAsFileTime).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_HEADER.Reserved2">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_HEADER.ClientContext">
            <summary>
            Contains information about the processor and logger that generated this buffer. See ETW_BUFFER_CONTEXT.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_HEADER.Reserved3">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_HEADER.FilledBytes">
            <summary>
            The size of the valid data in the buffer.
            This is the size of the ETW_BUFFER_HEADER and the event data.
            When a buffer is copied, it is common to only allocate enough memory to store the valid data (for example, only FilledBytes bytes are allocated and copied),
            so recipients of a buffer should not read beyond this offset.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_BUFFER_HEADER.Reserved4">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ETW_OPEN_TRACE_OPTIONS">
            <summary>
            Provides configuration parameters to OpenTraceFromBufferStream, OpenTraceFromFile, OpenTraceFromRealTimeLogger, OpenTraceFromRealTimeLoggerWithAllocationOptions functions.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-etw_open_trace_options
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_OPEN_TRACE_OPTIONS.ProcessTraceModes">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_OPEN_TRACE_OPTIONS.EventCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_OPEN_TRACE_OPTIONS.EventCallbackContext">
            void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_OPEN_TRACE_OPTIONS.BufferCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_OPEN_TRACE_OPTIONS.BufferCallbackContext">
            void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.ETW_TRACE_PARTITION_INFORMATION">
            <summary>
            Contains partition information pulled from an ETW trace.
            Most commonly used as a return structure for QueryTraceProcessingHandle.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-etw_trace_partition_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_TRACE_PARTITION_INFORMATION.PartitionId">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_TRACE_PARTITION_INFORMATION.ParentId">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_TRACE_PARTITION_INFORMATION.QpcOffsetFromRoot">
            LONG64->__int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.ETW_TRACE_PARTITION_INFORMATION.PartitionType">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENTMSG">
            <summary>
            Contains information about a hardware message sent to the system message queue.
            This structure is used to store message information for the JournalPlaybackProc callback function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-eventmsg
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENTMSG.message">
            <summary>
            The message.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENTMSG.paramL">
            <summary>
            Additional information about the message. The exact meaning depends on the message value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENTMSG.paramH">
            <summary>
            Additional information about the message. The exact meaning depends on the message value.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENTMSG.time">
            <summary>
            The time at which the message was posted.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENTMSG.hwnd">
            <summary>
            A handle to the window to which the message was posted.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EventTracing.IsEnabled">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EventTracing.Level">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EventTracing.Reserved1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EventTracing.LoggerId">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EventTracing.EnableProperty">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EventTracing.Reserved2">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EventTracing.MatchAnyKeyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EventTracing.MatchAllKeyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS">
            <summary>
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/nf-evntcons-eventaccesscontrol
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS.WMIGUID_QUERY">
            <summary>
            Allows the user to query information about the trace session.
            Set this permission on the session's GUID.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS.TRACELOG_CREATE_REALTIME">
            <summary>
            Allows the user to start or update a real-time session.
            Set this permission on the session's GUID.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS.TRACELOG_CREATE_ONDISK">
            <summary>
            Allows the user to start or update a session that writes events to a log file.
            Set this permission on the session's GUID.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS.TRACELOG_GUID_ENABLE">
            <summary>
            Allows the user to enable the provider.
            Set this permission on the provider's GUID.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS.TRACELOG_ACCESS_KERNEL_LOGGER">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS.TRACELOG_LOG_EVENT">
            <summary>
            Allows the user to log events to a trace session if session is running in SECURE mode (the session set the EVENT_TRACE_SECURE_MODE flag in the LogFileMode member of EVENT_TRACE_PROPERTIES).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS.TRACELOG_ACCESS_REALTIME">
            <summary>
            Allows a user to consume events in real-time.
            Set this permission on the session's GUID.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_ACCESS_RIGHTS.TRACELOG_REGISTER_GUIDS">
            <summary>
            Allows the user to register the provider.
            Set this permission on the provider's GUID.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR">
            <summary>
            The EVENT_DATA_DESCRIPTOR structure defines a block of data that will be used in an ETW event.
            This structure is typically initialized using the EventDataDescCreate function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/ns-evntprov-event_data_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR.Ptr">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR.Size">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR.Union1">
            Anonymous_5952117e_24b0_4dcc_b964_3ebbe205a256
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR_UNION.Reserved">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR_UNION.DUMMYSTRUCTNAME">
            Anonymous_d609e56c_f2a1_42cc_a42e_6daf5d01918f
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR_DUMMY.Type">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR_DUMMY.Reserved1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DATA_DESCRIPTOR_DUMMY.Reserved2">
            USHORT->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DESCRIPTOR">
            <summary>
            The EVENT_DESCRIPTOR structure contains information (metadata) about an ETW event.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/ns-evntprov-event_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DESCRIPTOR.Id">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DESCRIPTOR.Version">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DESCRIPTOR.Channel">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DESCRIPTOR.Level">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DESCRIPTOR.Opcode">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DESCRIPTOR.Task">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_DESCRIPTOR.Keyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_EVENT_KEY">
            <summary>
            Defines a unique event identifier.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_event_key
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_EVENT_KEY.Key">
            <summary>
            The event key.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_INSTANCE">
            <summary>
            Defines the relationship between events if TraceEventInstance was used to log related events.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_instance
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_INSTANCE.InstanceId">
            <summary>
            A unique transaction identifier that maps an event to a specific transaction.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_INSTANCE.ParentInstanceId">
            <summary>
            A unique transaction identifier of a parent event if you are mapping a hierarchical relationship.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_INSTANCE.ParentGuid">
            <summary>
            A GUID that uniquely identifies the provider that logged the event referenced by the ParentInstanceId member.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_PEBS_INDEX">
            <summary>
            Defines a Processor Event Based Sampling (PEBS) index.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_pebs_index
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_PEBS_INDEX.PebsIndex">
            <summary>
            The PEBS index.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_PMC_COUNTERS">
            <summary>
            Defines an extended item Performance Monitoring Unit (PMC) counter.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_pmc_counters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_PMC_COUNTERS.Counter">
            <summary>
            The counter.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_PROCESS_START_KEY">
            <summary>
            Defines a trace flag to get a process start key of a process logging the event.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_process_start_key
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_PROCESS_START_KEY.ProcessStartKey">
            <summary>
            The trace flag.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_RELATED_ACTIVITYID">
            <summary>
            Defines the parent event of this event.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_related_activityid
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_RELATED_ACTIVITYID.RelatedActivityId">
            <summary>
            A GUID that uniquely identifies the parent activity to which this activity is related. The identifier is specified in the RelatedActivityId parameter passed to the EventWriteTransfer function.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_KEY32">
            <summary>
            Defines an extended item stack key on a 32-bit computer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_stack_key32
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_KEY32.MatchId">
             <summary>
             A unique identifier that you use to match the kernel-mode calls to the user-mode calls;
             the kernel-mode calls and user-mode calls are captured in separate events if the environment prevents
             both from being captured in the same event.
             If the kernel-mode and user-mode calls were captured in the same event, the value is zero.
            
             Typically, on 32-bit computers, you can always capture both the kernel-mode and user-mode calls in the same event.
             However, if you use the frame pointer optimization compiler option,
             the stack may not be captured, captured incorrectly, or truncated.
             </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_KEY32.StackKey">
            <summary>
            The key.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_KEY32.Padding">
            <summary>
            The key padding.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_KEY64">
            <summary>
            Defines an extended item stack key on a 64-bit computer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_stack_key64
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_KEY64.MatchId">
            <summary>
            A unique identifier that you use to match the kernel-mode calls to the user-mode calls;
            the kernel-mode calls and user-mode calls are captured in separate events if the environment prevents
            both from being captured in the same event.
            If the kernel-mode and user-mode calls were captured in the same event, the value is zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_KEY64.StackKey">
            <summary>
            The key.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_TRACE32">
            <summary>
            Defines a call stack on a 32-bit computer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_stack_trace32
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_TRACE32.MatchId">
            <summary>
            A unique identifier that you use to match the kernel-mode calls to the user-mode calls;
            the kernel-mode calls and user-mode calls are captured in separate events if the environment prevents
            both from being captured in the same event.
            If the kernel-mode and user-mode calls were captured in the same event, the value is zero.
            
            Typically, on 32-bit computers, you can always capture both the kernel-mode and user-mode calls in the same event.
            However, if you use the frame pointer optimization compiler option, the stack may not be captured, captured incorrectly, or truncated.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_TRACE32.Address">
            <summary>
            An array of call addresses on the stack.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_TRACE64">
            <summary>
            Defines a call stack on a 64-bit computer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_stack_trace64
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_TRACE64.MatchId">
            <summary>
            A unique identifier that you use to match the kernel-mode calls to the user-mode calls;
            the kernel-mode calls and user-mode calls are captured in separate events if the environment prevents
            both from being captured in the same event.
            If the kernel-mode and user-mode calls were captured in the same event, the value is zero.
            
            Typically, on 32-bit computers, you can always capture both the kernel-mode and user-mode calls in the same event.
            However, if you use the frame pointer optimization compiler option, the stack may not be captured, captured incorrectly, or truncated.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_STACK_TRACE64.Address">
            <summary>
            An array of call addresses on the stack.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_TS_ID">
            <summary>
            Defines the terminal session that logged the event.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_extended_item_ts_id
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_EXTENDED_ITEM_TS_ID.SessionId">
            <summary>
            Identifies the terminal session that logged the event.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_DESCRIPTOR">
            <summary>
            The EVENT_FILTER_DESCRIPTOR structure defines the filter data that a session passes to the provider's enable callback function.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/ns-evntprov-event_filter_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_DESCRIPTOR.Ptr">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_DESCRIPTOR.Size">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_DESCRIPTOR.Type">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_ID">
            <summary>
            The EVENT_FILTER_EVENT_ID structure defines event IDs used in an EVENT_FILTER_DESCRIPTOR structure for an event ID or stack walk filter.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/ns-evntprov-event_filter_event_id
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_ID.FilterIn">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_ID.Reserved">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_ID.Count">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_ID.Events">
            USHORT[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_NAME">
            <summary>
            The EVENT_FILTER_EVENT_NAME structure defines event IDs used in an EVENT_FILTER_DESCRIPTOR structure for an event name or stalk walk name filter.
            This filter will only be applied to events that are otherwise enabled on the logging session, via level/keyword in the enable call.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/ns-evntprov-event_filter_event_name
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_NAME.MatchAnyKeyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_NAME.MatchAllKeyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_NAME.Level">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_NAME.FilterIn">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_NAME.NameCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_EVENT_NAME.Names">
            UCHAR[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_HEADER">
            <summary>
            Defines the header data that must precede the filter data that is defined in the instrumentation manifest.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/ns-evntprov-event_filter_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_HEADER.Id">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_HEADER.Version">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_HEADER.Reserved">
            UCHAR[5]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_HEADER.InstanceId">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_HEADER.Size">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_HEADER.NextOffset">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_LEVEL_KW">
            <summary>
            The EVENT_FILTER_LEVEL_KW structure defines event IDs used in an EVENT_FILTER_DESCRIPTOR structure for a stack walk level-keyword filter.
            https://learn.microsoft.com/en-us/windows/win32/api/evntprov/ns-evntprov-event_filter_level_kw
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_LEVEL_KW.MatchAnyKeyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_LEVEL_KW.MatchAllKeyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_LEVEL_KW.Level">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_FILTER_LEVEL_KW.FilterIn">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER">
            <summary>
            Defines information about the event.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.Size">
            <summary>
            Size of the event record, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.HeaderType">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.Flags">
            <summary>
            Flags that provide information about the event such as the type of session it was logged to and if the event contains extended data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.EventProperty">
            <summary>
            Indicates the source to use for parsing the event data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.ThreadId">
            <summary>
            Identifies the thread that generated the event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.ProcessId">
            <summary>
            Identifies the process that generated the event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.TimeStamp">
            <summary>
            Contains the time that the event occurred.
            The resolution is system time unless the ProcessTraceMode member of EVENT_TRACE_LOGFILE contains the PROCESS_TRACE_MODE_RAW_TIMESTAMP flag,
            in which case the resolution depends on the value of the Wnode.
            ClientContext member of EVENT_TRACE_PROPERTIES at the time the controller created the session.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.ProviderId">
            <summary>
            GUID that uniquely identifies the provider that logged the event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.EventDescriptor">
            <summary>
            Defines the information about the event such as the event identifier and severity level.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.Union1">
            Anonymous_17c2a8f6_21d1_4147_b9d8_479d0235c5bb
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER.ActivityId">
            <summary>
            Identifier that relates two events.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_UNION.DUMMYSTRUCTNAME">
            Anonymous_fec0f95e_2983_48f7_bcbe_4c94ac097fa8
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_UNION.ProcessorTime">
            <summary>
            For private sessions, the elapsed execution time for user-mode instructions, in CPU ticks.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_DUMMY.KernelTime">
            <summary>
            Elapsed execution time for kernel-mode instructions, in CPU time units.
            If you are using a private session, use the value in the ProcessorTime member instead.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_DUMMY.UserTime">
            <summary>
            Elapsed execution time for user-mode instructions, in CPU time units.
            If you are using a private session, use the value in the ProcessorTime member instead.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_EXTENDED_DATA_ITEM">
            <summary>
            Defines the extended data that Event Tracing for Windows (ETW) collects as part of the event data.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_header_extended_data_item
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_EXTENDED_DATA_ITEM.Reserved1">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_EXTENDED_DATA_ITEM.ExtType">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_EXTENDED_DATA_ITEM.Struct1">
            Anonymous_37690024_02d1_469a_af63_60d5336f96cc
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_EXTENDED_DATA_ITEM.DataSize">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_EXTENDED_DATA_ITEM.DataPtr">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_HEADER_EXTENDED_DATA_ITEM_STRUCT.bitvector1">
             Linkage : 1
            Reserved2 : 15
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER">
            <summary>
            The EVENT_INSTANCE_HEADER structure contains standard event tracing information common to all events written by TraceEventInstance.
            The structure also contains registration handles for the event trace class and related parent event,
            which you use to trace instances of a transaction or hierarchical relationships between related events.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_instance_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.Union1">
            Anonymous_b42dde79_3a4f_4bd8_b9e2_19b07764a241
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.Union2">
            Anonymous_6285be46_415b_4121_85c0_4f6caca7b892
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.ThreadId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.ProcessId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.TimeStamp">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.RegHandle">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.InstanceId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.ParentInstanceId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.Union3">
            Anonymous_4ff8496e_de5b_4c3d_a063_d795b39ddb16
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_HEADER.ParentRegHandle">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_17c8f463_8d86_4217_b4ab_6e940a270625.HeaderType">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_17c8f463_8d86_4217_b4ab_6e940a270625.MarkerFlags">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_b42dde79_3a4f_4bd8_b9e2_19b07764a241.FieldTypeFlags">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_b42dde79_3a4f_4bd8_b9e2_19b07764a241.DUMMYSTRUCTNAME">
            Anonymous_17c8f463_8d86_4217_b4ab_6e940a270625
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_91eae0e7_64c4_48ad_a4f3_3eff86645bc2.Type">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_91eae0e7_64c4_48ad_a4f3_3eff86645bc2.Level">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_91eae0e7_64c4_48ad_a4f3_3eff86645bc2.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_6285be46_415b_4121_85c0_4f6caca7b892.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_6285be46_415b_4121_85c0_4f6caca7b892.Class">
            Anonymous_91eae0e7_64c4_48ad_a4f3_3eff86645bc2
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_a98fcc91_4946_4678_912d_70aab8ae47d2.KernelTime">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_a98fcc91_4946_4678_912d_70aab8ae47d2.UserTime">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_15f07600_09c3_4460_aa83_45bf96c71f09.EventId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_15f07600_09c3_4460_aa83_45bf96c71f09.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_4ff8496e_de5b_4c3d_a063_d795b39ddb16.DUMMYSTRUCTNAME">
            Anonymous_a98fcc91_4946_4678_912d_70aab8ae47d2
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_4ff8496e_de5b_4c3d_a063_d795b39ddb16.ProcessorTime">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_4ff8496e_de5b_4c3d_a063_d795b39ddb16.DUMMYSTRUCTNAME2">
            Anonymous_15f07600_09c3_4460_aa83_45bf96c71f09
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_INFO">
            <summary>
            The EVENT_INSTANCE_INFO structure maps a unique transaction identifier to a registered event trace class for TraceEventInstance.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_instance_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_INFO.RegHandle">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_INSTANCE_INFO.InstanceId">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_RECORD">
            <summary>
            Defines the layout of an event that Event Tracing for Windows (ETW) delivers.
            https://learn.microsoft.com/en-us/windows/win32/api/evntcons/ns-evntcons-event_record
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_RECORD.EventHeader">
            <summary>
            Information about the event such as the time stamp for when it was written.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_RECORD.BufferContext">
            <summary>
            Defines information such as the session that logged the event.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_RECORD.ExtendedDataCount">
            <summary>
            The number of extended data structures in the ExtendedData member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_RECORD.UserDataLength">
            <summary>
            The size, in bytes, of the data in the UserData member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_RECORD.ExtendedData">
            <summary>
            One or more extended data items that ETW collects.
            The extended data includes some items, such as the security identifier (SID) of the user that logged the event,
            only if the controller sets the EnableProperty parameter passed to the EnableTraceEx or EnableTraceEx2 function.
            The extended data includes other items, such as the related activity identifier and decoding information for trace logging,
            regardless whether the controller sets the EnableProperty parameter passed to EnableTraceEx or EnableTraceEx2. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_RECORD.UserData">
            <summary>
            Event specific data. To parse this data, see Retrieving Event Data Using TDH.
            If the Flags member of EVENT_HEADER contains EVENT_HEADER_FLAG_STRING_ONLY,
            the data is a null-terminated Unicode string that you do not need TDH to parse.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_RECORD.UserContext">
            <summary>
            Th context specified in the Context member of the EVENT_TRACE_LOGFILE structure that is passed to the OpenTrace function.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE">
            <summary>
            The EVENT_TRACE structure is used to deliver event information to an event trace consumer.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_trace
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE.Header">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE.InstanceId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE.ParentInstanceId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE.ParentGuid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE.MofData">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE.MofLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE.Union1">
            Anonymous_52ed5a3d_aba4_45d1_8aae_65a8e7ef7fe7
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_UNION.ClientContext">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_UNION.BufferContext">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER">
            <summary>
            The EVENT_TRACE_HEADER structure contains standard event tracing information common to all events written by TraceEvent.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_trace_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER.Union1">
            Anonymous_f59b9b82_ef8c_4bc0_80ed_32c50410b47a
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER.Union2">
            Anonymous_5b450588_1d7e_41fd_b407_a13f8b274369
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER.ThreadId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER.ProcessId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER.TimeStamp">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER.Union3">
            Anonymous_c65292bb_2e0e_4535_a8a5_89a78028d983
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_HEADER.Union4">
            Anonymous_81c7f0df_1b32_4851_9a3e_7b794ae7ffc4
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_140e9ee7_55c0_4bfb_a989_cf1c5f6bfacb.HeaderType">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_140e9ee7_55c0_4bfb_a989_cf1c5f6bfacb.MarkerFlags">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_f59b9b82_ef8c_4bc0_80ed_32c50410b47a.FieldTypeFlags">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_f59b9b82_ef8c_4bc0_80ed_32c50410b47a.DUMMYSTRUCTNAME">
            Anonymous_140e9ee7_55c0_4bfb_a989_cf1c5f6bfacb
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_1534ea40_73a7_4344_8429_d3740629886c.Type">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_1534ea40_73a7_4344_8429_d3740629886c.Level">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_1534ea40_73a7_4344_8429_d3740629886c.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_5b450588_1d7e_41fd_b407_a13f8b274369.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_5b450588_1d7e_41fd_b407_a13f8b274369.Class">
            Anonymous_1534ea40_73a7_4344_8429_d3740629886c
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_c65292bb_2e0e_4535_a8a5_89a78028d983.Guid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_c65292bb_2e0e_4535_a8a5_89a78028d983.GuidPtr">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_1aab4947_defa_4db2_b20b_b992ad9606ea.KernelTime">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_1aab4947_defa_4db2_b20b_b992ad9606ea.UserTime">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_2cbee213_12e0_4cbf_b34f_d90c69d8523b.ClientContext">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_2cbee213_12e0_4cbf_b34f_d90c69d8523b.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_81c7f0df_1b32_4851_9a3e_7b794ae7ffc4.DUMMYSTRUCTNAME">
            Anonymous_1aab4947_defa_4db2_b20b_b992ad9606ea
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_81c7f0df_1b32_4851_9a3e_7b794ae7ffc4.ProcessorTime">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.Anonymous_81c7f0df_1b32_4851_9a3e_7b794ae7ffc4.DUMMYSTRUCTNAME2">
            Anonymous_2cbee213_12e0_4cbf_b34f_d90c69d8523b
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA">
            <summary>
            The EVENT_TRACE_LOGFILE structure stores information about a trace data source.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_trace_logfilea
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.LogFileName">
            LPWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.LoggerName">
            LPWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.CurrentTime">
            LONGLONG->__int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.BuffersRead">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.Union1">
            Anonymous_bd8036bd_5232_4556_8314_15a6ac04a086
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.CurrentEvent">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.LogfileHeader">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.BufferCallback">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.BufferSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.Filled">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.EventsLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.Union2">
            Anonymous_5fb9dbd4_7630_4c7b_871e_d5fb58a36749
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.IsKernelTrace">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEA.Context">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW">
            <summary>
            The EVENT_TRACE_LOGFILE structure stores information about a trace data source.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_trace_logfilew
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.LogFileName">
            LPWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.LoggerName">
            LPWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.CurrentTime">
            LONGLONG->__int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.BuffersRead">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.Union1">
            Anonymous_bd8036bd_5232_4556_8314_15a6ac04a086
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.CurrentEvent">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.LogfileHeader">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.BufferCallback">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.BufferSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.Filled">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.EventsLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.Union2">
            Anonymous_5fb9dbd4_7630_4c7b_871e_d5fb58a36749
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.IsKernelTrace">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILEW.Context">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILE_UNION1.LogFileMode">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILE_UNION1.ProcessTraceMode">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILE_UNION2.EventCallback">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_LOGFILE_UNION2.EventRecordCallback">
            HANDLE->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES">
            <summary>
            The EVENT_TRACE_PROPERTIES structure contains information about an event tracing session.
            You use this structure with APIs such as StartTrace and ControlTrace when defining, updating, or querying the properties of a session.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_trace_properties
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.Wnode">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.BufferSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.MinimumBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.MaximumBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.MaximumFileSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.LogFileMode">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.FlushTimer">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.EnableFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.Union1">
            Anonymous_749514f9_6262_4808_ac0e_ab05fcbe8a77
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.NumberOfBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.FreeBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.EventsLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.BuffersWritten">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.LogBuffersLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.RealTimeBuffersLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.LoggerThreadId">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.LogFileNameOffset">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES.LoggerNameOffset">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_UNION.AgeLimit">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_UNION.FlushThreshold">
            LONG->int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2">
            <summary>
            The EVENT_TRACE_PROPERTIES_V2 structure contains information about an event tracing session.
            You use this structure with APIs such as StartTrace and ControlTrace when defining, updating, or querying the properties of a session.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-event_trace_properties_v2
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.Wnode">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.BufferSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.MinimumBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.MaximumBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.MaximumFileSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.LogFileMode">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.FlushTimer">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.EnableFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.Union1">
            Anonymous_bd1c8239_26ab_4c61_bdaf_1c1b0de7b6b1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.NumberOfBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.FreeBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.EventsLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.BuffersWritten">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.LogBuffersLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.RealTimeBuffersLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.LoggerThreadId">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.LogFileNameOffset">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.LoggerNameOffset">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.Union2">
            Anonymous_a5d988d0_8027_4431_b0b6_3b0d218f9177
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.FilterDescCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.FilterDesc">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2.Union3">
            Anonymous_e0404ff5_96c5_4659_870d_c9cb4b676a69
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2_UNION1.AgeLimit">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2_UNION1.FlushThreshold">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2_UNION2.DUMMYSTRUCTNAME">
            Anonymous_f47e450d_fe95_4b45_856e_79b73aab6100
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2_UNION2.V2Control">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2_UNION2_DUMMY.bitvector1">
            VersionNumber : 8
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2_UNION3.DUMMYSTRUCTNAME">
            Anonymous_d48d7f12_7a98_43bd_966a_a298a961feee
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2_UNION3.V2Options">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EVENT_TRACE_PROPERTIES_V2_UNION3_DUMMY.bitvector1">
             Wow : 1
            QpcDeltaTracking : 1
            LargeMdlPages : 1
            ExcludeKernelStack : 1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXCEPTION_DEBUG_INFO.ExceptionRecord">
            EXCEPTION_RECORD->_EXCEPTION_RECORD
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXCEPTION_DEBUG_INFO.dwFirstChance">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXCEPTION_RECORD.ExceptionCode">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXCEPTION_RECORD.ExceptionFlags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXCEPTION_RECORD.ExceptionRecord">
            _EXCEPTION_RECORD*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXCEPTION_RECORD.ExceptionAddress">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXCEPTION_RECORD.NumberParameters">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXCEPTION_RECORD.ExceptionInformation">
            ULONG_PTR[15]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXIT_PROCESS_DEBUG_INFO.dwExitCode">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXIT_THREAD_DEBUG_INFO.dwExitCode">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_A">
            <summary>
            The EXPLICIT_ACCESS structure defines access control information for a specified trustee.
            Access control functions, such as SetEntriesInAcl and GetExplicitEntriesFromAcl,
            use this structure to describe the information in an access control entry(ACE) of an access control list (ACL).
            https://learn.microsoft.com/en-us/windows/win32/api/accctrl/ns-accctrl-explicit_access_a
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_A.grfAccessPermissions">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_A.grfAccessMode">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_A.grfInheritance">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_A.Trustee">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_W.grfAccessPermissions">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_W.grfAccessMode">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_W.grfInheritance">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXPLICIT_ACCESS_W.Trustee">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EXTENDED_CREATE_INFORMATION">
            <summary>
            The EXTENDED_CREATE_INFORMATION structure is the EaBuffer field in NtCreateFile 
            when the FILE_CONTAINS_EXTENDED_CREATE_INFORMATION flag is set in NtCreateFile's CreateOption parameter.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-extended_create_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXTENDED_CREATE_INFORMATION.ExtendedCreateFlags">
            <summary>
            Flags for the extended create. ExtendedCreateFlags can be one of the following values. 
            When either of these flags are specified, 
            NtCreateFile's file object is marked as opened for copy intent in its FileObjectExtension. 
            Filters can check for this stored state by calling IoCheckFileObjectOpenedAsCopySource or IoCheckFileObjectOpenedAsCopyDestination
            
            EX_CREATE_FLAG_FILE_SOURCE_OPEN_FOR_COPY    0x00000001  Signals that the file is being opened as the source file for a file copy.
            EX_CREATE_FLAG_FILE_DEST_OPEN_FOR_COPY      0x00000002  Signals that the file is being opened as the destination file for a file copy.
            
            The presence of one of the above flags is not enough to ensure that read/writes (I/O operations) on the file object are trustworthy, 
            as any user-mode process can provide these flags at create time.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXTENDED_CREATE_INFORMATION.EaBuffer">
            <summary>
            Pointer to the extended attributes buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXTENDED_CREATE_INFORMATION.EaLength">
            <summary>
            Length of the buffer that EaBuffer points to.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EXTENDED_CREATE_INFORMATION_32">
            <summary>
            Describes the 32-bit version of the EXTENDED_CREATE_INFORMATION structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-extended_create_information_32
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXTENDED_CREATE_INFORMATION_32.ExtendedCreateFlags">
            <summary>
            Defines the LONGLONG member ExtendedCreateFlags.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXTENDED_CREATE_INFORMATION_32.EaBuffer">
            <summary>
            Defines the void* POINTER_32 member EaBuffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXTENDED_CREATE_INFORMATION_32.EaLength">
            <summary>
            Defines the ULONG member EaLength.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EXT_DELETE_PARAMETERS">
            <summary>
            The EXT_DELETE_PARAMETERS structure contains an extended set of parameters for the ExDeleteTimer routine.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ext_delete_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXT_DELETE_PARAMETERS.Version">
            <summary>
            The version number of this EXT_DELETE_PARAMETERS structure. 
            The ExInitializeDeleteTimerParameters routine sets this member to the correct version number.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXT_DELETE_PARAMETERS.Reserved">
            <summary>
            Set to zero. The ExInitializeDeleteTimerParameters routine sets this member to zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXT_DELETE_PARAMETERS.DeleteCallback">
            <summary>
            A pointer to a driver-implemented ExTimerDeleteCallback callback routine. 
            The operating system calls this routine when the timer is deleted. 
            This parameter is optional and can be NULL if no timer-deletion callback routine is needed.
            
            The ExInitializeDeleteTimerParameters routine sets this member to NULL.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXT_DELETE_PARAMETERS.DeleteContext">
            <summary>
            A context value for the timer-deletion callback routine. 
            The operating system passes this value as a parameter to the timer-deletion callback routine, 
            if one is specified. This parameter is typically a pointer to a caller-defined structure that contains context information used by the callback routine. 
            This parameter is optional and can be set to NULL if no context information is needed.
            The ExInitializeDeleteTimerParameters routine sets this member to NULL.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.EXT_SET_PARAMETERS">
            <summary>
            The EXT_SET_PARAMETERS structure contains an extended set of parameters for the ExSetTimer routine.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ext_set_parameters_v0
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXT_SET_PARAMETERS.Version">
            <summary>
            The version number of this EXT_SET_PARAMETERS structure. 
            The ExInitializeSetTimerParameters routine sets this member to the correct version number.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXT_SET_PARAMETERS.Reserved">
            <summary>
            Set to zero. 
            The ExInitializeSetTimerParameters routine sets this member to zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.EXT_SET_PARAMETERS.NoWakeTolerance">
            <summary>
            The maximum time, in system time units (100-nanosecond intervals), 
            that the timer can wait to wake the processor after the timer reaches its expiration time. 
            Only after the processor wakes can the timer expire. 
            If a timer is set to expire when the processor is in a low-power state, 
            the timer will not wake the processor to expire until the expiration time plus the NoWakeTolerance delay is exceeded. As an option, a driver can set this member to EX_TIMER_UNLIMITED_TOLERANCE, which indicates that the timer never wakes the processor and, thus, cannot expire until the processor wakes for some other reason.
            
            Do not set this member to a negative value (other than EX_TIMER_UNLIMITED_TOLERANCE). 
            Otherwise, the routine bug checks.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILETIME">
            <summary>
            Contains a 64-bit value representing the number of 100-nanosecond intervals since January 1, 1601 (UTC).
            https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-filetime
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILETIME.dwLowDateTime">
            <summary>
            The low-order part of the file time.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILETIME.dwHighDateTime">
            <summary>
            The high-order part of the file time.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_BASIC_INFORMATION">
            <summary>
            The FILE_BASIC_INFORMATION structure contains timestamps and basic attributes of a file. 
            It is used as an argument to routines that query or set file information.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_basic_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_BASIC_INFORMATION.CreationTime">
            <summary>
            Specifies the time that the file was created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_BASIC_INFORMATION.LastAccessTime">
            <summary>
            Specifies the time that the file was last accessed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_BASIC_INFORMATION.LastWriteTime">
            <summary>
            Specifies the time that the file was last written to.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_BASIC_INFORMATION.ChangeTime">
            <summary>
            Specifies the last time the file was changed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_BASIC_INFORMATION.FileAttributes">
            <summary>
            Specifies one or more FILE_ATTRIBUTE_XXX flags. 
            For descriptions of these flags, see File Attribute Constants in the Microsoft Windows SDK.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_FS_DEVICE_INFORMATION">
            <summary>
            The FILE_FS_DEVICE_INFORMATION structure provides file system device information about the type of device object associated with a file object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_fs_device_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_FS_DEVICE_INFORMATION.DeviceType">
            <summary>
            Set when a driver calls IoCreateDevice as appropriate for the type of underlying device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_FS_DEVICE_INFORMATION.Characteristics">
            <summary>
            The device characteristics.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_FULL_EA_INFORMATION">
            <summary>
            The FILE_FULL_EA_INFORMATION structure provides extended attribute (EA) information.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_full_ea_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_FULL_EA_INFORMATION.NextEntryOffset">
            <summary>
            The offset of the next FILE_FULL_EA_INFORMATION-type entry. 
            This member is zero if no other entries follow this one.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_FULL_EA_INFORMATION.Flags">
            <summary>
            Can be zero or can be set with FILE_NEED_EA, 
            indicating that the file to which the EA belongs cannot be interpreted without understanding 
            the associated extended attributes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_FULL_EA_INFORMATION.EaNameLength">
            <summary>
            The length in bytes of the EaName array. 
            This value does not include a null-terminator to EaName.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_FULL_EA_INFORMATION.EaValueLength">
            <summary>
            The length in bytes of each EA value in the array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_FULL_EA_INFORMATION.EaName">
            <summary>
            An array of characters naming the EA for this entry.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_IO_PRIORITY_HINT_INFORMATION">
            <summary>
            The FILE_IO_PRIORITY_HINT_INFORMATION structure is used by the ZwQueryInformationFile and ZwSetInformationFile routines 
            to query and set the default IRP priority hint for requests on the specified file handle.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_io_priority_hint_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_IO_PRIORITY_HINT_INFORMATION.PriorityHint">
            <summary>
            Specifies the IO_PRIORITY_HINT value that indicates the priority hint for a file handle.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_IS_REMOTE_DEVICE_INFORMATION">
            <summary>
            The FILE_IS_REMOTE_DEVICE_INFORMATION structure is used as an argument to the ZwQueryInformationFile routine.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_is_remote_device_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_IS_REMOTE_DEVICE_INFORMATION.IsRemote">
            <summary>
            A value that indicates whether the file system that contains the file is a remote file system.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_NETWORK_OPEN_INFORMATION">
            <summary>
            The FILE_NETWORK_OPEN_INFORMATION structure is used as an argument to ZwQueryInformationFile.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_network_open_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_NETWORK_OPEN_INFORMATION.CreationTime">
            <summary>
            Specifies the time that the file was created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_NETWORK_OPEN_INFORMATION.LastAccessTime">
            <summary>
            Specifies the time that the file was last accessed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_NETWORK_OPEN_INFORMATION.LastWriteTime">
            <summary>
            Specifies he time that the file was last written to.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_NETWORK_OPEN_INFORMATION.ChangeTime">
            <summary>
            Specifies the time that the file was last changed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_NETWORK_OPEN_INFORMATION.AllocationSize">
            <summary>
            Specifies the file allocation size, in bytes. 
            Usually, this value is a multiple of the sector or cluster size of the underlying physical device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_NETWORK_OPEN_INFORMATION.EndOfFile">
            <summary>
            Specifies the absolute end-of-file position as a byte offset from the start of the file. 
            EndOfFile specifies the byte offset to the end of the file. 
            Because this value is zero-based, it actually refers to the first free byte in the file. 
            In other words, EndOfFile is the offset to the byte immediately following the last valid byte in the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_NETWORK_OPEN_INFORMATION.FileAttributes">
            <summary>
            Specifies one or more FILE_ATTRIBUTE_XXX flags. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT">
            <summary>
            The FILE_OBJECT structure is used by the system to represent a file object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_object
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.Type">
            <summary>
            A read-only member used by the system to indicate that the object is a file object. 
            If the object is a file object, the value of this member is 5.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.Size">
            <summary>
            A read-only member that specifies the size, in bytes, of the file object. 
            This size does not include the file object extension, if one is present.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.DeviceObject">
            <summary>
            A pointer to the device object on which the file is opened.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.Vpb">
            <summary>
            A pointer to the volume parameter block associated with the file object.
            Note that if the Vpb member is non-NULL, the file resides on a mounted volume.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.FsContext">
            <summary>
            A pointer to whatever optional state a driver maintains about the file object; 
            otherwise, NULL. For file system drivers, 
            this member must point to a FSRTL_ADVANCED_FCB_HEADER header structure that is contained within a file-system-specific structure; 
            otherwise system instability can result. Usually, 
            this header structure is embedded in a file control block (FCB). 
            However, on some file systems that support multiple data streams, such as NTFS, this header structure is a stream control block (SCB).
            
            In a WDM device stack, only the functional device object (FDO) can use the two context pointers. 
            File system drivers share this member across multiple opens to the same data stream.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.FsContext2">
            <summary>
            A pointer to whatever additional state a driver maintains about the file object; otherwise, NULL.
            This member is opaque for drivers in the file system stack because the underlying file system utilizes this member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.SectionObjectPointer">
            <summary>
            A pointer to the file object's read-only section object. 
            This member is set only by file systems and used for Cache Manager interaction.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.PrivateCacheMap">
            <summary>
            An opaque member, set only by file systems, 
            that points to handle-specific information and that is used for Cache Manager interaction.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.FinalStatus">
            <summary>
            A read-only member that is used, in certain synchronous cases, to indicate the final status of the file object's I/O request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.RelatedFileObject">
            <summary>
            A pointer to a FILE_OBJECT structure used to indicate that the current file object has been opened relative to an already open file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.LockOperation">
            <summary>
            A read-only member. If FALSE, a lock operation (NtLockFile) has never been performed on the file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.DeletePending">
            <summary>
            A read-only member. If TRUE, a delete operation for the file associated with the file object exists. 
            If FALSE, there currently is no pending delete operation for the file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.ReadAccess">
            <summary>
            A read-only member. If TRUE, the file associated with the file object has been opened for read access. If FALSE, the file has been opened without read access. 
            This information is used when checking and/or setting the share access of the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.WriteAccess">
            <summary>
            A read-only member. If TRUE, the file associated with the file object has been opened for write access. If FALSE, the file has been opened without write access. 
            This information is used when checking and/or setting the share access of the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.DeleteAccess">
            <summary>
            A read-only member. 
            If TRUE, the file associated with the file object has been opened for delete access. 
            If FALSE, the file has been opened without delete access. 
            This information is used when checking and/or setting the share access of the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.SharedRead">
            <summary>
            A read-only member. 
            If TRUE, the file associated with the file object has been opened for read sharing access. 
            If FALSE, the file has been opened without read sharing access. 
            This information is used when checking and/or setting the share access of the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.SharedWrite">
            <summary>
            A read-only member. 
            If TRUE, the file associated with the file object has been opened for write sharing access. 
            If FALSE, the file has been opened without write sharing access. 
            This information is used when checking and/or setting the share access of the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.SharedDelete">
            <summary>
            A read-only member. 
            If TRUE, the file associated with the file object has been opened for delete sharing access. 
            If FALSE, the file has been opened without delete sharing access. 
            This information is used when checking and/or setting the share access of the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.Flags">
            <summary>
            A read-only member used by the system to hold one or more (a bitwise inclusive OR combination) of the following private flag values.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.FileName">
            <summary>
            A UNICODE_STRING structure whose Buffer member points to a read-only Unicode string that holds the name of the file opened on the volume.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.CurrentByteOffset">
            <summary>
            A read-only member that specifies the file offset, in bytes, associated with the file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.Waiters">
            <summary>
            A read-only member used by the system to count the number of outstanding waiters on a file object opened for synchronous access.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.Busy">
            <summary>
            A read-only member used by the system to indicate whether a file object opened for synchronous access is currently busy.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.LastLock">
            <summary>
            An opaque pointer to the last lock applied to the file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.Lock">
            <summary>
            An opaque member used by the system to hold a file object event lock. 
            The event lock is used to control synchronous access to the file object. 
            Applicable only to file objects that are opened for synchronous access.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.Event">
            <summary>
            An opaque member used by the system to hold an event object for the file object. 
            The event object is used to signal the completion of an I/O request on the file object if no user event was supplied or a synchronous API was called.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.CompletionContext">
            <summary>
            An opaque pointer to completion port information (port pointer and key) associated with the file object, if any.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.IrpListLock">
            <summary>
            An opaque pointer to a KSPIN_LOCK structure that serves as the spin lock used to synchronize access to the file object's IRP list.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.IrpList">
            <summary>
            An opaque pointer to the head of the IRP list associated with the file object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_OBJECT.FileObjectExtension">
            <summary>
            An opaque pointer to the file object's file object extension (FOBX) structure. 
            The FOBX structure contains various opaque contexts used internally as well as the per-file object contexts available through FsRtlXxx routines.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_POSITION_INFORMATION">
            <summary>
            The FILE_POSITION_INFORMATION structure is used as an argument to routines that query or set file information.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_position_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_POSITION_INFORMATION.CurrentByteOffset">
            <summary>
            The byte offset of the current file pointer.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FILE_STANDARD_INFORMATION">
            <summary>
            The FILE_STANDARD_INFORMATION structure is used as an argument to routines that query or set file information.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_file_standard_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_STANDARD_INFORMATION.AllocationSize">
            <summary>
            The file allocation size in bytes. 
            Usually, this value is a multiple of the sector or cluster size of the underlying physical device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_STANDARD_INFORMATION.EndOfFile">
            <summary>
            The end of file location as a byte offset.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_STANDARD_INFORMATION.NumberOfLinks">
            <summary>
            The number of hard links to the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_STANDARD_INFORMATION.DeletePending">
            <summary>
            The delete pending status. TRUE indicates that a file deletion has been requested.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FILE_STANDARD_INFORMATION.Directory">
            <summary>
            The file directory status. TRUE indicates the file object represents a directory.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE">
            <summary>
            Reserved for future use.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_fpga_control_interface
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.Size">
            <summary>
            The size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.Version">
            <summary>
            The driver-defined interface version. 
            The current version of this interface is FPGA_CONTROL_INTERFACE_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.Context">
            <summary>
            A pointer to interface-specific context information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.InterfaceReference">
            <summary>
            A pointer to an InterfaceReference routine that increments the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.InterfaceDereference">
            <summary>
            A pointer to an InterfaceDereference routine that decrements the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.BusScan">
            <summary>
            A pointer to a FPGA_BUS_SCAN callback function that triggers a bus scan at the parent of the FPGA device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.ControlLink">
            <summary>
            A pointer to a FPGA_CONTROL_LINK callback function that enables or disables the link between the given FPGA device and its parent bridge.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.ControlConfigSpace">
            <summary>
            A pointer to a FPGA_CONTROL_CONFIG_SPACE callback function that enables or disables the access to the configuration space of the FPGA device.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FPGA_CONTROL_INTERFACE.ControlErrorReporting">
            <summary>
            A pointer to a FPGA_CONTROL_ERROR_REPORTING callback function that toggles the error reporting for the FPGA device and its parent bridge.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.FUNCTION_LEVEL_DEVICE_RESET_PARAMETERS">
            <summary>
            The FUNCTION_LEVEL_DEVICE_RESET_PARAMETER structure is 
            used as an argument to the DeviceReset routine of the GUID_DEVICE_RESET_INTERFACE_STANDARD interface.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_function_level_device_reset_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FUNCTION_LEVEL_DEVICE_RESET_PARAMETERS.Size">
            <summary>
            The size, in bytes, of this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FUNCTION_LEVEL_DEVICE_RESET_PARAMETERS.DeviceResetCompletion">
            <summary>
            Pointer to a completion callback routine to be called when a function-level device reset is completed. 
            The callback must enter and exit at the same IRQL.
            
            The function prototype for this callback routine is defined as follows:
            VOID (*PDEVICE_RESET_COMPLETION)(
                _In_ NTSTATUS Status,
                _Inout_opt_ PVOID Context);
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.FUNCTION_LEVEL_DEVICE_RESET_PARAMETERS.CompletionContext">
            <summary>
            Points to a caller-supplied context structure to be passed to the DeviceResetCompletion callback.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING">
            <summary>
            The GENERIC_MAPPING structure describes the ACCESS_MASK value of specific access rights associated with each type of generic access right.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING.GenericRead">
            <summary>
            Describes the specific access rights corresponding to the GENERIC_READ access right.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING.GenericWrite">
            <summary>
            Describes the specific access rights corresponding to the GENERIC_WRITE access right.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING.GenericExecute">
            <summary>
            Describes the specific access rights corresponding to the GENERIC_EXECUTE access right.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GENERIC_MAPPING.GenericAll">
            <summary>
            Describes the specific access rights corresponding to the GENERIC_ALL access right.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUID.Data1">
            unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUID.Data2">
            unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUID.Data3">
            unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUID.Data4">
            unsigned char[8]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO">
            <summary>
            Contains information about a GUI thread.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-guithreadinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.flags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.hwndActive">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.hwndFocus">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.hwndCapture">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.hwndMenuOwner">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.hwndMoveSize">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.hwndCaret">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.GUITHREADINFO.rcCaret">
            RECT->tagRECT
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HEAP_SUMMARY">
            <summary>
            Represents a heap summary retrieved with a call to HeapSummary
            https://learn.microsoft.com/en-us/windows/win32/api/heapapi/ns-heapapi-heap_summary
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HEAP_SUMMARY.cb">
            <summary>
            The size of this data structure, in bytes. Set this member to sizeof(HEAP_SUMMARY).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HEAP_SUMMARY.cbAllocated">
            <summary>
            The size of the allocated memory.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HEAP_SUMMARY.cbCommitted">
            <summary>
            The size of the committed memory.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HEAP_SUMMARY.cbReserved">
            <summary>
            The size of the reserved memory.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HEAP_SUMMARY.cbMaxReserve">
            <summary>
            The size of the maximum reserved memory.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTPAPI_VERSION">
            <summary>
            The HTTPAPI_VERSION structure defines the version of the HTTP Server API.
            This is not to be confused with the version of the HTTP protocol used, which is stored in an HTTP_VERSION structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-httpapi_version
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTPAPI_VERSION.HttpApiMajorVersion">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTPAPI_VERSION.HttpApiMinorVersion">
            USHORT->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_BANDWIDTH_LIMIT_INFO">
            <summary>
            The HTTP_BANDWIDTH_LIMIT_INFO structure is used to set or query the bandwidth throttling limit.
            This structure must be used when setting or querying the HttpServerBandwidthProperty on a URL Group or server session.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_bandwidth_limit_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_BANDWIDTH_LIMIT_INFO.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_BANDWIDTH_LIMIT_INFO.MaxBandwidth">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_BINDING_INFO">
            <summary>
            The HTTP_BINDING_INFO structure is used to associate a URL Group with a request queue.
            This structure must be used when setting or querying the HttpServerBindingProperty on a URL Group.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_binding_info
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_BYTE_RANGE">
            <summary>
            The HTTP_BYTE_RANGE structure is used to specify a byte range within a cached response fragment, file, or other data block.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_byte_range
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_BYTE_RANGE.StartingOffset">
            ULARGE_INTEGER->_ULARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_BYTE_RANGE.Length">
            ULARGE_INTEGER->_ULARGE_INTEGER
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_CACHE_POLICY">
            <summary>
            The HTTP_CACHE_POLICY structure is used to define a cache policy associated with a cached response fragment.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_cache_policy
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_CACHE_POLICY.Policy">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_CACHE_POLICY.SecondsToLive">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_CHANNEL_BIND_INFO">
            <summary>
            The HTTP_CHANNEL_BIND_INFO structure is used to set or query channel bind authentication.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_channel_bind_info
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_CONNECTION_LIMIT_INFO">
            <summary>
            The HTTP_CONNECTION_LIMIT_INFO structure is used to set or query the limit on the maximum number of outstanding connections for a URL Group.
            This structure must be used when setting or querying the HttpServerConnectionsProperty on a URL Group.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_connection_limit_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_CONNECTION_LIMIT_INFO.Flags">
            <summary>
            The HTTP_PROPERTY_FLAGS structure specifying whether the property is present.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_CONNECTION_LIMIT_INFO.MaxConnections">
            <summary>
            The number of connections allowed. Setting this value to HTTP_LIMIT_INFINITE allows an unlimited number of connections.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL">
            <summary>
            The HTTP_COOKED_URL structure contains a validated, canonical, UTF-16 Unicode-encoded URL request string together with pointers into it and element lengths.
            This is the string that the HTTP Server API matches against registered UrlPrefix strings in order to route the request appropriately.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_cooked_url
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL.FullUrlLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL.HostLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL.AbsPathLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL.QueryStringLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL.pFullUrl">
            PCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL.pHost">
            PCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL.pAbsPath">
            PCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_COOKED_URL.pQueryString">
            PCWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK">
            <summary>
            The HTTP_DATA_CHUNK structure represents an individual block of data either in memory, in a file, or in the HTTP Server API response-fragment cache.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_data_chunk
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK.DataChunkType">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK.Union1">
            Anonymous_2874442d_10e2_4db6_a93b_941bc88da8a1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_UNION.FromMemory">
            Anonymous_f39e7408_b244_4c19_82d6_e160a8461df0
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_UNION.FromFileHandle">
            Anonymous_6b2e8af6_cf71_4053_994c_b4a88166ea7a
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_UNION.FromFragmentCache">
            Anonymous_85406a61_62a8_4eb6_8f68_99975cdf9989
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_UNION.FromFragmentCacheEx">
            Anonymous_abf5fa5e_0fd1_46cb_ac4d_ff4af89a58d2
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_UNION.Trailers">
            Anonymous_3e4042da_b2cc_434e_ad04_9cfb0fa1ed64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_FROMMEMORY.pBuffer">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_FROMMEMORY.BufferLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_FROMFILEHANDLE.ByteRange">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_FROMFILEHANDLE.FileHandle">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_FROMFRAGMENTCACHE.FragmentNameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_FROMFRAGMENTCACHE.pFragmentName">
            PCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_FROMFRAGMENTCACHEEX.ByteRange">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_FROMFRAGMENTCACHEEX.pFragmentName">
            PCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_TRAILERS.TrailerCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DATA_CHUNK_TRAILERS.pTrailers">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DELEGATE_REQUEST_PROPERTY_INFO">
            <summary>
            Describes additional property information when delegating a request.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_delegate_request_property_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DELEGATE_REQUEST_PROPERTY_INFO.PropertyId">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DELEGATE_REQUEST_PROPERTY_INFO.PropertyInfoLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_DELEGATE_REQUEST_PROPERTY_INFO.PropertyInfo">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_FLOWRATE_INFO">
            <summary>
            The transfer rate of a response
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_flowrate_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_FLOWRATE_INFO.Flags">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_FLOWRATE_INFO.MaxBandwidth">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_FLOWRATE_INFO.MaxPeakBandwidth">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_FLOWRATE_INFO.BurstSize">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_KNOWN_HEADER">
            <summary>
            The HTTP_KNOWN_HEADER structure contains the header values for a known header from an HTTP request or HTTP response.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_known_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_KNOWN_HEADER.RawValueLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_KNOWN_HEADER.pRawValue">
            PCSTR->CHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LISTEN_ENDPOINT_INFO">
            <summary>
            Controls whether IP-based URLs should listen on the specific IP address or on a wildcard.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_listen_endpoint_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LISTEN_ENDPOINT_INFO.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LISTEN_ENDPOINT_INFO.EnableSharing">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO">
            <summary>
            The HTTP_LOGGING_INFO structure is used to enable server side logging on a URL Group or on a server session.
            This structure must be used when setting or querying the HttpServerLoggingProperty on a URL Group or server session.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_logging_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.LoggingFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.SoftwareName">
            PCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.SoftwareNameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.DirectoryNameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.DirectoryName">
            PCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.Format">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.Fields">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.pExtFields">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.NumOfExtFields">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.MaxRecordSize">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.RolloverType">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.RolloverSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOGGING_INFO.pSecurityDescriptor">
            PSECURITY_DESCRIPTOR->PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_DATA">
            <summary>
            The HTTP_LOG_DATA structure contains a value that specifies the type of the log data.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_log_data
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_DATA.Type">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA">
            <summary>
            The HTTP_LOG_FIELDS_DATA structure is used to pass the fields that are logged for an HTTP response when WC3 logging is enabled.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_log_fields_data
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.Base">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.UserNameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.UriStemLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ClientIpLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ServerNameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ServiceNameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ServerIpLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.MethodLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.UriQueryLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.HostLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.UserAgentLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.CookieLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ReferrerLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.UserName">
            PWCHAR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.UriStem">
            PWCHAR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ClientIp">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ServerName">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ServiceName">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ServerIp">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.Method">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.UriQuery">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.Host">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.UserAgent">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.Cookie">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.Referrer">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ServerPort">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.ProtocolStatus">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.Win32Status">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.MethodNum">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_LOG_FIELDS_DATA.SubStatus">
            USHORT->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_MULTIPLE_KNOWN_HEADERS">
            <summary>
            The HTTP_MULTIPLE_KNOWN_HEADERS structure specifies the headers that are included in an HTTP response when more than one header is required.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_multiple_known_headers
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_MULTIPLE_KNOWN_HEADERS.HeaderId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_MULTIPLE_KNOWN_HEADERS.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_MULTIPLE_KNOWN_HEADERS.KnownHeaderCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_MULTIPLE_KNOWN_HEADERS.KnownHeaders">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_PROPERTY_FLAGS">
            <summary>
            The HTTP_PROPERTY_FLAGS structure is used by the property configuration structures to enable or disable a property on a configuration object when setting property configurations.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_property_flags
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_PROPERTY_FLAGS.bit">
            val
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.HTTP_PROPERTY_FLAGS.Present">
            Present : 1
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_QOS_SETTING_INFO">
            <summary>
            The HTTP_QOS_SETTING_INFO structurecontains information about a QOS setting.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_qos_setting_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_QOS_SETTING_INFO.QosType">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_QOS_SETTING_INFO.QosSetting">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO">
            <summary>
            The HTTP_REQUEST_AUTH_INFO structure contains the authentication status of the request with a handle to the client token that the receiving process can use to impersonate the authenticated client.
            This structure is contained in the HTTP_REQUEST_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_request_auth_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.AuthStatus">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.SecStatus">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.AuthType">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.AccessToken">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.ContextAttributes">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.PackedContextLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.PackedContextType">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.PackedContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.MutualAuthDataLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.pMutualAuthData">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.PackageNameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_AUTH_INFO.pPackageName">
            PWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_CHANNEL_BIND_STATUS">
            <summary>
            The HTTP_REQUEST_CHANNEL_BIND_STATUS structure contains secure channel endpoint binding information.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_request_channel_bind_status
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_CHANNEL_BIND_STATUS.ServiceName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_CHANNEL_BIND_STATUS.ChannelToken">
            PUCHAR->UCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_CHANNEL_BIND_STATUS.ChannelTokenSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_CHANNEL_BIND_STATUS.Flags">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_HEADERS">
            <summary>
            The HTTP_REQUEST_HEADERS structure contains headers sent with an HTTP request.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_request_headers
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_HEADERS.UnknownHeaderCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_HEADERS.pUnknownHeaders">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_HEADERS.TrailerCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_HEADERS.pTrailers">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_HEADERS.KnownHeaders">
            ULONG[]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_INFO">
            <summary>
            The HTTP_REQUEST_INFO structure extends the HTTP_REQUEST structure with additional information about the request.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_request_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_INFO.InfoType">
            <summary>
            A member of the HTTP_REQUEST_INFO_TYPE enumeration specifying the type of information contained in this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_INFO.InfoLength">
            <summary>
            The length, in bytes, of the pInfo member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_INFO.pInfo">
            <summary>
            A pointer to the HTTP_REQUEST_AUTH_INFO structure when the InfoType member is HttpRequestInfoTypeAuth; otherwise NULL.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_PROPERTY_STREAM_ERROR">
            <summary>
            The HTTP_REQUEST_PROPERTY_STREAM_ERROR structure represents an HTTP/2 or HTTP/3 stream error code.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_request_property_stream_error
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_PROPERTY_STREAM_ERROR.ErrorCode">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1">
            <summary>
            Uses the HTTP_REQUEST structure to return data associated with a specific request.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_request_v1
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.ConnectionId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.RequestId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.UrlContext">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.Verb">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.UnknownVerbLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.RawUrlLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.pUnknownVerb">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.pRawUrl">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.CookedUrl">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.Address">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.Headers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.BytesReceived">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.EntityChunkCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.pEntityChunks">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.RawConnectionId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V1.pSslInfo">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2">
            <summary>
            The HTTP_REQUEST_V2 structure extends the HTTP_REQUEST_V1 request structure with more information about the request.
            Do not use HTTP_REQUEST_V2 directly in your code; use HTTP_REQUEST instead to ensure that the proper version, based on the operating system the code is compiled under, is used.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_request_v2
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.ConnectionId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.RequestId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.UrlContext">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.Verb">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.UnknownVerbLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.RawUrlLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.pUnknownVerb">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.pRawUrl">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.CookedUrl">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.Address">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.Headers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.BytesReceived">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.EntityChunkCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.pEntityChunks">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.RawConnectionId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_REQUEST_V2.pSslInfo">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1">
            <summary>
            The HTTP_RESPONSE_V1 structure contains data associated with an HTTP response.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_response_v1
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1.StatusCode">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1.ReasonLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1.pReason">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1.Headers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1.EntityChunkCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V1.pEntityChunks">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.StatusCode">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.ReasonLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.pReason">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.Headers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.EntityChunkCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.pEntityChunks">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.ResponseInfoCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_V2.pResponseInfo">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_HEADERS">
            <summary>
            The HTTP_RESPONSE_HEADERS structure contains the headers sent with an HTTP response.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_response_headers
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_HEADERS.UnknownHeaderCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_HEADERS.pUnknownHeaders">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_HEADERS.TrailerCount">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_HEADERS.pTrailers">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_HEADERS.KnownHeaders">
            PVOID[]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_INFO">
            <summary>
            The HTTP_RESPONSE_INFO structure extends the HTTP_RESPONSE structure with additional information for the response.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_response_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_INFO.Type">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_INFO.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_RESPONSE_INFO.pInfo">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_BASIC_PARAMS">
            <summary>
            The HTTP_SERVER_AUTHENTICATION_BASIC_PARAMS structure contains the information for Basic authentication on a URL Group.
            This structure is contained in the HTTP_SERVER_AUTHENTICATION_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_server_authentication_basic_params
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_BASIC_PARAMS.RealmLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_BASIC_PARAMS.Realm">
            PWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_DIGEST_PARAMS">
            <summary>
            The HTTP_SERVER_AUTHENTICATION_DIGEST_PARAMS structure contains the information for digest authentication on a URL Group.
            This structure is contained in the HTTP_SERVER_AUTHENTICATION_INFO structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_server_authentication_digest_params
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_DIGEST_PARAMS.DomainNameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_DIGEST_PARAMS.DomainName">
            PWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_DIGEST_PARAMS.RealmLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_DIGEST_PARAMS.Realm">
            PWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO">
            <summary>
            The HTTP_SERVER_AUTHENTICATION_INFO structure is used to enable server-side authentication on a URL group or server session.
            This structure is also used to query the existing authentication schemes enabled for a URL group or server session.
            This structure must be used when setting or querying the HttpServerAuthenticationProperty on a URL group, or server session.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_server_authentication_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO.AuthSchemes">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO.ReceiveMutualAuth">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO.ReceiveContextHandle">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO.DisableNTLMCredentialCaching">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO.ExFlags">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO.DigestParams">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVER_AUTHENTICATION_INFO.BasicParams">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_A">
            <summary>
            The HTTP_SERVICE_BINDING_A structure provides Service Principle Name (SPN) in ASCII.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_binding_a
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_A.Base">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_A.Buffer">
            PCHAR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_A.BufferSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_W.Base">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_W.Buffer">
            PWCHAR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_W.BufferSize">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_BASE">
            <summary>
            The HTTP_SERVICE_BINDING_BASE structure is a placeholder for the HTTP_SERVICE_BINDING_A structure and the HTTP_SERVICE_BINDING_W structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_binding_base
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_BINDING_BASE.Type">
            <summary>
            Pointer to an HTTP_SERVICE_BINDING_TYPE value that indicates whether the data is in ASCII or Unicode.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_CACHE_SET">
            <summary>
            Used in the pConfigInformation parameter of the HttpSetServiceConfiguration function.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_cache_set
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_CACHE_SET.KeyDesc">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_CACHE_SET.ParamDesc">
            HTTP_SERVICE_CONFIG_CACHE_PARAM
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_IP_LISTEN_PARAM">
            <summary>
            The HTTP_SERVICE_CONFIG_IP_LISTEN_PARAM structure is used to specify an IP address to be added to or deleted from the list of IP addresses to which the HTTP service binds.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ip_listen_param
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_IP_LISTEN_PARAM.AddrLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_IP_LISTEN_PARAM.pAddress">
            PSOCKADDR->sockaddr*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_IP_LISTEN_QUERY">
            <summary>
            The HTTP_SERVICE_CONFIG_IP_LISTEN_QUERY structure is used by HttpQueryServiceConfiguration to return a list of the Internet Protocol (IP) addresses to which the HTTP service binds.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ip_listen_query
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_IP_LISTEN_QUERY.AddrCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_IP_LISTEN_QUERY.AddrList">
            ULONG[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_CCS_KEY">
            <summary>
            Serves as the key by which identifies the SSL certificate record that specifies that Http.sys should consult the Centralized Certificate Store (CCS) store to find certificates if the port receives a Transport Layer Security (TLS) handshake.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_ccs_key
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_CCS_QUERY">
            <summary>
            Specifies a Secure Sockets Layer (SSL) configuration to query for an SSL Centralized Certificate Store (CCS) record on the port when you call the HttpQueryServiceConfiguration function.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_ccs_query
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_CCS_QUERY.QueryDesc">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_CCS_QUERY.KeyDesc">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_CCS_QUERY.dwToken">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_CCS_SET">
            <summary>
            Represents the SSL certificate record that specifies that Http.sys should consult the Centralized Certificate Store (CCS) store to find certificates if the port receives a Transport Layer Security (TLS) handshake. Use this structure to add, delete, retrieve, or update that SSL certificate.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_ccs_set
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_KEY">
            <summary>
            The HTTP_SERVICE_CONFIG_SSL_KEY structure serves as the key by which a given Secure Sockets Layer (SSL) certificate record is identified.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_key
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_KEY.pIpPort">
            <summary>
            Pointer to a sockaddr structure that contains the Internet Protocol (IP) address with which this SSL certificate is associated.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM">
            <summary>
            The HTTP_SERVICE_CONFIG_SSL_PARAM structure defines a record in the SSL configuration store.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_param
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.SslHashLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.pSslHash">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.AppId">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.pSslCertStoreName">
            PWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.DefaultCertCheckMode">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.DefaultRevocationFreshnessTime">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.DefaultRevocationUrlRetrievalTimeout">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.pDefaultSslCtlIdentifier">
            PWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.pDefaultSslCtlStoreName">
            PWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_PARAM.DefaultFlags">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_QUERY">
            <summary>
            The HTTP_SERVICE_CONFIG_SSL_QUERY structure is used to specify a particular record to query in the SSL configuration store.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_query
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_QUERY.QueryDesc">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_QUERY.KeyDesc">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_QUERY.dwToken">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SET">
            <summary>
            The HTTP_SERVICE_CONFIG_SSL_SET structure is used to add a new record to the SSL store or retrieve an existing record from it.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_set
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SNI_KEY">
            <summary>
            The HTTP_SERVICE_CONFIG_SSL_SNI_KEY structure serves as the key by which a given Secure Sockets Layer (SSL) Server Name Indication (SNI) certificate record
            is identified in the SSL SNI store. It appears in the HTTP_SERVICE_CONFIG_SSL_SNI_SET and the HTTP_SERVICE_CONFIG_SSL_SNI_QUERY structures,
            and is passed as the pConfigInformation parameter to HttpDeleteServiceConfiguration, HttpQueryServiceConfiguration,
            and HttpSetServiceConfiguration when the ConfigId parameter is set to HttpServiceConfigSslSniCertInfo.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_sni_key
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SNI_KEY.IpPort">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SNI_KEY.Host">
            PWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SNI_QUERY">
            <summary>
            The HTTP_SERVICE_CONFIG_SSL_SNI_QUERY structure is used to specify a particular Secure Sockets Layer (SSL) Server Name Indication (SNI) certificate record to query in the SSL SNI store. It is passed to the HttpQueryServiceConfiguration function using the pInputConfigInfo parameter when the ConfigId parameter is set to HttpServiceConfigSslSniCertInfo.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_sni_query
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SNI_QUERY.QueryDesc">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SNI_QUERY.KeyDesc">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SNI_QUERY.dwToken">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_SSL_SNI_SET">
            <summary>
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_ssl_sni_set
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_TIMEOUT_SET">
            <summary>
            The HTTP_SERVICE_CONFIG_TIMEOUT_SET structure is used to set the HTTP Server API wide timeout value.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_timeout_set
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_KEY">
            <summary>
            The HTTP_SERVICE_CONFIG_URLACL_KEY structure is used to specify a particular reservation record in the URL namespace reservation store.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_urlacl_key
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_KEY.pUrlPrefix">
            PWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_PARAM">
            <summary>
            The HTTP_SERVICE_CONFIG_URLACL_PARAM structure is used to specify the permissions associated with a particular record in the URL namespace reservation store.
            It is a member of the HTTP_SERVICE_CONFIG_URLACL_SET structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_urlacl_param
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_PARAM.pStringSecurityDescriptor">
            PWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_QUERY">
            <summary>
            The HTTP_SERVICE_CONFIG_URLACL_QUERY structure is used to specify a particular reservation record to query in the URL namespace reservation store.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_urlacl_query
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_QUERY.QueryDesc">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_QUERY.KeyDesc">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_QUERY.dwToken">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SERVICE_CONFIG_URLACL_SET">
            <summary>
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_service_config_urlacl_set
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_CLIENT_CERT_INFO">
            <summary>
            The HTTP_SSL_CLIENT_CERT_INFO structure contains data about a Secure Sockets Layer (SSL) client certificate that can be used to determine whether the certificate is valid.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_ssl_client_cert_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_CLIENT_CERT_INFO.CertFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_CLIENT_CERT_INFO.CertEncodedSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_CLIENT_CERT_INFO.pCertEncoded">
            PUCHAR->UCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_CLIENT_CERT_INFO.Token">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_CLIENT_CERT_INFO.CertDeniedByMapper">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO">
            <summary>
            The HTTP_SSL_INFO structure contains data for a connection that uses Secure Sockets Layer (SSL), obtained through the SSL handshake.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_ssl_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO.ServerCertKeySize">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO.ConnectionKeySize">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO.ServerCertIssuerSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO.ServerCertSubjectSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO.pServerCertIssuer">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO.pServerCertSubject">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO.pClientCertInfo">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_SSL_INFO.SslClientCertNegotiated">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_STATE_INFO">
            <summary>
            The HTTP_STATE_INFO structure is used to enable or disable a Server Session or URL Group.
            This structure must be used when setting or querying the HttpServerStateProperty on a URL Group or Server Session.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_state_info
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TIMEOUT_LIMIT_INFO">
            <summary>
            The HTTP_TIMEOUT_LIMIT_INFO structure defines the application-specific connection timeout limits.
            This structure must be used when setting or querying the HttpServerTimeoutsProperty on a URL Group, server session, or request queue.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_timeout_limit_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TIMEOUT_LIMIT_INFO.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TIMEOUT_LIMIT_INFO.EntityBody">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TIMEOUT_LIMIT_INFO.DrainEntityBody">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TIMEOUT_LIMIT_INFO.RequestQueue">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TIMEOUT_LIMIT_INFO.IdleConnection">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TIMEOUT_LIMIT_INFO.HeaderWait">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TIMEOUT_LIMIT_INFO.MinSendRate">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TRANSPORT_ADDRESS">
            <summary>
            The HTTP_TRANSPORT_ADDRESS structure specifies the addresses (local and remote) used for a particular HTTP connection.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_transport_address
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TRANSPORT_ADDRESS.pRemoteAddress">
            <summary>
            A pointer to the remote IP address associated with this connection.
            For more information about how to access this address, see the Remarks section.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_TRANSPORT_ADDRESS.pLocalAddress">
            <summary>
            A pointer to the local IP address associated with this connection.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_UNKNOWN_HEADER">
            <summary>
            The HTTP_UNKNOWN_HEADER structure contains the name and value for a header in an HTTP request or response whose name does not appear in the enumeration.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_unknown_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_UNKNOWN_HEADER.NameLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_UNKNOWN_HEADER.RawValueLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_UNKNOWN_HEADER.pName">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_UNKNOWN_HEADER.pRawValue">
            PCSTR->CHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HTTP_VERSION">
            <summary>
            The HTTP_VERSION structure defines a version of the HTTP protocol that a request requires or a response provides.
            This is not to be confused with the version of the HTTP Server API used, which is stored in an HTTPAPI_VERSION structure.
            https://learn.microsoft.com/en-us/windows/win32/api/http/ns-http-http_version
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_VERSION.MajorVersion">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HTTP_VERSION.MinorVersion">
            USHORT->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.HWPROFILE_CHANGE_NOTIFICATION">
            <summary>
            The HWPROFILE_CHANGE_NOTIFICATION structure describes an event related to a hardware profile configuration change. 
            The PnP manager sends this structure to a driver that registered a callback routine for notification of EventCategoryHardwareProfileChange events.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_hwprofile_change_notification
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HWPROFILE_CHANGE_NOTIFICATION.Version">
            <summary>
            Specifies the version of the data structure, currently 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HWPROFILE_CHANGE_NOTIFICATION.Size">
            <summary>
            Specifies the size of the structure, in bytes including the size of the standard first three members plus the event-specific data.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.HWPROFILE_CHANGE_NOTIFICATION.Event">
            <summary>
            Specifies a GUID identifying the event: GUID_HWPROFILE_QUERY_CHANGE, GUID_HWPROFILE_CHANGE_COMPLETE, or GUID_HWPROFILE_CHANGE_CANCELLED. 
            The GUIDs are defined in Wdmguid.h.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY">
            <summary>
            This structure is not supported.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_image_policy_entry
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY.Type">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY.PolicyId">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY.u">
            Anonymous_9c2f4c43_7c62_41b9_92fb_1fe2a2096564
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.None">
            void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.BoolValue">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.Int8Value">
            INT8->char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.UInt8Value">
            UINT8->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.Int16Value">
            INT16->short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.UInt16Value">
            UINT16->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.Int32Value">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.UInt32Value">
            UINT32->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.Int64Value">
            INT64->__int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.UInt64Value">
            UINT64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.AnsiStringValue">
            PCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_ENTRY_U.UnicodeStringValue">
            PCWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_METADATA">
            <summary>
            This structure is not supported.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_image_policy_metadata
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_METADATA.Version">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_METADATA.Reserved0">
            UCHAR[7]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_METADATA.ApplicationId">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IMAGE_POLICY_METADATA.Policies">
            DWORD[]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.INPUT_INJECTION_VALUE">
            <summary>
            Contains the input injection details.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-input_injection_value
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INPUT_INJECTION_VALUE.page">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INPUT_INJECTION_VALUE.usage">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INPUT_INJECTION_VALUE.value">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INPUT_INJECTION_VALUE.index">
            USHORT->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.INPUT_MAPPING_ELEMENT">
            <summary>
            Contains the input mapping IDs for a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_input_mapping_element
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INPUT_MAPPING_ELEMENT.InputMappingId">
            <summary>
            The input mapping ID for a device.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.INPUT_MESSAGE_SOURCE">
            <summary>
            Contains information about the source of the input message.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-input_message_source
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.INTERFACE">
            <summary>
            The INTERFACE structure describes an interface that is exported by a driver for use by other drivers.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_interface
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INTERFACE.Size">
            <summary>
            Size, in bytes, of a structure defining a driver interface, 
            including this structure and interface-specific members.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INTERFACE.Version">
            <summary>
            Driver-defined interface version.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INTERFACE.Context">
            <summary>
            Pointer to interface-specific context information.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INTERFACE.InterfaceReference">
            <summary>
            Pointer to a driver-supplied InterfaceReference routine that increments the interface's reference count.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.INTERFACE.InterfaceDereference">
            <summary>
            Pointer to a driver-supplied InterfaceDereference routine that decrements the interface's reference count.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION">
            <summary>
            IOMMU_DEVICE_CREATION_CONFIGURATION describes a configuration or list of configurations 
            to be used as part of creation and initialization of an IOMMU_DMA_DEVICE.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-iommu_device_creation_configuration
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION.NextConfiguration">
            <summary>
            Optional list to provide additional configurations.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION.ConfigType">
            <summary>
            An enum describing which configuration is represented. See IOMMU_DEVICE_CREATION_CONFIGURATION_TYPE.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION.Union1">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION_UNION.Acpi">
            <summary>
            If (ConfigType == IommuDeviceCreationConfigTypeAcpi), provides the input parameters necessary for device creation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION_UNION.DeviceId">
            <summary>
            Defines the PVOID member DeviceId.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION_ACPI">
            <summary>
            IOMMU_DEVICE_CREATION_CONFIGURATION_ACPI provides the ACPI-specific configuration parameters of a IOMMU_DEVICE_CREATION_CONFIGURATION structure, 
            which is provided for creation of an ACPI-type IOMMU_DMA_DEVICE.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-iommu_device_creation_configuration_acpi
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION_ACPI.InputMappingBase">
            <summary>
            Provides the input mapping base for the device's desired stream.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DEVICE_CREATION_CONFIGURATION_ACPI.MappingsCount">
            <summary>
            Provides the count of mappings beginning at the base.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_DOMAIN_CREATION_FLAGS">
            <summary>
            The IOMMU_DMA_DOMAIN_CREATION_FLAGS structure defines configuration flags for a domain being created by IOMMU_DOMAIN_CREATE_EX.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-iommu_dma_domain_creation_flags
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_DOMAIN_CREATION_FLAGS.u">
            <summary>
            All flags are currently reserved. This field must be zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_DOMAIN_CREATION_FLAGS.AsUlonglong">
            <summary>
            Represents all flags as a single ULONGLONG.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ADDRESS_TOKEN">
            <summary>
            The IOMMU_DMA_LOGICAL_ADDRESS_TOKEN represents a reserved contiguous logical address range created by IOMMU_RESERVE_LOGICAL_ADDRESS_RANGE. 
            Logical address tokens guarantee that the logical address represented has all of its associated page tables allocated ahead of time, 
            ensuring that future mappings to this region will not fail due to low memory conditions.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-iommu_dma_logical_address_token
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ADDRESS_TOKEN.LogicalAddressBase">
            <summary>
            Represents the base address of the logical address range.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ADDRESS_TOKEN.Size">
            <summary>
            Represents the size, in bytes, of the logical address range.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ADDRESS_TOKEN_MAPPED_SEGMENT">
            <summary>
            The IOMMU_DMA_LOGICAL_ADDRESS_TOKEN_MAPPED_SEGMENT represents a mapped portion of an IOMMU_DMA_LOGICAL_ADDRESS_TOKEN.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-iommu_dma_logical_address_token_mapped_segment
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ADDRESS_TOKEN_MAPPED_SEGMENT.OwningToken">
            <summary>
            Provides a pointer to the logical address token that this mapped segment belongs to.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ADDRESS_TOKEN_MAPPED_SEGMENT.Offset">
            <summary>
            The offset, in bytes, into the logical address token of the mapped region.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ADDRESS_TOKEN_MAPPED_SEGMENT.Size">
            <summary>
            The size, in bytes, of the mapped region within the logical address token.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ALLOCATOR_CONFIG">
            <summary>
            The IOMMU_DMA_LOGICAL_ALLOCATOR_CONFIG structure contains information required to configure a logical allocator.
            This structure is used by IOMMU_DOMAIN_CREATE_EX to create a logical allocator attached to the created [IOMMU_DMA_DOMAIN].
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-iommu_dma_logical_allocator_config
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ALLOCATOR_CONFIG.LogicalAllocatorType">
            <summary>
            An IOMMU_DMA_LOGICAL_ALLOCATOR_TYPE value that indicates the type of logical allocator to be created.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ALLOCATOR_CONFIG.Union1">
            Anonymous_cdfacc01_8934_419b_92a2_a22c6ed8d52f
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ALLOCATOR_CONFIG_UNION.BuddyAllocatorConfig">
            <summary>
            Provides configuration information specific to the HAL Buddy Allocator.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_LOGICAL_ALLOCATOR_CONFIG_WIDTH.AddressWidth">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_RESERVED_REGION">
            <summary>
            The IOMMU_DMA_RESERVED_REGION structure describes a region of memory that needs to be marked as reserved during domain creation. 
            This structure is used by IOMMU_DOMAIN_CREATE_EX.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-iommu_dma_reserved_region
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_RESERVED_REGION.RegionNext">
            <summary>
            Provides a pointer to the next reserved region.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_RESERVED_REGION.Base">
            <summary>
            Provides the base address of the region to be reserved. Must be page-aligned.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_RESERVED_REGION.NumberOfPages">
            <summary>
            Provides the number of pages to be reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_DMA_RESERVED_REGION.ShouldMap">
            <summary>
            Provides whether the reserved region should be identity mapped. 
            If not, the region will not be mapped into the domain's page table at all.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_INTERFACE_STATE_CHANGE_FIELDS">
            <summary>
            IOMMU_INTERFACE_STATE_CHANGE_FIELDS represents the fields of an IOMMU_INTERFACE_STATE_CHANGE, 
            indicating the caller's wish to be notified of a change of a specific state field(s) or indicating to callback owners which states have changed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_INTERFACE_STATE_CHANGE_FIELDS.DUMMYSTRUCTNAME">
            <summary>
            various states of an IOMMU interface.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_INTERFACE_STATE_CHANGE_FIELDS.AsULONG">
            <summary>
            The consolidated values of the fields in DUMMYSTRUCTNAME.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_INTERFACE_STATE_CHANGE_FIELDS_DUMMY">
            <summary>
            A structure containing various states of an IOMMU interface.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_INTERFACE_STATE_CHANGE_FIELDS_DUMMY.AvailableDomainTypes">
            <summary>
            When set to 1, this indicates that the caller wants to be notified (via the provided callback) 
            when the available domain types change or this indicates to callback owners that the available domain types have changed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_INTERFACE_STATE_CHANGE_FIELDS_DUMMY.Reserved">
            <summary>
            Reserved for future fields. Currently unused.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS">
            <summary>
            The IOMMU_MAP_PHYSICAL_ADDRESS represents a physical address that is to be mapped to a logical address. 
            It is used by IOMMU_MAP_LOGICAL_RANGE_EX and IOMMU_MAP_IDENTITY_RANGE_EX.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-iommu_map_physical_address
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS.MapType">
            <summary>
            A IOMMU_MAP_PHYSICAL_ADDRESS_TYPE value that indicates the format the physical address is represented in.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS.Union1">
            Anonymous_7d12f07c_e1a4_402a_8eca_538fb10d74a6
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS_UNION.Mdl">
            <summary>
            If MapType == MapPhysicalAddressMdl, provides a MDL that represents the physical address.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS_UNION.ContiguousRange">
            <summary>
            If MapType == MapPhysicalAddressContiguousRange, provides a contiguous physical address.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS_UNION.PfnArray">
            <summary>
            If MapType == MapPhysicalAddressPfn, provides a PFN array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS_MDL.Mdl">
            <summary>
            The pointer to the MDL that represents the physical address.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS_RANGE.Base">
            <summary>
            The base address of a contiguous physical address.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS_RANGE.Size">
            <summary>
            The size, in bytes, of a contiguous physical address.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS_ARRAY.PageFrame">
            <summary>
            The pointer to the PFN array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IOMMU_MAP_PHYSICAL_ADDRESS_ARRAY.NumberOfPages">
            <summary>
            The number of PFNs in the PFN array.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_CONNECT_INTERRUPT_PARAMETERS">
            <summary>
            The IO_CONNECT_INTERRUPT_PARAMETERS structure contains the parameters 
            that a driver supplies to the IoConnectInterruptEx routine to register an interrupt service routine (ISR).
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_connect_interrupt_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_CONNECT_INTERRUPT_PARAMETERS.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_CONNECT_INTERRUPT_PARAMETERS.Union1">
            Anonymous_92573f6a_799f_4d64_8891_9a75876c06b9
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_CONNECT_INTERRUPT_PARAMETERS_UNION.FullySpecified">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_CONNECT_INTERRUPT_PARAMETERS_UNION.LineBased">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_CONNECT_INTERRUPT_PARAMETERS_UNION.MessageBased">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_DISCONNECT_INTERRUPT_PARAMETERS">
            <summary>
            The IO_DISCONNECT_INTERRUPT_PARAMETERS structure describes the parameters when unregistering an interrupt-handling routine with IoDisconnectInterruptEx.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_disconnect_interrupt_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_DISCONNECT_INTERRUPT_PARAMETERS.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_DISCONNECT_INTERRUPT_PARAMETERS_UNION.Generic">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_DISCONNECT_INTERRUPT_PARAMETERS_UNION.InterruptObject">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_DISCONNECT_INTERRUPT_PARAMETERS_UNION.InterruptMessageTable">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET">
            <summary>
            The IO_ERROR_LOG_PACKET structure serves as the header for an error log entry.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_error_log_packet
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.MajorFunctionCode">
            <summary>
            Indicates the IRP_MJ_XXX major function code of the IRP the driver was handling when the error occurred. 
            Setting this value is optional.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.RetryCount">
            <summary>
            Indicates the number of times the driver has retried the operation and encountered this error. 
            Use zero to indicate the driver attempted the operation once, or add one for each retry beyond the initial attempt.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.DumpDataSize">
            <summary>
            Indicates the size, in bytes, of the variable-length DumpData member of this structure. 
            The specified value must be a multiple of sizeof(ULONG).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.NumberOfStrings">
            <summary>
            Indicates the number of insertion strings the driver will supply with this error log entry. 
            Drivers set this value to zero for errors that need no insertion strings. 
            The Event Viewer uses these strings to fill in the "%2" through "%n" entries in the string template for this error code.
            
            The null-terminated Unicode strings themselves follow the IO_ERROR_LOG_PACKET structure in memory.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.StringOffset">
            <summary>
            Indicates the offset, in bytes, from the beginning of the structure, at which any driver-supplied insertion string data begins. 
            Normally this will be sizeof(IO_ERROR_LOG_PACKET) plus the value of the DumpDataSize member. 
            If there are no driver-supplied insertion strings, StringOffset can be zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.EventCategory">
            <summary>
            Specifies the event category for the error. 
            A driver specifies the event categories it supports and corresponding descriptive strings in its message catalog. 
            The Event Viewer displays the descriptive string as the Category value for the error.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.ErrorCode">
            <summary>
            Specifies the type of error. The Event Viewer uses the error code to determine which string to display as the Description value for the error. 
            The Event Viewer takes the string template for the error supplied in the driver's message catalog, 
            replaces "%1" in the template with the name of the driver's device object,
            and replaces "%2" through "%n" with the insertion strings supplied with the error log entry.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.UniqueErrorValue">
            <summary>
            A driver-specific value that indicates where the error was detected in the driver. 
            Setting this value is optional.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.FinalStatus">
            <summary>
            Specifies the NTSTATUS value to be returned for the operation that triggered the error. 
            Setting this value is optional.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.SequenceNumber">
            <summary>
            Specifies a driver-assigned sequence number for the current IRP, which should be constant for the life of a given request. 
            Setting this value is optional.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.IoControlCode">
            <summary>
            For an IRP_MJ_DEVICE_CONTROL or IRP_MJ_INTERNAL_DEVICE_CONTROL IRP, this member specifies the I/O control code for the request that trigged the error.
            Otherwise, this value is zero. 
            Setting this value is optional.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.DeviceOffset">
            <summary>
            Specifies the driver-specified offset into the device where the error occurred.
            Setting this value is optional.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_ERROR_LOG_PACKET.DumpData">
            <summary>
            A variable-size array that can be used to store driver-specific binary data, 
            such as register values or any other information useful in identifying the cause of the error. 
            Drivers must specify the size, in bytes, of the array in the DumpDataSize member of this structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO">
            <summary>
            The IO_INTERRUPT_MESSAGE_INFO structure describes the driver's message-signaled interrupts.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_interrupt_message_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO.UnifiedIrql">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO.MessageCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO.MessageInfo">
            ULONG[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY">
            <summary>
            The IO_INTERRUPT_MESSAGE_INFO_ENTRY structure describes the properties of a single message-signaled interrupt.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_interrupt_message_info_entry
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY.MessageAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY.TargetProcessorSet">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY.InterruptObject">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY.MessageData">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY.Vector">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY.Irql">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY.Mode">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_INTERRUPT_MESSAGE_INFO_ENTRY.Polarity">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS">
            <summary>
            The IO_DISCONNECT_INTERRUPT_PARAMETERS structure describes the parameters when unregistering an interrupt-handling routine with IoDisconnectInterruptEx.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_disconnect_interrupt_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS_UNION.Generic">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS_UNION.InterruptObject">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_REPORT_INTERRUPT_ACTIVE_STATE_PARAMETERS_UNION.InterruptMessageTable">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR">
            <summary>
            The IO_RESOURCE_DESCRIPTOR structure describes a range of raw hardware resources, of one type, that can be used by a device. 
            An array of IO_RESOURCE_DESCRIPTOR structures is contained within each IO_RESOURCE_LIST structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_resource_descriptor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR.Option">
            <summary>
            Specifies whether this resource description is required, preferred, or alternative.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR.Type">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR.ShareDisposition">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR.Spare1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR.Flags">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR.Spare2">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR.u">
            Anonymous_e14c4904_d8e1_4a2d_82d2_e9a7f4e7bdac
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Port">
            Anonymous_d319c12c_98f7_4296_8c69_9c4ad33a0d9d
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Memory">
            Anonymous_26a2ddd5_e5aa_43c0_8baf_846e6b7c9ed2
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Interrupt">
            Anonymous_9f97fc3d_f4cc_4446_b2b9_6346d465a382
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Dma">
            Anonymous_ed2aac16_fa5e_4100_b3b4_045689a1cec8
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.DmaV3">
            Anonymous_12a3fe08_c36a_47ce_9a3d_4d65b42d69de
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Generic">
            Anonymous_270446a9_a4a3_40ba_9662_d4a940a7629e
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.DevicePrivate">
            Anonymous_f25c5317_ffb1_49e1_917f_7f9c33bfe1b1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.BusNumber">
            Anonymous_49148715_e4b6_42ac_b96b_85243e6c25a7
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.ConfigData">
            Anonymous_b2d90f0c_74d9_4016_bda7_8ab6e6bb3787
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Memory40">
            Anonymous_1e24cb7c_e3f2_47ea_be66_2c2b86df5ae4
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Memory48">
            Anonymous_e2f3202a_7578_47c8_89cc_79760a80bb69
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Memory64">
            Anonymous_e98da180_16dd_4b2a_896b_ed9ec27f6e82
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_UNION.Connection">
            Anonymous_4892d8d6_3191_4329_861c_eaffc327db69
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_PORT.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_PORT.Alignment">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_PORT.MinimumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_PORT.MaximumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY.Alignment">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY.MinimumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY.MaximumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_INTERRUPT.MinimumVector">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_INTERRUPT.MaximumVector">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_INTERRUPT.AffinityPolicy">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_INTERRUPT.Group">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_INTERRUPT.PriorityPolicy">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_INTERRUPT.TargetedProcessors">
            KAFFINITY->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_DMA.MinimumChannel">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_DMA.MaximumChannel">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_DMAV3.RequestLine">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_DMAV3.Reserved">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_DMAV3.Channel">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_DMAV3.TransferWidth">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_GENERIC.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_GENERIC.Alignment">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_GENERIC.MinimumAddress">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_GENERIC.MaximumAddress">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_DEVICEPRIVATE.Data">
            ULONG[3]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_BUSNUMBER.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_BUSNUMBER.MinBusNumber">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_BUSNUMBER.MaxBusNumber">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_BUSNUMBER.Reserved">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONFIGDATA.Priority">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONFIGDATA.Reserved1">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONFIGDATA.Reserved2">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY40.Length40">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY40.Alignment40">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY40.MinimumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY40.MaximumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY48.Length48">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY48.Alignment48">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY48.MinimumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY48.MaximumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY64.Length64">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY64.Alignment64">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY64.MinimumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_MEMORY64.MaximumAddress">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONNECTION.Class">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONNECTION.Type">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONNECTION.Reserved1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONNECTION.Reserved2">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONNECTION.IdLowPart">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_DESCRIPTOR_CONNECTION.IdHighPart">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_LIST">
            <summary>
            The IO_RESOURCE_LIST structure describes a range of raw hardware resources, of various types, that can be used by a device. 
            The resources specified represent a single, acceptable resource configuration for a device.
            An array of IO_RESOURCE_LIST structures is contained within each IO_RESOURCE_REQUIREMENTS_LIST structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_resource_list
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_LIST.Version">
            <summary>
            The version number of this structure. This value should be 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_LIST.Revision">
            <summary>
            The revision of this structure. This value should be 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_LIST.Count">
            <summary>
            The number of elements in the Descriptors array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_LIST.Descriptors">
            <summary>
            The first element in an array of one or more IO_RESOURCE_DESCRIPTOR structures.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_REQUIREMENTS_LIST">
            <summary>
            The IO_RESOURCE_REQUIREMENTS_LIST structure describes sets of resource configurations that can be used by a device. 
            Each configuration represents a range of raw resources, of various types, that can be used by a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_resource_requirements_list
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_REQUIREMENTS_LIST.ListSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_REQUIREMENTS_LIST.InterfaceType">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_REQUIREMENTS_LIST.BusNumber">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_REQUIREMENTS_LIST.SlotNumber">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_REQUIREMENTS_LIST.Reserved">
            ULONG[3]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_REQUIREMENTS_LIST.AlternativeLists">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_RESOURCE_REQUIREMENTS_LIST.List">
            ULONG[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_SECURITY_CONTEXT">
            <summary>
            The IO_SECURITY_CONTEXT structure represents the security context of an IRP_MJ_CREATE request.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_security_context
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SECURITY_CONTEXT.SecurityQos">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SECURITY_CONTEXT.AccessState">
            <summary>
            Reserved for use by file systems and file system filter drivers. 
            This member is a pointer to an ACCESS_STATE structure 
            that contains the object's subject context, granted access types, and remaining desired access types.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SECURITY_CONTEXT.DesiredAccess">
            <summary>
            An ACCESS_MASK value that expresses the access rights that are requested in the IRP_MJ_CREATE request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SECURITY_CONTEXT.FullCreateOptions">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_CONNECT_INFO">
            <summary>
            The IO_SESSION_CONNECT_INFO structure provides information about a user session.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_session_connect_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_CONNECT_INFO.SessionId">
            <summary>
            Session ID. This member contains the Terminal Services session identifier of the user session for which the driver is receiving this notification.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_CONNECT_INFO.LocalSession">
            <summary>
            Indicates whether the user session is a local session or a remote session. 
            If TRUE, the user is logged on locally. 
            If FALSE, the user is logged on remotely.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_INFORMATION">
            <summary>
            The IO_SESSION_STATE_INFORMATION structure contains information about the state of a user session.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_session_state_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_INFORMATION.SessionId">
            <summary>
            The session ID. This member contains the Terminal Services session identifier of a user session. 
            The IoGetContainerInformation routine sets this member to the session ID of the session 
            that is represented by the session object that the ContainerObject parameter of IoGetContainerInformation points to.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_INFORMATION.SessionState">
            <summary>
            The current state of the user session that is identified by SessionId.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_INFORMATION.LocalSession">
            <summary>
            Indicates whether the user session identified by SessionId is a local session. 
            If TRUE, the user is logged on locally. 
            If FALSE, the user is logged on remotely. 
            This member is valid only if the session is connected.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_NOTIFICATION">
            <summary>
            The IO_SESSION_STATE_NOTIFICATION structure contains information 
            that a kernel-mode driver supplies to the IoRegisterContainerNotification routine 
            when the driver registers to receive notifications of session events.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_session_state_notification
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_NOTIFICATION.Size">
            <summary>
            The size, in bytes, of the IO_SESSION_STATE_NOTIFICATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_NOTIFICATION.Flags">
            <summary>
            No flags are currently defined for this member. Set to zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_NOTIFICATION.IoObject">
            <summary>
            A pointer to an I/O object owned by the driver. 
            This member can point to a DEVICE_OBJECT, DRIVER_OBJECT, or FILE_OBJECT structure. 
            The I/O object must remain valid for the lifetime of the registration. 
            Before you delete a registered device object, unload a registered driver, or close a registered file object, 
            call the IoUnregisterContainerNotification routine to cancel the registration. 
            A driver can maintain simultaneous registrations for more than one I/O object, 
            but it cannot create more than one active registration for the same I/O object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_NOTIFICATION.EventMask">
            <summary>
            Mask bits for session events. These mask bits indicate the events for which the driver requests notifications.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.IO_SESSION_STATE_NOTIFICATION.Context">
            <summary>
            A pointer to a context buffer in which the driver can store its private data for a particular session notification registration.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_STACK_LOCATION">
            <summary>
            The IO_STACK_LOCATION structure defines an I/O stack location,
            which is an entry in the I/O stack that is associated with each IRP. 
            Each I/O stack location in an IRP has some common members and some request-type-specific members.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_stack_location
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_STATUS_BLOCK">
            <summary>
            A driver sets an IRP's I/O status block to indicate the final status of an I/O request, before calling IoCompleteRequest for the IRP.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_io_status_block
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.IO_STATUS_BLOCK64">
            <summary>
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-io_status_block64
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KBDLLHOOKSTRUCT">
            <summary>
            Contains information about a low-level keyboard input event.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-kbdllhookstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBDLLHOOKSTRUCT.vkCode">
            <summary>
            A virtual-key code. The code must be a value in the range 1 to 254.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBDLLHOOKSTRUCT.scanCode">
            <summary>
            A hardware scan code for the key.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBDLLHOOKSTRUCT.flags">
            <summary>
            The extended-key flag, event-injected flags, context code, and transition-state flag.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBDLLHOOKSTRUCT.time">
            <summary>
            The time stamp for this message, equivalent to what GetMessageTime would return for this message.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBDLLHOOKSTRUCT.dwExtraInfo">
            <summary>
            Additional information associated with the message.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_ADD_PAGES">
            <summary>
            The KBUGCHECK_ADD_PAGES structure describes one or more pages of driver-supplied data to be written by a KBUGCHECK_REASON_CALLBACK_ROUTINE callback function to the crash dump file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_kbugcheck_add_pages
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_ADD_PAGES.Context">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_ADD_PAGES.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_ADD_PAGES.BugCheckCode">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_ADD_PAGES.Address">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_ADD_PAGES.Count">
            ULONG_PTR->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_DUMP_IO">
            <summary>
            The KBUGCHECK_DUMP_IO structure describes an I/O operation on the crash dump file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_kbugcheck_dump_io
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_DUMP_IO.Offset">
            <summary>
            Specifies the current offset in the crash dump file, or -1 if the crash dump file is being written sequentially.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_DUMP_IO.Buffer">
            <summary>
            Pointer to a buffer that contains the current data to be written to the dump file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_DUMP_IO.BufferLength">
            <summary>
            Specifies the length of the buffer, in bytes, that is specified by the Buffer member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_DUMP_IO.Type">
            <summary>
            Specifies the KBUGCHECK_DUMP_IO_TYPE value that signifies the type of data to be written to the dump file.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_SECONDARY_DUMP_DATA">
            <summary>
            The KBUGCHECK_SECONDARY_DUMP_DATA structure describes a section of driver-supplied data to be written by KbCallbackSecondaryDumpData routine to the crash dump file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_kbugcheck_secondary_dump_data
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_SECONDARY_DUMP_DATA.InBuffer">
            <summary>
            Pointer to a buffer that is allocated by the system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_SECONDARY_DUMP_DATA.InBufferLength">
            <summary>
            Specifies the size of the buffer, in bytes, specified by the InBuffer member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_SECONDARY_DUMP_DATA.MaximumAllowed">
            <summary>
            Specifies the maximum amount of data that the KbCallbackSecondaryDumpData routine can write to the crash dump file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_SECONDARY_DUMP_DATA.Guid">
            <summary>
            Specifies a GUID that identifies the driver's crash dump data. (Drivers must use unique GUIDs to mark their crash dump data. Use the GuidGen.exe tool to generate GUIDs for your driver. 
            This tool is included in the Microsoft Windows SDK.)
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_SECONDARY_DUMP_DATA.OutBuffer">
            <summary>
            Pointer to the buffer where the driver writes its crash dump data, or NULL.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KBUGCHECK_SECONDARY_DUMP_DATA.OutBufferLength">
            <summary>
            Specifies the size of the buffer, in bytes, that was specified by the OutBuffer member.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KDPC_WATCHDOG_INFORMATION">
            <summary>
            DPC = deferred procedure call
            The KDPC_WATCHDOG_INFORMATION structure holds time-out information about the current deferred procedure call (DPC).
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_kdpc_watchdog_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KDPC_WATCHDOG_INFORMATION.DpcTimeLimit">
            <summary>
            Time limit for a single, current deferred procedure call. 
            If DPC time-out has been disabled, this value is set to 0.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KDPC_WATCHDOG_INFORMATION.DpcTimeCount">
            <summary>
            Time remaining for the current deferred procedure call, if DPC time-out has been enabled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KDPC_WATCHDOG_INFORMATION.DpcWatchdogLimit">
            <summary>
            Total time limit permitted for a sequence of deferred procedure calls. 
            If DPC watchdog has been disabled, this value is set to zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KDPC_WATCHDOG_INFORMATION.DpcWatchdogCount">
            <summary>
            Time value remaining for the current sequence of deferred procedure calls, if enabled.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KDPC_WATCHDOG_INFORMATION.Reserved">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT">
            <summary>
            Reserved for system use only. Do not use.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-kernel_cet_context
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT.Ssp">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT.Rip">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT.SegCs">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT.Union1">
            Anonymous_f64bd81c_234d_4024_af22_54530647762e
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT.Fill">
            USHORT[2]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT_UNION.AllFlags">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT_UNION.DUMMYSTRUCTNAME">
            Anonymous_ccff517e_25c3_41fb_a7b7_12df760bc02b
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_CET_CONTEXT_DUMMY.bitvector1">
             UseWrss : 1
            PopShadowStackOne : 1
            Unused : 14
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_SOFT_RESTART_NOTIFICATION">
            <summary>
            Reserved for system use.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-kernel_soft_restart_notification
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_SOFT_RESTART_NOTIFICATION.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_SOFT_RESTART_NOTIFICATION.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KERNEL_SOFT_RESTART_NOTIFICATION.Event">
            GUID->_GUID
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KEY_BASIC_INFORMATION">
            <summary>
            The KEY_BASIC_INFORMATION structure defines a subset of the full information that is available for a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_basic_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_BASIC_INFORMATION.LastWriteTime">
            <summary>
            The last time this key or any of its values changed. 
            This time value is expressed in absolute system time format. 
            Absolute system time is the number of 100-nanosecond intervals since the start of the year 1601 in the Gregorian calendar.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_BASIC_INFORMATION.TitleIndex">
            <summary>
            Device and intermediate drivers should ignore this member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_BASIC_INFORMATION.NameLength">
            <summary>
            The size, in bytes, of the key name string in the Name array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_BASIC_INFORMATION.Name">
            <summary>
            An array of wide characters that contains the name of the registry key.
            This character string is not null-terminated. Only the first element in this array is included in the KEY_BASIC_INFORMATION structure definition. 
            The storage for the remaining elements in the array immediately follows this element.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION">
            <summary>
            The KEY_FULL_INFORMATION structure defines the information available for a registry key, including information about its subkeys
            and the maximum length for their names and value entries. 
            This information can be used to size buffers to get the names of subkeys and their value entries.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_full_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.LastWriteTime">
            same as KEY_BASIC_INFORMATION
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.TitleIndex">
            same as KEY_BASIC_INFORMATION
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.ClassOffset">
            <summary>
            The byte offset from the start of this structure to the Class member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.ClassLength">
            <summary>
            The size, in bytes, of the key class name string in the Class array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.SubKeys">
            <summary>
            The number of subkeys for this key.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.MaxNameLen">
            <summary>
            The maximum size, in bytes, of any name for a subkey.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.MaxClassLen">
            <summary>
            The maximum size, in bytes, of a class name.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.Values">
            <summary>
            The number of value entries for this key.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.MaxValueNameLen">
            <summary>
            The maximum size, in bytes, of a value entry name.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.MaxValueDataLen">
            <summary>
            The maximum size, in bytes, of a value entry data field.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_FULL_INFORMATION.Class">
            <summary>
            An array of wide characters that contains the name of the class of the key.
            This character string is not null-terminated. Only the first element in this array is included in the KEY_FULL_INFORMATION structure definition. 
            The storage for the remaining elements in the array immediately follows this element.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KEY_NODE_INFORMATION">
            <summary>
            The KEY_NODE_INFORMATION structure defines the basic information available for a registry (sub)key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_node_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_NODE_INFORMATION.LastWriteTime">
            same as KEY_BASIC_INFORMATION
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_NODE_INFORMATION.TitleIndex">
            same as KEY_BASIC_INFORMATION
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_NODE_INFORMATION.ClassOffset">
            <summary>
            The byte offset from the start of this structure to the class name string, 
            which is located in the Name array immediately following the key name string. 
            Like the key name string, the class name string is not null-terminated.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_NODE_INFORMATION.ClassLength">
            <summary>
            The size, in bytes, in the class name string.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_NODE_INFORMATION.NameLength">
            <summary>
            The size, in bytes, of the key name string contained in the Name array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_NODE_INFORMATION.Name">
            <summary>
            An array of wide characters that contains the name of the registry key. 
            This character string is not null-terminated. 
            Only the first element in this array is included in the KEY_NODE_INFORMATION structure definition. 
            The storage for the remaining elements in the array immediately follows this element.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_BASIC_INFORMATION">
            <summary>
            The KEY_VALUE_BASIC_INFORMATION structure defines a subset of the full information available for a value entry of a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_value_basic_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_BASIC_INFORMATION.TitleIndex">
            <summary>
            Device and intermediate drivers should ignore this member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_BASIC_INFORMATION.Type">
            <summary>
            Specifies the system-defined type for the value entry in the registry key
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_BASIC_INFORMATION.NameLength">
            <summary>
            Specifies the size in bytes of the following value entry name.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_BASIC_INFORMATION.Name">
            <summary>
            A string of Unicode characters naming a value entry of the key.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_ENTRY">
            <summary>
            The KEY_VALUE_ENTRY structure is used by the REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION structure to describe a single value entry for a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_value_entry
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_ENTRY.ValueName">
            <summary>
            Pointer to a UNICODE_STRING structure that contains the name of the value entry.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_ENTRY.DataLength">
            <summary>
            Specifies the size, in bytes, of the data for the value entry.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_ENTRY.DataOffset">
            <summary>
            Specifies the offset, in bytes, of the value entry's data within the buffer that is pointed to by the ValueBuffer member of REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_ENTRY.Type">
            <summary>
            Specifies the type of the value entry's data. 
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_FULL_INFORMATION">
            <summary>
            The KEY_VALUE_FULL_INFORMATION structure defines information available for a value entry of a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_value_full_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_FULL_INFORMATION.TitleIndex">
            <summary>
            Device and intermediate drivers should ignore this member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_FULL_INFORMATION.Type">
            <summary>
            Specifies the system-defined type for the registry value(s) following the Name member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_FULL_INFORMATION.DataOffset">
            <summary>
            Specifies the offset from the start of this structure to the data immediately following the Name string.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_FULL_INFORMATION.DataLength">
            <summary>
            Specifies the number of bytes of registry information for the value entry identified by Name.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_FULL_INFORMATION.NameLength">
            <summary>
            Specifies the size in bytes of the following value entry name.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_FULL_INFORMATION.Name">
            <summary>
            A string of Unicode characters naming a value entry of the key.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_PARTIAL_INFORMATION">
            <summary>
            The KEY_VALUE_PARTIAL_INFORMATION structure defines a subset of the value information available for a value entry of a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_value_partial_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_PARTIAL_INFORMATION.TitleIndex">
            <summary>
            Device and intermediate drivers should ignore this member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_PARTIAL_INFORMATION.Type">
            <summary>
            Specifies the system-defined type for the registry value in the Data member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_PARTIAL_INFORMATION.DataLength">
            <summary>
            The size in bytes of the Data member.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_VALUE_PARTIAL_INFORMATION.Data">
            <summary>
            A value entry of the key.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KEY_WRITE_TIME_INFORMATION">
            <summary>
            The KEY_WRITE_TIME_INFORMATION structure is used by the system to set the last write time for a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_key_write_time_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KEY_WRITE_TIME_INFORMATION.LastWriteTime">
            <summary>
            Specifies the last time that the key was changed. 
            This time value is expressed in absolute system time format. 
            Absolute system time is the number of 100-nanosecond intervals since the start of the year 1601 in the Gregorian calendar.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT">
            <summary>
            The KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT structure describes the notification context that is passed to a registered callback function 
            when a new processor is dynamically added to a hardware partition.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ke_processor_change_notify_context
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT.State">
            <summary>
            The state of the processor add operation. 
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT.NtNumber">
            <summary>
            The processor index of the new processor.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT.Status">
            <summary>
            If the State member contains KeProcessorAddFailureNotify, 
            this member contains the error status that indicates why the processor add operation failed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KE_PROCESSOR_CHANGE_NOTIFY_CONTEXT.ProcNumber">
            <summary>
            The processor number of the new processor. 
            This member is a PROCESSOR_NUMBER structure that specifies a group number and a group-relative processor number.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT">
            <summary>
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-kmutant
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT.Header">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT.MutantListEntry">
            LIST_ENTRY->_LIST_ENTRY
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT.OwnerThread">
            _KTHREAD*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT.Union1">
            Anonymous_d526acf2_4865_4df7_8972_09f2649edb79
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT.ApcDisable">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT_UNION.MutantFlags">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT_UNION.DUMMYSTRUCTNAME">
            Anonymous_a9246ec7_c9a9_430b_8c25_e395fc6763ca
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KMUTANT_DUMMY.bitvector1">
             Abandoned : 1
            Spare1 : 7
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.KTMOBJECT_CURSOR">
            <summary>
            The KTMOBJECT_CURSOR structure receives enumeration information about KTM objects 
            when a component calls ZwEnumerateTransactionObject.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ktmobject_cursor
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KTMOBJECT_CURSOR.LastQuery">
            <summary>
            After ZwEnumerateTransactionObject returns, this member contains the GUID of the last object that ZwEnumerateTransactionObject enumerated. 
            Before it calls ZwEnumerateTransactionObject the first time, the caller must set this value to zero.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KTMOBJECT_CURSOR.ObjectIdCount">
            <summary>
            After ZwEnumerateTransactionObject returns, 
            this member contains the number of GUIDs that the ObjectIds array contains.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.KTMOBJECT_CURSOR.ObjectIds">
            <summary>
            A caller-allocated array of GUID-typed elements.
            After ZwEnumerateTransactionObject returns, this array contains GUIDs that identify enumerated objects.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LARGE_INTEGER">
            <summary>
            Union
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LARGE_INTEGER_PART.LowPart">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LARGE_INTEGER_PART.HighPart">
            LONG->int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LINK_SHARE_ACCESS">
            <summary>
            The share access structure used by file systems for only link files.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_link_share_access
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LINK_SHARE_ACCESS.OpenCount">
            <summary>
            The number of open requests to the file.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LINK_SHARE_ACCESS.Deleters">
            <summary>
            File associated with the file object has been opened for delete access.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LINK_SHARE_ACCESS.SharedDelete">
            <summary>
            File associated with the file object has been opened for delete sharing access.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOAD_DLL_DEBUG_INFO.hFile">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOAD_DLL_DEBUG_INFO.lpBaseOfDll">
            LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOAD_DLL_DEBUG_INFO.dwDebugInfoFileOffset">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOAD_DLL_DEBUG_INFO.nDebugInfoSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOAD_DLL_DEBUG_INFO.lpImageName">
            LPVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOAD_DLL_DEBUG_INFO.fUnicode">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfHeight">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfWidth">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfEscapement">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfOrientation">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfWeight">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfItalic">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfUnderline">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfStrikeOut">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfCharSet">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfOutPrecision">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfClipPrecision">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfQuality">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfPitchAndFamily">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTA.lfFaceName">
            CHAR[32]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfHeight">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfWidth">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfEscapement">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfOrientation">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfWeight">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfItalic">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfUnderline">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfStrikeOut">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfCharSet">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfOutPrecision">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfClipPrecision">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfQuality">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfPitchAndFamily">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LOGFONTW.lfFaceName">
            WCHAR[32]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LSA_OBJECT_ATTRIBUTES">
            <summary>
            The LSA_OBJECT_ATTRIBUTES structure is used with the LsaOpenPolicy function to specify the attributes of the connection to the Policy object.
            When you call LsaOpenPolicy, initialize the members of this structure to NULL or zero because the function does not use the information.
            https://learn.microsoft.com/en-us/windows/win32/api/lsalookup/ns-lsalookup-lsa_object_attributes
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_OBJECT_ATTRIBUTES.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_OBJECT_ATTRIBUTES.RootDirectory">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_OBJECT_ATTRIBUTES.ObjectName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_OBJECT_ATTRIBUTES.Attributes">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_OBJECT_ATTRIBUTES.SecurityDescriptor">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_OBJECT_ATTRIBUTES.SecurityQualityOfService">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LSA_REFERENCED_DOMAIN_LIST">
            <summary>
            The LSA_REFERENCED_DOMAIN_LIST structure contains information about the domains referenced in a lookup operation.
            https://learn.microsoft.com/en-us/windows/win32/api/lsalookup/ns-lsalookup-lsa_referenced_domain_list
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LSA_STRING">
            <summary>
            The LSA_STRING structure is used by Local Security Authority (LSA) functions to specify an ANSI string.
            https://learn.microsoft.com/en-us/windows/win32/api/lsalookup/ns-lsalookup-lsa_string
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_STRING.Length">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_STRING.MaximumLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_STRING.Buffer">
            PCHAR->CHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LSA_TRANSLATED_NAME">
            <summary>
            The LSA_TRANSLATED_NAME structure is used with the LsaLookupSids function to return information about the account identified by a SID.
            https://learn.microsoft.com/en-us/windows/win32/api/lsalookup/ns-lsalookup-lsa_translated_name
            
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LSA_UNICODE_STRING">
            <summary>
            The LSA_UNICODE_STRING structure is used by various Local Security Authority (LSA) functions to specify a Unicode string.
            https://learn.microsoft.com/en-us/windows/win32/api/lsalookup/ns-lsalookup-lsa_unicode_string
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_UNICODE_STRING.Length">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_UNICODE_STRING.MaximumLength">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LSA_UNICODE_STRING.Buffer">
            PWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LUID">
            <summary>
            Describes a local identifier for an adapter.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-luid
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LUID.LowPart">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.LUID.HighPart">
            LONG->int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.LUID_AND_ATTRIBUTES">
            <summary>
            The LUID_AND_ATTRIBUTES structure represents a locally unique identifier (LUID) and its attributes.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-luid_and_attributes
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MAILSLOT_CREATE_PARAMETERS">
            <summary>
            The MAILSLOT_CREATE_PARAMETERS is used by the Windows subsystem to create a mailslot.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_mailslot_create_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MAILSLOT_CREATE_PARAMETERS.MailslotQuota">
            <summary>
            Pool quota that is reserved for writes to this mailslot.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MAILSLOT_CREATE_PARAMETERS.MaximumMessageSize">
            <summary>
            Size, in bytes, of the largest message that can be written to this mailslot.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MAILSLOT_CREATE_PARAMETERS.ReadTimeout">
            <summary>
            The timeout period for the read operation, specified as a relative time.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MAILSLOT_CREATE_PARAMETERS.TimeoutSpecified">
            <summary>
            Boolean value that specifies whether a timeout period was provided in the ReadTimeout member.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA">
            <summary>
            Contains information about the class, title, owner, location, and size of a multiple-document interface (MDI) child window.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-mdicreatestructa
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.szClass">
            LPCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.szTitle">
            LPCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.hOwner">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.x">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.y">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.cx">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.cy">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.style">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDICREATESTRUCTA.lParam">
            LPARAM->LONG_PTR->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.szClass">
            LPCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.szTitle">
            LPCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.hOwner">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.x">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.y">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.cx">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.cy">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.style">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagMDICREATESTRUCTW.lParam">
            LPARAM->LONG_PTR->int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MDL">
            <summary>
            Memory Descriptor List
            An MDL structure is a partially opaque structure that represents a memory descriptor list (MDL).
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_mdl
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDL.Next">
            <summary>
            Pointer to the next MDL in an MDL chain.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDL.Size">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDL.MdlFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDL.Process">
            _EPROCESS*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDL.MappedSystemVa">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDL.StartVa">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDL.ByteCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MDL.ByteOffset">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MEASUREITEMSTRUCT">
            <summary>
            Informs the system of the dimensions of an owner-drawn control or menu item.
            This allows the system to process user interaction with the control correctly.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-measureitemstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEASUREITEMSTRUCT.CtlType">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEASUREITEMSTRUCT.CtlID">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEASUREITEMSTRUCT.itemID">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEASUREITEMSTRUCT.itemWidth">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEASUREITEMSTRUCT.itemHeight">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEASUREITEMSTRUCT.itemData">
            ULONG_PTR->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION">
            <summary>
            Defines the MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-memory_partition_dedicated_memory_open_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION.DedicatedMemoryTypeId">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION.HandleAttributes">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION.DesiredAccess">
            ACCESS_MASK->DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION.DedicatedMemoryPartitionHandle">
            HANDLE->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MEMORY_PRIORITY_INFORMATION">
            <summary>
            Specifies the memory priority for a thread or process.
            This structure is used by the GetProcessInformation, SetProcessInformation, GetThreadInformation, and SetThreadInformation functions.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-memory_priority_information
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER">
            <summary>
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-mem_extended_parameter
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER.DUMMYSTRUCTNAME">
            Anonymous_34d344ca_e9aa_455c_9c1d_a3c1e7811a63
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER.Union1">
            Anonymous_6ca8b287_b730_427f_b82c_e142ae854df6
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER_DUMMY.Type">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER_DUMMY.Reserved">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER_UNION.ULong64">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER_UNION.Pointer">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER_UNION.Size">
            SIZE_T->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER_UNION.Handle">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MEM_EXTENDED_PARAMETER_UNION.ULong">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MINIMIZEDMETRICS">
            <summary>
            Contains the scalable metrics associated with minimized windows.
            This structure is used with the SystemParametersInfo function when the SPI_GETMINIMIZEDMETRICS or SPI_SETMINIMIZEDMETRICS action value is specified.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-minimizedmetrics
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINIMIZEDMETRICS.cbSize">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINIMIZEDMETRICS.iWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINIMIZEDMETRICS.iHorzGap">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINIMIZEDMETRICS.iVertGap">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINIMIZEDMETRICS.iArrange">
            int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MINMAXINFO">
            <summary>
            Contains information about a window's maximized size and position and its minimum and maximum tracking size.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-minmaxinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINMAXINFO.ptReserved">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINMAXINFO.ptMaxSize">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINMAXINFO.ptMaxPosition">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINMAXINFO.ptMinTrackSize">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MINMAXINFO.ptMaxTrackSize">
            POINT->tagPOINT
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MOF_FIELD">
            <summary>
            You may use the MOF_FIELD structures to append event data to the EVENT_TRACE_HEADER or EVENT_INSTANCE_HEADER structures.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-mof_field
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MOF_FIELD.DataPtr">
            <summary>
            Pointer to a event data item.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MOF_FIELD.Length">
            <summary>
            Length of the item pointed to by DataPtr, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MOF_FIELD.DataType">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MONITORINFO">
            <summary>
            The MONITORINFO structure contains information about a display monitor.
            The GetMonitorInfo function stores information in a MONITORINFO structure or a MONITORINFOEX structure.
            The MONITORINFO structure is a subset of the MONITORINFOEX structure.
            The MONITORINFOEX structure adds a string member to contain a name for the display monitor.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-monitorinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MONITORINFO.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MONITORINFO.rcMonitor">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MONITORINFO.rcWork">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MONITORINFO.dwFlags">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MOUSEHOOKSTRUCT">
            <summary>
            Contains information about a mouse event passed to a WH_MOUSE hook procedure, MouseProc.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-mousehookstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MOUSEHOOKSTRUCT.pt">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MOUSEHOOKSTRUCT.hwnd">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MOUSEHOOKSTRUCT.wHitTestCode">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MOUSEHOOKSTRUCT.dwExtraInfo">
            ULONG_PTR->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MOUSEHOOKSTRUCTEX">
            <summary>
            Contains information about a mouse event passed to a WH_MOUSE hook procedure, MouseProc.
            This is an extension of the MOUSEHOOKSTRUCT structure that includes information about wheel movement or the use of the X button.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-mousehookstructex
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MSG">
            <summary>
            Contains message information from a thread's message queue.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-msg
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSG.hwnd">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSG.message">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSG.wParam">
            WPARAM->UINT_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSG.lParam">
            LPARAM->LONG_PTR->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSG.time">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSG.pt">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSG.lPrivate">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.MSLLHOOKSTRUCT">
            <summary>
            Contains information about a low-level mouse input event.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-msllhookstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSLLHOOKSTRUCT.pt">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSLLHOOKSTRUCT.mouseData">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSLLHOOKSTRUCT.flags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSLLHOOKSTRUCT.time">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.MSLLHOOKSTRUCT.dwExtraInfo">
            ULONG_PTR->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS">
            <summary>
            The NAMED_PIPE_CREATE_PARAMETERS structure is used by the Windows subsystem to create a named pipe.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_named_pipe_create_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS.NamedPipeType">
            <summary>
            Type of named pipe to create.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS.ReadMode">
            <summary>
            Mode in which to read the pipe.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS.CompletionMode">
            <summary>
            Specifies how the operation is to be completed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS.MaximumInstances">
            <summary>
            Maximum number of simultaneous instances of the named pipe.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS.InboundQuota">
            <summary>
            Pool quota that is reserved for writes to the inbound side of the named pipe.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS.OutboundQuota">
            <summary>
            Pool quota that is reserved for writes to the outbound side of the named pipe.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS.DefaultTimeout">
            <summary>
            Pointer to a timeout value to use if a timeout value is not specified when waiting for an instance of a named pipe. 
            This member is optional and can be set to NULL.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NAMED_PIPE_CREATE_PARAMETERS.TimeoutSpecified">
            <summary>
            Boolean value that specifies whether a pointer to a timeout period was provided in the DefaultTimeout member.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.NCCALCSIZE_PARAMS">
            <summary>
            Contains information that an application can use while processing the WM_NCCALCSIZE message to calculate the size, position, and valid contents of the client area of a window.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-nccalcsize_params
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NCCALCSIZE_PARAMS.rgrc">
            RECT[3]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NCCALCSIZE_PARAMS.lppos">
            PWINDOWPOS->tagWINDOWPOS*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.NMHDR">
            <summary>
            Contains information about a notification message.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-nmhdr
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NMHDR.hwndFrom">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NMHDR.idFrom">
            UINT_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NMHDR.code">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.cbSize">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iBorderWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iScrollWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iScrollHeight">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iCaptionWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iCaptionHeight">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.lfCaptionFont">
            LOGFONTA->tagLOGFONTA
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iSmCaptionWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iSmCaptionHeight">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.lfSmCaptionFont">
            LOGFONTA->tagLOGFONTA
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iMenuWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iMenuHeight">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.lfMenuFont">
            LOGFONTA->tagLOGFONTA
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.lfStatusFont">
            LOGFONTA->tagLOGFONTA
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.lfMessageFont">
            LOGFONTA->tagLOGFONTA
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NONCLIENTMETRICSA.iPaddedBorderWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.cbSize">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iBorderWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iScrollWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iScrollHeight">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iCaptionWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iCaptionHeight">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.lfCaptionFont">
            LOGFONTW->tagLOGFONTW
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iSmCaptionWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iSmCaptionHeight">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.lfSmCaptionFont">
            LOGFONTW->tagLOGFONTW
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iMenuWidth">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iMenuHeight">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.lfMenuFont">
            LOGFONTW->tagLOGFONTW
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.lfStatusFont">
            LOGFONTW->tagLOGFONTW
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.lfMessageFont">
            LOGFONTW->tagLOGFONTW
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.tagNONCLIENTMETRICSW.iPaddedBorderWidth">
            int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.NOTIFY_USER_POWER_SETTING">
            <summary>
            This topic describes the NOTIFY_USER_POWER_SETTING structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-notify_user_power_setting
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.NOTIFY_USER_POWER_SETTING.Guid">
            <summary>
            Defines the GUID member Guid.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OBJECTS_AND_SID">
            <summary>
            The OBJECTS_AND_SID structure contains a security identifier (SID) that identifies a trustee and GUIDs that identify the object types of an object-specific access control entry (ACE).
            https://learn.microsoft.com/en-us/windows/win32/api/accctrl/ns-accctrl-objects_and_sid
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OBJECTS_AND_SID.ObjectsPresent">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OBJECTS_AND_SID.ObjectTypeGuid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OBJECTS_AND_SID.InheritedObjectTypeGuid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OBJECTS_AND_SID.pSid">
            SID*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OBJECT_TYPE_LIST">
            <summary>
            The OBJECT_TYPE_LIST structure identifies an object type element in a hierarchy of object types. The AccessCheckByType functions use an array of OBJECT_TYPE_LIST structures to define a hierarchy of an object and its subobjects, such as property sets and properties.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-object_type_list
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OBJECT_TYPE_LIST.Level">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OBJECT_TYPE_LIST.Sbz">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OBJECT_TYPE_LIST.ObjectType">
            GUID*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_CALLBACK_REGISTRATION">
            <summary>
            The OB_CALLBACK_REGISTRATION structure specifies the parameters 
            when the ObRegisterCallbacks routine registers ObjectPreCallback and ObjectPostCallback callback routines.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_callback_registration
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_CALLBACK_REGISTRATION.Version">
            <summary>
            The version of object callback registration that is requested. 
            Drivers should specify OB_FLT_REGISTRATION_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_CALLBACK_REGISTRATION.OperationRegistrationCount">
            <summary>
            The number of entries in the OperationRegistration array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_CALLBACK_REGISTRATION.Altitude">
            <summary>
            A Unicode string that specifies the altitude of the driver.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_CALLBACK_REGISTRATION.RegistrationContext">
            <summary>
            The system passes the RegistrationContext value to the callback routine when the callback routine is run. 
            The meaning of this value is driver-defined.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_CALLBACK_REGISTRATION.OperationRegistration">
            <summary>
            A pointer to an array of OB_OPERATION_REGISTRATION structures. 
            Each structure specifies ObjectPreCallback and ObjectPostCallback callback routines and the types of operations that the routines are called for.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_OPERATION_REGISTRATION">
            <summary>
            The OB_OPERATION_REGISTRATION structure specifies ObjectPreCallback and ObjectPostCallback callback routines 
            and the types of operations that the routines are called for.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_operation_registration
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_OPERATION_REGISTRATION.ObjectType">
            <summary>
            A pointer to the object type that triggers the callback routine.
            Specify one of the following values : OB_OBJECT_TYPE
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_OPERATION_REGISTRATION.Operations">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_OPERATION_REGISTRATION.PreOperation">
            <summary>
            A pointer to an ObjectPreCallback routine. 
            The system calls this routine before the requested operation occurs.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_OPERATION_REGISTRATION.PostOperation">
            <summary>
            A pointer to an ObjectPostCallback routine. 
            The system calls this routine after the requested operation occurs.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_CREATE_HANDLE_INFORMATION">
            <summary>
            The OB_POST_CREATE_HANDLE_INFORMATION structure provides information to a ObjectPostCallback routine about a thread or process handle that has been opened.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_post_create_handle_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_CREATE_HANDLE_INFORMATION.GrantedAccess">
            <summary>
            An ACCESS_MASK value that specifies the access that is granted for the handle.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_DUPLICATE_HANDLE_INFORMATION">
            <summary>
            The OB_POST_DUPLICATE_HANDLE_INFORMATION structure provides information to an ObjectPostCallback routine about a thread or process handle that has been duplicated.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_post_duplicate_handle_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_DUPLICATE_HANDLE_INFORMATION.GrantedAccess">
            <summary>
            An ACCESS_MASK value that specifies the access that is granted for the handle.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION">
            <summary>
            The OB_POST_OPERATION_INFORMATION structure provides information about a process or thread handle operation to an ObjectPostCallback routine.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_post_operation_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION.Operation">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION.Union1">
            Anonymous_a042da44_8926_41e5_b61c_ab6cf9a0988c
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION.ObjectType">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION.ReturnStatus">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION.Parameters">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION_UNION.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION_UNION.Struct1">
            Anonymous_ca2ede5e_82cc_4151_b0bb_6f5d7234084a
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_INFORMATION_STRUCT.bitvector1">
             KernelHandle : 1
            Reserved : 31
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_PARAMETERS">
            <summary>
            The OB_POST_OPERATION_PARAMETERS union describes the operation-specific parameters for an ObjectPostCallback routine.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_post_operation_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_PARAMETERS.CreateHandleInformation">
            <summary>
            An OB_POST_CREATE_HANDLE_INFORMATION structure that contains information that is specific to a handle that is being opened.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_POST_OPERATION_PARAMETERS.DuplicateHandleInformation">
            <summary>
            An OB_POST_DUPLICATE_HANDLE_INFORMATION structure that contains information that is specific to a handle that is being duplicated.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_CREATE_HANDLE_INFORMATION">
            <summary>
            The OB_PRE_CREATE_HANDLE_INFORMATION structure provides information to an ObjectPreCallback routine about a thread or process handle that is being opened.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_pre_create_handle_information
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_DUPLICATE_HANDLE_INFORMATION">
            <summary>
            The OB_PRE_DUPLICATE_HANDLE_INFORMATION structure provides information to an ObjectPreCallback routine about a thread or process handle that is being duplicated.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_pre_duplicate_handle_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_DUPLICATE_HANDLE_INFORMATION.SourceProcess">
            <summary>
            A pointer to the process object for the process that is the source of the handle.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_DUPLICATE_HANDLE_INFORMATION.TargetProcess">
            <summary>
            A pointer to the process object for the process that receives the duplicated handle.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION">
            <summary>
            The OB_PRE_OPERATION_INFORMATION structure provides information about a process or thread handle operation to an ObjectPreCallback routine.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_pre_operation_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION.Operation">
            <summary>
            The type of handle operation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION.Union1">
            Anonymous_0ad38663_422a_4d5d_8610_5ae3e89a1164
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION.Object">
            <summary>
            A pointer to the process or thread object that is the target of the handle operation.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION.ObjectType">
            <summary>
            A pointer to the object type of the object. 
            This member is PsProcessType for a process or PsThreadType for a thread.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION.CallContext">
            <summary>
            A pointer to driver-specific context information for the operation. 
            By default, the Filter Manager sets this member to NULL, 
            but the ObjectPreCallback routine can reset the CallContext member in a driver-specific manner. 
            The Filter Manager passes this value to the matching ObjectPostCallback routine.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION.Parameters">
            <summary>
            A pointer to an OB_PRE_OPERATION_PARAMETERS union that contains operation-specific information. 
            The Operation member determines which member of the union is valid.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION_UNION.Flags">
            <summary>
            Reserved. Use the KernelHandle member instead.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION_UNION.Struct1">
            Anonymous_e9df5848_7f1a_4b82_8aa7_574bcff2986e
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION_STRUCT.bitvector1">
             KernelHandle : 1
            Reserved : 31
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION_STRUCT.KernelHandle">
            <summary>
            A bit that specifies whether the handle is a kernel handle. 
            If this member is TRUE, the handle is a kernel handle. 
            Otherwise, this handle is not a kernel handle.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_INFORMATION_STRUCT.Reserved">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_PARAMETERS">
            <summary>
            The OB_PRE_OPERATION_PARAMETERS union describes the operation-specific parameters for an ObjectPreCallback routine.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_ob_pre_operation_parameters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_PARAMETERS.CreateHandleInformation">
            <summary>
            An OB_PRE_CREATE_HANDLE_INFORMATION structure that contains information that is specific to a handle that is being opened.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OB_PRE_OPERATION_PARAMETERS.DuplicateHandleInformation">
            <summary>
            An OB_PRE_DUPLICATE_HANDLE_INFORMATION structure that contains information that is specific to a handle that is being duplicated.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OneUint.Value">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OPERATION_END_PARAMETERS">
            <summary>
            This structure is used by the OperationEnd function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OPERATION_END_PARAMETERS.Version">
            <summary>
            This parameter should be initialized to the OPERATION_API_VERSION defined in the Windows SDK.
            OPERATION_API_VERSION       1       This API was introduced in Windows 8 and Windows Server 2012 as version 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OPERATION_END_PARAMETERS.OperationId">
            <summary>
            A identifier that corresponds to the operation having file access patterns recorded. 
            The value should be unique for each operation that the developer intends to record.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OPERATION_END_PARAMETERS.Flags">
            <summary>
            The value of this parameter can include any combination of the following values.
            OPERATION_END_DISCARD       1       Specifies that the system should discard the information it has been tracking for this operation.Specify this flag when the operation either fails or does not follow the expected sequence of steps.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.OPERATION_START_PARAMETERS">
            <summary>
            This structure is used by the OperationEnd function.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OPERATION_START_PARAMETERS.Version">
            <summary>
            This parameter should be initialized to the OPERATION_API_VERSION defined in the Windows SDK.
            OPERATION_API_VERSION                   1       This API was introduced in Windows 8 and Windows Server 2012 as version 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OPERATION_START_PARAMETERS.OperationId">
            <summary>
            A identifier that corresponds to the operation having file access patterns recorded. 
            The value should be unique for each operation that the developer intends to record.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OPERATION_START_PARAMETERS.Flags">
            <summary>
            The value of this parameter can include any combination of the following values.
            OPERATION_START_TRACE_CURRENT_THREAD    1       Specifies that the system should discard the information it has been tracking for this operation.Specify this flag when the operation either fails or does not follow the expected sequence of steps.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OUTPUT_DEBUG_STRING_INFO.lpDebugStringData">
            LPSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OUTPUT_DEBUG_STRING_INFO.fUnicode">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.OUTPUT_DEBUG_STRING_INFO.nDebugStringLength">
            WORD->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PAINTSTRUCT">
            <summary>
            The PAINTSTRUCT structure contains information for an application.
            This information can be used to paint the client area of a window owned by that application.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-paintstruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PAINTSTRUCT.hdc">
            <summary>
            A handle to the display DC to be used for painting.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PAINTSTRUCT.fErase">
            <summary>
            Indicates whether the background must be erased.
            This value is nonzero if the application should erase the background.
            The application is responsible for erasing the background if a window class is created without a background brush.
            For more information, see the description of the hbrBackground member of the WNDCLASS structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PAINTSTRUCT.rcPaint">
            <summary>
            A RECT structure that specifies the upper left and lower right corners of the rectangle in which the painting is requested,
            in device units relative to the upper-left corner of the client area.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PAINTSTRUCT.fRestore">
            <summary>
            Reserved; used internally by the system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PAINTSTRUCT.fIncUpdate">
            <summary>
            Reserved; used internally by the system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PAINTSTRUCT.rgbReserved">
            <summary>
            Reserved; used internally by the system.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PCI_ATS_INTERFACE">
            <summary>
            Defines the PCI_ATS_INTERFACE structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-pci_ats_interface
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_ATS_INTERFACE.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_ATS_INTERFACE.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_ATS_INTERFACE.Context">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_ATS_INTERFACE.InterfaceReference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_ATS_INTERFACE.InterfaceDereference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_ATS_INTERFACE.SetAddressTranslationServices">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_ATS_INTERFACE.InvalidateQueueDepth">
            UCHAR->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PCI_COMMON_CONFIG">
            <summary>
            The PCI_COMMON_CONFIG structure defines standard PCI configuration information returned by the HalGetBusData or HalGetBusDataByOffset routine for the input BusDataType PCIConfiguration, 
            assuming the caller-allocated Buffer is of sufficient Length.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_pci_common_config
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_COMMON_CONFIG.DeviceSpecific">
            UCHAR[192]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE">
            <summary>
            The PCI_MSIX_TABLE_CONFIG_INTERFACE structure enables device drivers to modify their MSI-X interrupt settings. 
            This structure describes the GUID_MSIX_TABLE_CONFIG_INTERFACE interface.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_pci_msix_table_config_interface
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.Context">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.InterfaceReference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.InterfaceDereference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.SetTableEntry">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.MaskTableEntry">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.UnmaskTableEntry">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.GetTableEntry">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_MSIX_TABLE_CONFIG_INTERFACE.GetTableSize">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2">
            <summary>
            Defines the PCI_SECURITY_INTERFACE2 structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-pci_security_interface2
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2.Context">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2.InterfaceReference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2.InterfaceDereference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2.SupportedScenarios">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SECURITY_INTERFACE2.SetAccessControlServices">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PCI_SEGMENT_BUS_NUMBER">
            <summary>
            Reserved for system use.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-pci_segment_bus_number
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SEGMENT_BUS_NUMBER.u">
            Anonymous_0008e907_d3e8_465f_b5b5_1ced81cd7537
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SEGMENT_BUS_NUMBER_U.bits">
            Anonymous_a8122682_f893_4eef_b337_b7fbdcc9f137
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SEGMENT_BUS_NUMBER_U.AsULONG">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SEGMENT_BUS_NUMBER_BITS.bitvector1">
             BusNumber : 8
            SegmentNumber : 16
            Reserved : 8
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PCI_SLOT_NUMBER">
            <summary>
            The PCI_SLOT_NUMBER structure is obsolete. 
            It defines the format of the Slot parameter to the obsolete HalXxxBusData routines when they are called with the BusDataType value PCIConfiguration.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_pci_slot_number
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SLOT_NUMBER_U.bits">
            Anonymous_3f178825_1658_4f91_9ec3_0d4bbaefccce
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SLOT_NUMBER_U.AsULONG">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PCI_SLOT_NUMBER_BITS.bitvector1">
             DeviceNumber : 5
            FunctionNumber : 3
            Reserved : 24
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION">
            <summary>
            Contains performance information.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-performance_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.cb">
            <summary>
            The size of this structure, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.CommitTotal">
            <summary>
            The number of pages currently committed by the system. Note that committing pages (using VirtualAlloc with MEM_COMMIT) changes this value immediately;
            however, the physical memory is not charged until the pages are accessed.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.CommitLimit">
            <summary>
            The current maximum number of pages that can be committed by the system without extending the paging file(s).
            This number can change if memory is added or deleted, or if pagefiles have grown, shrunk, or been added.
            If the paging file can be extended, this is a soft limit.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.CommitPeak">
            <summary>
            The maximum number of pages that were simultaneously in the committed state since the last system reboot.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.PhysicalTotal">
            <summary>
            The amount of actual physical memory, in pages.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.PhysicalAvailable">
            <summary>
            The amount of physical memory currently available, in pages.
            This is the amount of physical memory that can be immediately reused without having to write its contents to disk first.
            It is the sum of the size of the standby, free, and zero lists.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.SystemCache">
            <summary>
            The amount of system cache memory, in pages.
            This is the size of the standby list plus the system working set.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.KernelTotal">
            <summary>
            The sum of the memory currently in the paged and nonpaged kernel pools, in pages.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.KernelPaged">
            <summary>
            The memory currently in the paged kernel pool, in pages.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.KernelNonpaged">
            <summary>
            The memory currently in the nonpaged kernel pool, in pages.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.PageSize">
            <summary>
            The size of a page, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.HandleCount">
            <summary>
            The current number of open handles.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.ProcessCount">
            <summary>
            The current number of processes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PERFORMANCE_INFORMATION.ThreadCount">
            <summary>
            The current number of threads.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PHYSICAL_ADDRESS">
            <summary>
            Union
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PLUGPLAY_NOTIFICATION_HEADER">
            <summary>
            A PLUGPLAY_NOTIFICATION_HEADER structure is included at the beginning of each PnP notification structure, 
            such as a DEVICE_INTERFACE_CHANGE_NOTIFICATION structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_plugplay_notification_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PLUGPLAY_NOTIFICATION_HEADER.Version">
            <summary>
            Specifies the version of the data structure, currently set to 1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PLUGPLAY_NOTIFICATION_HEADER.Size">
            <summary>
            Specifies the size of the structure, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PLUGPLAY_NOTIFICATION_HEADER.Event">
            <summary>
            Specifies a GUID identifying the event.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PNP_BUS_INFORMATION">
            <summary>
            The PNP_BUS_INFORMATION structure describes a bus.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_pnp_bus_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PNP_BUS_INFORMATION.BusTypeGuid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PNP_BUS_INFORMATION.LegacyBusType">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PNP_BUS_INFORMATION.BusNumber">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POINT">
            <summary>
            The POINT structure defines the x- and y-coordinates of a point.
            https://learn.microsoft.com/en-us/windows/win32/api/windef/ns-windef-point
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINT.x">
            <summary>
            Specifies the x-coordinate of the point.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINT.y">
            <summary>
            Specifies the y-coordinate of the point.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_CURSOR_INFO">
            <summary>
            Contains cursor ID mappings for pointer devices.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-pointer_device_cursor_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_CURSOR_INFO.cursorId">
            <summary>
            The assigned cursor ID.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_CURSOR_INFO.cursor">
            <summary>
            The POINTER_DEVICE_CURSOR_TYPE that the ID is mapped to.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_INFO">
            <summary>
            Contains information about a pointer device. An array of these structures is returned from the GetPointerDevices function.
            A single structure is returned from a call to the GetPointerDevice function.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-pointer_device_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_INFO.displayOrientation">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_INFO.device">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_INFO.pointerDeviceType">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_INFO.monitor">
            HMONITOR->HMONITOR__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_INFO.startingCursorId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_INFO.maxActiveContacts">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_INFO.productString">
            WCHAR[]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY">
            <summary>
            Contains pointer-based device properties (Human Interface Device (HID) global items that correspond to HID usages).
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-pointer_device_property
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY.logicalMin">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY.logicalMax">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY.physicalMin">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY.physicalMax">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY.unit">
            UINT32->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY.unitExponent">
            UINT32->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY.usagePageId">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_DEVICE_PROPERTY.usageId">
            USHORT->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POINTER_TYPE_INFO">
            <summary>
            Contains information about the pointer input type.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-pointer_type_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_TYPE_INFO.type">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_TYPE_INFO.Union1">
            Anonymous_f385d0f1_0669_495c_a447_7f73dbe69570
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_TYPE_INFO_UNION.touchInfo">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POINTER_TYPE_INFO_UNION.penInfo">
            UINT->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POOL_CREATE_EXTENDED_PARAMS">
            <summary>
            Defines the POOL_CREATE_EXTENDED_PARAMS structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-pool_create_extended_params
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER.DUMMYSTRUCTNAME">
            Anonymous_69271b2f_55b7_482e_a213_f60c76745b0f
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER.Union1">
            Anonymous_c92feb13_f583_41de_b6c3_966937af23dc
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER_DUMMY.Type">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER_DUMMY.Optional">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER_DUMMY.Reserved">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER_UNION.Reserved2">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER_UNION.Reserved3">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER_UNION.Priority">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER_UNION.SecurePoolParams">
            PVOID*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMETER_UNION.PreferredNode">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMS_SECURE_POOL">
            <summary>
            Defines the POOL_EXTENDED_PARAMS_SECURE_POOL structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-pool_extended_params_secure_pool
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMS_SECURE_POOL.SecurePoolHandle">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMS_SECURE_POOL.Buffer">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMS_SECURE_POOL.Cookie">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POOL_EXTENDED_PARAMS_SECURE_POOL.SecurePoolFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POWERBROADCAST_SETTING.PowerSetting">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POWERBROADCAST_SETTING.DataLength">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.POWERBROADCAST_SETTING.Data">
            UCHAR[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POWER_PLATFORM_INFORMATION">
            <summary>
            The POWER_PLATFORM_INFORMATION structure contains information about the power capabilities of the system.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES">
            <summary>
            Reserved for system use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.POWER_STATE">
            <summary>
            The POWER_STATE union specifies a system power state value or a device power state value.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_IDLE_STATE">
            <summary>
            The PO_FX_COMPONENT_IDLE_STATE structure specifies the attributes of an Fx power state of a component in a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_po_fx_component_idle_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_IDLE_STATE.TransitionLatency">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_IDLE_STATE.ResidencyRequirement">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_IDLE_STATE.NominalPower">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_INFO">
            <summary>
            The PO_FX_COMPONENT_PERF_INFO structure describes all the sets of performance states for a single component within a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_po_fx_component_perf_info
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET">
            <summary>
            The PO_FX_COMPONENT_PERF_SET structure represents a set of performance states for a single component within a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_po_fx_component_perf_set
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET.Name">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET.Flags">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET.Unit">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET.Type">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET.Union1">
            Anonymous_a0898f18_10a6_4c09_b8b9_e25f4feb3ced
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET_UNION.Discrete">
            Anonymous_6bb6e2df_f6e2_4ec4_b1d4_0aa8807d13f5
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET_UNION.Range">
            Anonymous_d02836fa_2207_4b26_a747_6208f2f56973
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET_DISCRETE.Count">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET_DISCRETE.States">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET_RANGE.Minimum">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_PERF_SET_RANGE.Maximum">
            ULONGLONG->unsigned __int64
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V1">
            <summary>
            The PO_FX_COMPONENT structure describes the power state attributes of a component in a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_po_fx_component_v1
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V1.Id">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V1.IdleStateCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V1.DeepestWakeableIdleState">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V1.IdleStates">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V2">
            <summary>
            The PO_FX_COMPONENT structure describes the power state attributes of a component in a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_po_fx_component_v2
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V2.Id">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V2.Flags">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V2.DeepestWakeableIdleState">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V2.IdleStateCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V2.IdleStates">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V2.ProviderCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_COMPONENT_V2.Providers">
            PULONG->ULONG*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1">
            <summary>
            The PO_FX_DEVICE structure describes the power attributes of a device to the power management framework (PoFx).
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_po_fx_device_v1
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.ComponentCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.ComponentActiveConditionCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.ComponentIdleConditionCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.ComponentIdleStateCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.DevicePowerRequiredCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.DevicePowerNotRequiredCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.PowerControlCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V1.DeviceContext">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2">
            <summary>
            The PO_FX_DEVICE structure describes the power attributes of a device to the power management framework (PoFx).
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_po_fx_device_v2
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.Flags">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.ComponentActiveConditionCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.ComponentIdleConditionCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.ComponentIdleStateCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.DevicePowerRequiredCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.DevicePowerNotRequiredCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.PowerControlCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.DeviceContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V2.ComponentCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.Flags">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.ComponentActiveConditionCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.ComponentIdleConditionCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.ComponentIdleStateCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.DevicePowerRequiredCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.DevicePowerNotRequiredCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.PowerControlCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.DirectedPowerUpCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.DirectedPowerDownCallback">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.DirectedFxTimeoutInSeconds">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.DeviceContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_DEVICE_V3.ComponentCount">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_PERF_STATE">
            <summary>
            The PO_FX_PERF_STATE structure represents a performance state for a single component within a device.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_po_fx_perf_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_PERF_STATE.Value">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_PERF_STATE.Context">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_PERF_STATE_CHANGE.Set">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_PERF_STATE_CHANGE.Union1">
            Anonymous_b3be0327_0379_468f_8607_fa5df5d6346a
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_PERF_STATE_CHANGE_UNION.StateIndex">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PO_FX_PERF_STATE_CHANGE_UNION.StateValue">
            ULONGLONG->unsigned __int64
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PROCESSOR_NUMBER">
            <summary>
            The PROCESSOR_NUMBER structure identifies a processor by its group number and group-relative processor number.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/miniport/ns-miniport-_processor_number
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESSOR_NUMBER.Group">
            <summary>
            The group number. 
            If multiprocessor system contains n groups, the groups are numbered from 0 to n-1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESSOR_NUMBER.Number">
            <summary>
            The group-relative processor number. 
            If a group contains m logical processors, the processors are numbered from 0 to m-1.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESSOR_NUMBER.Reserved">
            <summary>
            Reserved for future use. Initialize to zero.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_INFORMATION">
            <summary>
            Contains information about a newly created process and its primary thread.
            It is used with the CreateProcess, CreateProcessAsUser, CreateProcessWithLogonW, or CreateProcessWithTokenW function.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-process_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_INFORMATION.hProcess">
            <summary>
            A handle to the newly created process.
            The handle is used to specify the process in all functions that perform operations on the process object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_INFORMATION.hThread">
            <summary>
            A handle to the primary thread of the newly created process.
            The handle is used to specify the thread in all functions that perform operations on the thread object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_INFORMATION.dwProcessId">
            <summary>
            A value that can be used to identify a process.
            The value is valid from the time the process is created until all handles to the process are closed and the process object is freed;
            at this point, the identifier may be reused.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_INFORMATION.dwThreadId">
            <summary>
            A value that can be used to identify a thread.
            The value is valid from the time the thread is created until all handles to the thread are closed and the thread object is freed;
            at this point, the identifier may be reused.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_LEAP_SECOND_INFO">
            <summary>
            Specifies how the system handles positive leap seconds.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-process_leap_second_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_LEAP_SECOND_INFO.Flags">
            <summary>
            Currently, the only valid flag is PROCESS_LEAP_SECOND_INFO_FLAG_ENABLE_SIXTY_SECOND.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_LEAP_SECOND_INFO.Reserved">
            <summary>
            Reserved for future use
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS">
            <summary>
            Contains the memory statistics for a process.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-process_memory_counters
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.cb">
            <summary>
            The size of the structure, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.PageFaultCount">
            <summary>
            The number of page faults.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.PeakWorkingSetSize">
            <summary>
            The peak working set size, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.WorkingSetSize">
            <summary>
            The current working set size, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.QuotaPeakPagedPoolUsage">
            <summary>
            The peak paged pool usage, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.QuotaPagedPoolUsage">
            <summary>
            The current paged pool usage, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.QuotaPeakNonPagedPoolUsage">
            <summary>
            The peak nonpaged pool usage, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.QuotaNonPagedPoolUsage">
            <summary>
            The current nonpaged pool usage, in bytes.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.PagefileUsage">
            <summary>
            The Commit Charge value in bytes for this process.
            Commit Charge is the total amount of memory that the memory manager has committed for a running process.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS.PeakPagefileUsage">
            <summary>
            The peak value in bytes of the Commit Charge during the lifetime of this process.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX">
            <summary>
            Contains extended memory statistics for a process.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-process_memory_counters_ex
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.cb">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.PageFaultCount">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.PeakWorkingSetSize">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.WorkingSetSize">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.QuotaPeakPagedPoolUsage">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.QuotaPagedPoolUsage">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.QuotaPeakNonPagedPoolUsage">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.QuotaNonPagedPoolUsage">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.PagefileUsage">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.PeakPagefileUsage">
            same as PROCESS_MEMORY_COUNTERS
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_COUNTERS_EX.PrivateUsage">
            <summary>
            Same as PagefileUsage.
            The Commit Charge value in bytes for this process.
            Commit Charge is the total amount of private memory that the memory manager has committed for a running process.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_EXHAUSTION_INFO">
            <summary>
            Allows applications to configure a process to terminate if an allocation fails to commit memory.
            This structure is used by the PROCESS_INFORMATION_CLASS class.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-process_memory_exhaustion_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_EXHAUSTION_INFO.Version">
            <summary>
            Version should be set to PME_CURRENT_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_EXHAUSTION_INFO.Reserved">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_EXHAUSTION_INFO.Type">
            <summary>
            Type of failure.
            Type should be set to PMETypeFailFastOnCommitFailure (this is the only type available).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_MEMORY_EXHAUSTION_INFO.Value">
            <summary>
            Used to turn the feature on or off.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_POWER_THROTTLING_STATE">
            <summary>
            Specifies the throttling policies and how to apply them to a target process when that process is subject to power management.
            This structure is used by the SetProcessInformation function.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-process_power_throttling_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_POWER_THROTTLING_STATE.Version">
            <summary>
            The version of the PROCESS_POWER_THROTTLING_STATE structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_POWER_THROTTLING_STATE.ControlMask">
            <summary>
            This field enables the caller to take control of the power throttling mechanism.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_POWER_THROTTLING_STATE.StateMask">
            <summary>
            Manages the power throttling mechanism on/off state.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PROCESS_PROTECTION_LEVEL_INFORMATION">
            <summary>
            Specifies whether Protected Process Light (PPL) is enabled.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-process_protection_level_information
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK">
            <summary>
            Contains working set information for a page.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-psapi_working_set_block
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK.Flags">
            <summary>
            The working set information.
            See the description of the structure members for information about the layout of this variable.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK.Struct1">
            Anonymous_87a803d5_770b_4c0e_8a93_a312f13f5adc
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK_STRUCT.bitvector1">
             Protection : 5
            ShareCount : 3
            Shared : 1
            Reserved : 3
            VirtualPage : 20
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK_STRUCT.Protection">
            <summary>
            The protection attributes of the page. 
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK_STRUCT.ShareCount">
            <summary>
            The number of processes that share this page. The maximum value of this member is 7.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK_STRUCT.Shared">
            <summary>
            If this bit is 1, the page is sharable; otherwise, the page is not sharable.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK_STRUCT.Reserved">
            <summary>
            This member is reserved.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_BLOCK_STRUCT.VirtualPage">
            <summary>
            The address of the page in the virtual address space.
            64-bit Windows:  This member is 52 bits in length.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_BLOCK">
            <summary>
            Contains extended working set information for a page.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-psapi_working_set_ex_block
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_BLOCK.Flags">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_BLOCK.Union1">
            Anonymous_0c11d28e_6b19_4768_8771_3d6d267b85a1
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_BLOCK_UNION.Struct1">
            Anonymous_40e399d5_3029_46fd_b02b_752e3fc88f74
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_BLOCK_UNION.Invalid">
            Anonymous_a23d1404_7cbd_43f4_a51b_b66e7455d03b
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_BLOCK_STRUCT.bitvector1">
             Valid : 1
            ShareCount : 3
            Win32Protection : 11
            Shared : 1
            Node : 6
            Locked : 1
            LargePage : 1
            Reserved : 7
            Bad : 1
            ReservedUlong : 32
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_BLOCK_INVALID.bitvector1">
             Valid : 1
            Reserved0 : 14
            Shared : 1
            Reserved1 : 15
            Bad : 1
            ReservedUlong : 32
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_INFORMATION">
            <summary>
            Contains extended working set information for a process.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-psapi_working_set_ex_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_INFORMATION.VirtualAddress">
            <summary>
            The virtual address.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_EX_INFORMATION.VirtualAttributes">
            <summary>
            A PSAPI_WORKING_SET_EX_BLOCK union that indicates the attributes of the page at VirtualAddress.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_INFORMATION">
            <summary>
            Contains working set information for a process.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-psapi_working_set_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_INFORMATION.NumberOfEntries">
            <summary>
            The number of entries in the WorkingSetInfo array.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WORKING_SET_INFORMATION.WorkingSetInfo">
            <summary>
            An array of PSAPI_WORKING_SET_BLOCK elements, one for each page in the process working set.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WS_WATCH_INFORMATION">
            <summary>
            Contains information about a page added to a process working set.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-psapi_ws_watch_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WS_WATCH_INFORMATION.FaultingPc">
            <summary>
            A pointer to the instruction that caused the page fault.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WS_WATCH_INFORMATION.FaultingVa">
            <summary>
            A pointer to the page that was added to the working set.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WS_WATCH_INFORMATION_EX">
            <summary>
            Contains extended information about a page added to a process working set.
            https://learn.microsoft.com/en-us/windows/win32/api/psapi/ns-psapi-psapi_ws_watch_information_ex
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WS_WATCH_INFORMATION_EX.BasicInfo">
            <summary>
            A PSAPI_WS_WATCH_INFORMATION structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WS_WATCH_INFORMATION_EX.FaultingThreadId">
            <summary>
            The identifier of the thread that caused the page fault.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PSAPI_WS_WATCH_INFORMATION_EX.Flags">
            <summary>
            This member is reserved for future use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.Context">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.InterfaceReference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.InterfaceDereference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.QueryGranularity">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.QueryTimeSource">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.Enable">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.PTM_CONTROL_INTERFACE.Disable">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS">
            <summary>
            The QUOTA_LIMITS structure describes the amount of system resources available to a user.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-quota_limits
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS.PagedPoolLimit">
            SIZE_T->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS.NonPagedPoolLimit">
            SIZE_T->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS.MinimumWorkingSetSize">
            SIZE_T->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS.MaximumWorkingSetSize">
            SIZE_T->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS.PagefileLimit">
            SIZE_T->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.QUOTA_LIMITS.TimeLimit">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REASON">
            <summary>
            A union that consists of either a Detailed structure or a string.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON.Detailed">
            <summary>
            A structure that identifies a localizable string resource to describe the reason for the power request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON.SimpleReasonString">
            <summary>
            A non-localized string that describes the reason for the power request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON_CONTEXT.Version">
            <summary>
            The version number of the structure. 
            This parameter must be set to POWER_REQUEST_CONTEXT_VERSION.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON_CONTEXT.Flags">
            <summary>
            The format of the reason for the power request. 
            This parameter can be one of the following values:
            POWER_REQUEST_CONTEXT_DETAILED_STRING       0x00000002      The Detailed structure identifies a localizable string resource 
                                                                        that describes the reason for the power request.
            POWER_REQUEST_CONTEXT_SIMPLE_STRING         0x00000001      The SimpleReasonString parameter contains a simple, 
                                                                        non-localizable string that describes the reason for the power request.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON_CONTEXT.Reason">
            <summary>
            A union that consists of either a Detailed structure or a string.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON_DETAILED.LocalizedReasonModule">
            <summary>
            The module that contains the string resource.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON_DETAILED.LocalizedReasonId">
            <summary>
            The ID of the string resource.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON_DETAILED.ReasonStringCount">
            <summary>
            The number of strings in the ReasonStrings parameter.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REASON_DETAILED.ReasonStrings">
            <summary>
            An array of strings to be substituted in the string resource at run time.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.RECT">
            <summary>
            The RECT structure defines a rectangle by the coordinates of its upper-left and lower-right corners.
            https://learn.microsoft.com/en-us/windows/win32/api/windef/ns-windef-rect
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RECT.left">
            <summary>
            Specifies the x-coordinate of the upper-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RECT.top">
            <summary>
            Specifies the y-coordinate of the upper-left corner of the rectangle.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RECT.right">
            <summary>
            Specifies the x-coordinate of the lower-right corner of the rectangle.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RECT.bottom">
            <summary>
            Specifies the y-coordinate of the lower-right corner of the rectangle.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REENUMERATE_SELF_INTERFACE_STANDARD.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REENUMERATE_SELF_INTERFACE_STANDARD.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REENUMERATE_SELF_INTERFACE_STANDARD.Context">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REENUMERATE_SELF_INTERFACE_STANDARD.InterfaceReference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REENUMERATE_SELF_INTERFACE_STANDARD.InterfaceDereference">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REENUMERATE_SELF_INTERFACE_STANDARD.SurpriseRemoveAndReenumerateSelf">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CALLBACK_CONTEXT_CLEANUP_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.CompleteName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.RootObject">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.ObjectType">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.Options">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.Class">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.SecurityDescriptor">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.SecurityQualityOfService">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.DesiredAccess">
            ACCESS_MASK->DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.GrantedAccess">
            ACCESS_MASK->DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.Disposition">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.ResultObject">
            PVOID*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.RootObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.Transaction">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.Version">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.RemainingName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.Wow64Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.Attributes">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_CREATE_KEY_INFORMATION_V1.CheckAccessMode">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_DELETE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_DELETE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_DELETE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_DELETE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION">
            <summary>
            The REG_ENUMERATE_KEY_INFORMATION structure describes one subkey of a key whose subkeys are being enumerated.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_enumerate_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.Index">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.KeyInformationClass">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.KeyInformation">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.ResultLength">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.Index">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.KeyValueInformationClass">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.KeyValueInformation">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.ResultLength">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_ENUMERATE_VALUE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.KeyName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.SourceFile">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.TrustClassObject">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.UserEvent">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.DesiredAccess">
            ACCESS_MASK->DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.RootHandle">
            PHANDLE->HANDLE*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.Version">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_LOAD_KEY_INFORMATION_V2.FileAccessToken">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_CREATE_KEY_INFORMATION">
            <summary>
            The REG_POST_CREATE_KEY_INFORMATION structure contains the result of an attempt to create a registry key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_post_create_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_CREATE_KEY_INFORMATION.CompleteName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_CREATE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_CREATE_KEY_INFORMATION.Status">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_OPERATION_INFORMATION">
            <summary>
            The REG_POST_OPERATION_INFORMATION structure contains information about a completed registry operation that a RegistryCallback routine can use.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_post_operation_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_OPERATION_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_OPERATION_INFORMATION.Status">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_OPERATION_INFORMATION.PreInformation">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_OPERATION_INFORMATION.ReturnStatus">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_OPERATION_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_OPERATION_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_POST_OPERATION_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_PRE_CREATE_KEY_INFORMATION">
            <summary>
            The REG_PRE_OPEN_KEY_INFORMATION structure contains the name of a registry key that is about to be opened.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_pre_create_key_information
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION">
            <summary>
            The REG_QUERY_KEY_INFORMATION structure describes the metadata that is about to be queried for a key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_query_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION.KeyInformationClass">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION.KeyInformation">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION.ResultLength">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_NAME">
            <summary>
            The REG_QUERY_KEY_NAME structure describes the full registry key name of an object being queried.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_query_key_name
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_NAME.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_NAME.ObjectNameInfo">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_NAME.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_NAME.ReturnLength">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_NAME.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_NAME.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_NAME.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_SECURITY_INFORMATION">
            <summary>
            The REG_QUERY_KEY_SECURITY_INFORMATION structure receives security information for a registry key object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_query_key_security_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_SECURITY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_SECURITY_INFORMATION.SecurityInformation">
            PSECURITY_INFORMATION->DWORD*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_SECURITY_INFORMATION.SecurityDescriptor">
            PSECURITY_DESCRIPTOR->PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_SECURITY_INFORMATION.Length">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_SECURITY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_SECURITY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_KEY_SECURITY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION">
            <summary>
            The REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION structure describes the multiple value entries that are being retrieved for a key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_query_multiple_value_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.ValueEntries">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.EntryCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.ValueBuffer">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.BufferLength">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.RequiredBufferLength">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_MULTIPLE_VALUE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION">
            <summary>
            The REG_QUERY_VALUE_KEY_INFORMATION structure contains information about a registry key's value entry that is being queried.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_query_value_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.ValueName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.KeyValueInformationClass">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.KeyValueInformation">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.ResultLength">
            PULONG->ULONG*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_QUERY_VALUE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_RENAME_KEY_INFORMATION">
            <summary>
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_rename_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RENAME_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RENAME_KEY_INFORMATION.NewName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RENAME_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RENAME_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RENAME_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_REPLACE_KEY_INFORMATION">
            <summary>
            The REG_REPLACE_KEY_INFORMATION structure describes the metadata that is about to be replaced for a key.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_replace_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_REPLACE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_REPLACE_KEY_INFORMATION.OldFileName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_REPLACE_KEY_INFORMATION.NewFileName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_REPLACE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_REPLACE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_REPLACE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_RESTORE_KEY_INFORMATION">
            <summary>
            The REG_RESTORE_KEY_INFORMATION structure contains the information for a registry key that is about to be restored.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_restore_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RESTORE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RESTORE_KEY_INFORMATION.FileHandle">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RESTORE_KEY_INFORMATION.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RESTORE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RESTORE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_RESTORE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_KEY_INFORMATION">
            <summary>
            The REG_SAVE_KEY_INFORMATION structure contains the information for a registry key that is about to be saved.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_save_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_KEY_INFORMATION.FileHandle">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_KEY_INFORMATION.Format">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_MERGED_KEY_INFORMATION">
            <summary>
            The REG_SAVE_MERGED_KEY_INFORMATION structure contains the information about the two registry subtrees for which a merged view is to be saved to a file.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-reg_save_merged_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_MERGED_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_MERGED_KEY_INFORMATION.FileHandle">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_MERGED_KEY_INFORMATION.HighKeyObject">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_MERGED_KEY_INFORMATION.LowKeyObject">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_MERGED_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_MERGED_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SAVE_MERGED_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_INFORMATION_KEY_INFORMATION">
            <summary>
            The REG_SET_INFORMATION_KEY_INFORMATION structure describes a new setting for a key's metadata.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_set_information_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_INFORMATION_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_INFORMATION_KEY_INFORMATION.KeySetInformationClass">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_INFORMATION_KEY_INFORMATION.KeySetInformation">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_INFORMATION_KEY_INFORMATION.KeySetInformationLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_INFORMATION_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_INFORMATION_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_INFORMATION_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_KEY_SECURITY_INFORMATION">
            <summary>
            The REG_SET_KEY_SECURITY_INFORMATION structure specifies security information for a registry key object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_set_key_security_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_KEY_SECURITY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_KEY_SECURITY_INFORMATION.SecurityInformation">
            PSECURITY_INFORMATION->DWORD*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_KEY_SECURITY_INFORMATION.SecurityDescriptor">
            PSECURITY_DESCRIPTOR->PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_KEY_SECURITY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_KEY_SECURITY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_KEY_SECURITY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION">
            <summary>
            The REG_SET_VALUE_KEY_INFORMATION structure describes a new setting for a registry key's value entry.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_set_value_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.ValueName">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.TitleIndex">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.Type">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.Data">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.DataSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_SET_VALUE_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.REG_UNLOAD_KEY_INFORMATION">
            <summary>
            The REG_UNLOAD_KEY_INFORMATION structure contains information that a driver's RegistryCallback routine can use when a registry hive is unloaded.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_reg_unload_key_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_UNLOAD_KEY_INFORMATION.Object">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_UNLOAD_KEY_INFORMATION.UserEvent">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_UNLOAD_KEY_INFORMATION.CallContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_UNLOAD_KEY_INFORMATION.ObjectContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.REG_UNLOAD_KEY_INFORMATION.Reserved">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.RESOURCEMANAGER_BASIC_INFORMATION">
            <summary>
            The RESOURCEMANAGER_BASIC INFORMATION structure contains information about a resource manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_resourcemanager_basic_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCEMANAGER_BASIC_INFORMATION.ResourceManagerId">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCEMANAGER_BASIC_INFORMATION.DescriptionLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCEMANAGER_BASIC_INFORMATION.Description">
            WCHAR[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.RESOURCEMANAGER_COMPLETION_INFORMATION">
            <summary>
            The RESOURCEMANAGER_COMPLETION_INFORMATION structure is not used.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_resourcemanager_completion_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCEMANAGER_COMPLETION_INFORMATION.IoCompletionPortHandle">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCEMANAGER_COMPLETION_INFORMATION.CompletionKey">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCE_DEBUG.Type">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCE_DEBUG.CreatorBackTraceIndex">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCE_DEBUG.CriticalSection">
            _RTL_CRITICAL_SECTION*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCE_DEBUG.ProcessLocksList">
            LIST_ENTRY->_LIST_ENTRY
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCE_DEBUG.EntryCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCE_DEBUG.ContentionCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RESOURCE_DEBUG.Spare">
            DWORD[2]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RIP_INFO.dwError">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RIP_INFO.dwType">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.RPC_SECURITY_ATTRIBUTES">
            <summary>
            The RPC_SECURITY_ATTRIBUTES structure represents security attributes that can be set through the Remote Procedure Call Protocol Extensions.
            https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-rrp/bc37b8cf-8c94-4804-ad53-0aaf5eaf0ecb
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RPC_SECURITY_ATTRIBUTES.nLength">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RPC_SECURITY_ATTRIBUTES.RpcSecurityDescriptor">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RPC_SECURITY_ATTRIBUTES.bInheritHandle">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.RPC_SECURITY_DESCRIPTOR">
            <summary>
            The RPC_SECURITY_DESCRIPTOR structure represents the RPC security descriptors.
            https://learn.microsoft.com/en-us/openspecs/windows_protocols/ms-rrp/9729e781-8eb9-441b-82ca-e898f98d29c2
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RPC_SECURITY_DESCRIPTOR.lpSecurityDescriptor">
            PBYTE->BYTE*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RPC_SECURITY_DESCRIPTOR.cbInSecurityDescriptor">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RPC_SECURITY_DESCRIPTOR.cbOutSecurityDescriptor">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.RTL_QUERY_REGISTRY_TABLE">
            <summary>
            Each table entry contains the address of a caller-supplied QueryRoutine function that will be called for each value name that exists in the registry.
            The table must be terminated with a NULL table entry, which is a table entry with a NULL QueryRoutine member and a NULL Name member.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/nf-wdm-rtlqueryregistryvalues
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RTL_QUERY_REGISTRY_TABLE.QueryRoutine">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RTL_QUERY_REGISTRY_TABLE.Flags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RTL_QUERY_REGISTRY_TABLE.Name">
            PWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RTL_QUERY_REGISTRY_TABLE.EntryContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RTL_QUERY_REGISTRY_TABLE.DefaultType">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RTL_QUERY_REGISTRY_TABLE.DefaultData">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.RTL_QUERY_REGISTRY_TABLE.DefaultLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCATTER_GATHER_LIST.NumberOfElements">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCATTER_GATHER_LIST.Reserved">
            ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCATTER_GATHER_LIST.Elements">
            ULONG[]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCATTER_GATHER_ELEMENT.Address">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCATTER_GATHER_ELEMENT.Length">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCATTER_GATHER_ELEMENT.Reserved">
            ULONG_PTR->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SCROLLBARINFO">
            <summary>
            The SCROLLBARINFO structure contains scroll bar information.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-scrollbarinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLBARINFO.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLBARINFO.rcScrollBar">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLBARINFO.dxyLineButton">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLBARINFO.xyThumbTop">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLBARINFO.xyThumbBottom">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLBARINFO.reserved">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLBARINFO.rgstate">
            DWORD[6]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SCROLLINFO">
            <summary>
            The SCROLLINFO structure contains scroll bar parameters to be set by the SetScrollInfo function (or SBM_SETSCROLLINFO message), or retrieved by the GetScrollInfo function (or SBM_GETSCROLLINFO message).
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-scrollinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLINFO.cbSize">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLINFO.fMask">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLINFO.nMin">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLINFO.nMax">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLINFO.nPage">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLINFO.nPos">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SCROLLINFO.nTrackPos">
            int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SDEV_IDENTIFIER_INTERFACE">
            <summary>
            This material is not yet available. 
            This placeholder topic is provided as an example of documentation that may be included in a later release.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_sdev_identifier_interface
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SECTION_OBJECT_POINTERS">
            <summary>
            The SECTION_OBJECT_POINTERS structure, allocated by a file system or a redirector driver, 
            is used by the memory manager and cache manager to store file-mapping and cache-related information for a file stream.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_section_object_pointers
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES">
            <summary>
            The SECURITY_ATTRIBUTES structure contains the security descriptor for an object 
            and specifies whether the handle retrieved by specifying this structure is inheritable. 
            This structure provides security settings for objects created by various functions, 
            such as CreateFile, CreatePipe, CreateProcess, RegCreateKeyEx, or RegSaveKeyEx.
            https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/aa379560(v=vs.85)
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES.nLength">
            <summary>
            The size, in bytes, of this structure. 
            Set this value to the size of the SECURITY_ATTRIBUTES structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES.lpSecurityDescriptor">
            <summary>
            A pointer to a SECURITY_DESCRIPTOR structure that controls access to the object. 
            If the value of this member is NULL, 
            the object is assigned the default security descriptor associated with the access token of the calling process. 
            This is not the same as granting access to everyone by assigning a NULL discretionary access control list (DACL). 
            By default, the default DACL in the access token of a process allows access only to the user represented by the access token.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_ATTRIBUTES.bInheritHandle">
            <summary>
            A Boolean value that specifies whether the returned handle is inherited when a new process is created. 
            If this member is TRUE, the new process inherits the handle.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_CAPABILITIES">
            <summary>
            The SECURITY_CAPABILITIES structure defines the security capabilities of the app container.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-security_capabilities
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_CAPABILITIES.AppContainerSid">
            PISID->_SID*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_CAPABILITIES.Capabilities">
            PSID_AND_ATTRIBUTES->_SID_AND_ATTRIBUTES*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_CAPABILITIES.CapabilityCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_CAPABILITIES.Reserved">
            DWORD->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_DESCRIPTOR">
            <summary>
            The SECURITY_DESCRIPTOR structure contains the security information associated with an object. 
            Applications use this structure to set and query an object's security status.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-security_descriptor?redirectedfrom=MSDN
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_DESCRIPTOR.Revision">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_DESCRIPTOR.Sbz1">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_DESCRIPTOR.Control">
            SECURITY_DESCRIPTOR_CONTROL->WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_DESCRIPTOR.Owner">
            PSID->PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_DESCRIPTOR.Group">
            PSID->PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_DESCRIPTOR.Sacl">
            PACL->ACL*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_DESCRIPTOR.Dacl">
            PACL->ACL*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SECURITY_QUALITY_OF_SERVICE">
            <summary>
            The SECURITY_QUALITY_OF_SERVICE data structure contains information used to support client impersonation.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-security_quality_of_service
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SET_POWER_SETTING_VALUE">
            <summary>
            This topic describes the SET_POWER_SETTING_VALUE structure.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-set_power_setting_value
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SET_POWER_SETTING_VALUE.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SET_POWER_SETTING_VALUE.Guid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SET_POWER_SETTING_VALUE.PowerCondition">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SET_POWER_SETTING_VALUE.DataLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SET_POWER_SETTING_VALUE.Data">
            UCHAR[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SID">
            <summary>
            The security identifier (SID) structure is a variable-length structure used to uniquely identify users or groups.
            Applications should not modify a SID directly. To create and manipulate a security identifier, use the functions listed in the See Also section.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-sid
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SID.Revision">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SID.SubAuthorityCount">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SID.IdentifierAuthority">
            SID_IDENTIFIER_AUTHORITY->_SID_IDENTIFIER_AUTHORITY
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SID.SubAuthority">
            DWORD*[]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SID_AND_ATTRIBUTES">
            <summary>
            The SID_AND_ATTRIBUTES structure represents a security identifier (SID) and its attributes.
            SIDs are used to uniquely identify users or groups.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-sid_and_attributes
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SID_AND_ATTRIBUTES_HASH">
            <summary>
            The SID_AND_ATTRIBUTES_HASH structure specifies a hash values for the specified array of security identifiers (SIDs).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-sid_and_attributes_hash
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SID_AND_ATTRIBUTES_HASH.SidCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SID_AND_ATTRIBUTES_HASH.SidAttr">
            PSID_AND_ATTRIBUTES->_SID_AND_ATTRIBUTES*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SID_AND_ATTRIBUTES_HASH.Hash">
            SID[]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SID_IDENTIFIER_AUTHORITY">
            <summary>
            The SID_IDENTIFIER_AUTHORITY structure represents the top-level authority of a security identifier (SID).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-sid_identifier_authority
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SID_IDENTIFIER_AUTHORITY.Value">
            BYTE[6]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SIZE">
            <summary>
            The SIZE structure defines the width and height of a rectangle.
            https://learn.microsoft.com/en-us/windows/win32/api/windef/ns-windef-size
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SIZE.cx">
            <summary>
            Specifies the rectangle's width.
            The units depend on which function uses this structure.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SIZE.cy">
            <summary>
            Specifies the rectangle's height.
            The units depend on which function uses this structure.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SLIST_ENTRY">
            <summary>
            An SLIST_ENTRY structure describes an entry in a sequenced singly linked list.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_slist_entry
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SOCKADDR_STORAGE">
            <summary>
            The SOCKADDR_STORAGE structure stores socket address information.
            https://learn.microsoft.com/en-us/previous-versions/windows/desktop/legacy/ms740504(v=vs.85)
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SOCKADDR_STORAGE.ss_family">
            short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SOCKADDR_STORAGE.__ss_align">
            __int64
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA">
            <summary>
            Specifies the window station, desktop, standard handles, and appearance of the main window for a process at creation time.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-startupinfoa
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.cb">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.lpReserved">
            LPSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.lpDesktop">
            LPSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.lpTitle">
            LPSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.dwX">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.dwY">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.dwXSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.dwYSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.dwXCountChars">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.dwYCountChars">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.dwFillAttribute">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.dwFlags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.wShowWindow">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.cbReserved2">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.lpReserved2">
            LPBYTE->BYTE*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.hStdInput">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.hStdOutput">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOA.hStdError">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.cb">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.lpReserved">
            LPWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.lpDesktop">
            LPWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.lpTitle">
            LPWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.dwX">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.dwY">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.dwXSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.dwYSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.dwXCountChars">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.dwYCountChars">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.dwFillAttribute">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.dwFlags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.wShowWindow">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.cbReserved2">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.lpReserved2">
            LPBYTE->BYTE*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.hStdInput">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.hStdOutput">
            HANDLE->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STARTUPINFOW.hStdError">
            HANDLE->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.STYLESTRUCT">
            <summary>
            Contains the styles for a window.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-stylestruct
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STYLESTRUCT.styleOld">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.STYLESTRUCT.styleNew">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEMTIME.wYear">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEMTIME.wMonth">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEMTIME.wDayOfWeek">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEMTIME.wDay">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEMTIME.wHour">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEMTIME.wMinute">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEMTIME.wSecond">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEMTIME.wMilliseconds">
            WORD->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_ALARM_ACE">
            <summary>
            The SYSTEM_ALARM_ACE structure is reserved for future use.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_alarm_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_ALARM_CALLBACK_ACE">
            <summary>
            The SYSTEM_ALARM_CALLBACK_ACE structure is reserved for future use.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_alarm_callback_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_ALARM_CALLBACK_OBJECT_ACE">
            <summary>
            The SYSTEM_ALARM_CALLBACK_OBJECT_ACE structure is reserved for future use.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_alarm_callback_object_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_ALARM_OBJECT_ACE">
            <summary>
            The SYSTEM_ALARM_OBJECT_ACE structure is reserved for future use.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_alarm_object_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_AUDIT_ACE">
            <summary>
            The SYSTEM_AUDIT_ACE structure defines an access control entry (ACE) for the system access control list (SACL) that specifies what types of access cause system-level notifications.
            A system-audit ACE causes an audit message to be logged when a specified trustee attempts to gain access to an object.
            The trustee is identified by a security identifier (SID).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_audit_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_AUDIT_CALLBACK_ACE">
            <summary>
            The SYSTEM_AUDIT_CALLBACK_ACE structure defines an access control entry (ACE) for the system access control list (SACL) that specifies what types of access cause system-level notifications.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_audit_callback_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_AUDIT_CALLBACK_OBJECT_ACE">
            <summary>
            The SYSTEM_AUDIT_CALLBACK_OBJECT_ACE structure defines an access control entry (ACE) for a system access control list (SACL).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_audit_callback_object_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_AUDIT_OBJECT_ACE">
            <summary>
            The SYSTEM_AUDIT_OBJECT_ACE structure defines an access control entry (ACE) for a system access control list (SACL).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_audit_object_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_MANDATORY_LABEL_ACE">
            <summary>
            The SYSTEM_MANDATORY_LABEL_ACE structure defines an access control entry (ACE) for the system access control list (SACL) that specifies the mandatory access level and policy for a securable object.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_mandatory_label_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POOL_ZEROING_INFORMATION">
            <summary>
            Reserved for system use.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-system_pool_zeroing_information
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT">
            <summary>
            The SYSTEM_POWER_STATE_CONTEXT structure is a partially opaque system structure that contains information about the previous system power states of a computer.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_system_power_state_context
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_UNION.DUMMYSTRUCTNAME">
            Anonymous_a1189099_7915_4298_bc12_96f1e1a5794a
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_UNION.ContextAsUlong">
            <summary>
            Opaque member. Reserved for system use.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.bitvector1">
             Reserved1 : 8
            TargetSystemState : 4
            EffectiveSystemState : 4
            CurrentSystemState : 4
            IgnoreHibernationPath : 1
            PseudoTransition : 1
            KernelSoftReboot : 1
            DirectedDripsTransition : 1
            Reserved2 : 8
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.Reserved1">
            <summary>
            Opaque member. Reserved for system use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.TargetSystemState">
            <summary>
            The target system power state of the previous system power IRP that the driver received. 
            This member is set to a SYSTEM_POWER_STATE enumeration value. 
            Drivers should treat this member as read-only.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.EffectiveSystemState">
            <summary>
            The effective previous system power state, as perceived by the user. 
            This member is set to a SYSTEM_POWER_STATE enumeration value. 
            Drivers should treat this member as read-only. 
            This member value might not match the TargetSystemState member if, 
            for example, the previous system power IRP indicated that the computer was about to enter hibernation, 
            but a hybrid shutdown instead occurred to prepare the computer for a fast startup.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.CurrentSystemState">
            <summary>
            Opaque member. Reserved for system use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.IgnoreHibernationPath">
            <summary>
            Opaque member. Reserved for system use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.PseudoTransition">
            <summary>
            Opaque member. Reserved for system use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.KernelSoftReboot">
            <summary>
            Opaque member. Reserved for system use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.DirectedDripsTransition">
            <summary>
            Opaque member. Reserved for system use.
            </summary>
        </member>
        <member name="P:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_POWER_STATE_CONTEXT_DUMMY.Reserved2">
            <summary>
            Opaque member. Reserved for system use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_RESOURCE_ATTRIBUTE_ACE">
            <summary>
            The SYSTEM_RESOURCE_ATTRIBUTE_ACE structure defines an access control entry (ACE) for the system access control list (SACL) that specifies the system resource attributes for a securable object.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_resource_attribute_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.SYSTEM_SCOPED_POLICY_ID_ACE">
            <summary>
            The SYSTEM_SCOPED_POLICY_ID_ACE structure defines an access control entry (ACE) for the system access control list (SACL) that specifies the scoped policy identifier for a securable object.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-system_scoped_policy_id_ace
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_CUSTOM_NOTIFICATION">
            <summary>
            The TARGET_DEVICE_CUSTOM_NOTIFICATION structure describes a custom device event.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_target_device_custom_notification
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_CUSTOM_NOTIFICATION.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_CUSTOM_NOTIFICATION.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_CUSTOM_NOTIFICATION.Event">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_CUSTOM_NOTIFICATION.FileObject">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_CUSTOM_NOTIFICATION.NameBufferOffset">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_CUSTOM_NOTIFICATION.CustomDataBuffer">
            UCHAR[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_REMOVAL_NOTIFICATION">
            <summary>
            The TARGET_DEVICE_REMOVAL_NOTIFICATION structure describes a device-removal event. 
            The PnP manager sends this structure to a driver that registered a callback routine for notification of EventCategoryTargetDeviceChange events.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_target_device_removal_notification
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_REMOVAL_NOTIFICATION.Version">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_REMOVAL_NOTIFICATION.Size">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_REMOVAL_NOTIFICATION.Event">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TARGET_DEVICE_REMOVAL_NOTIFICATION.FileObject">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.THREAD_POWER_THROTTLING_STATE">
            <summary>
            Specifies the throttling policies and how to apply them to a target thread when that thread is subject to power management.
            This structure is used by the SetThreadInformation function.
            https://learn.microsoft.com/en-us/windows/win32/api/processthreadsapi/ns-processthreadsapi-thread_power_throttling_state
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.THREAD_POWER_THROTTLING_STATE.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.THREAD_POWER_THROTTLING_STATE.ControlMask">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.THREAD_POWER_THROTTLING_STATE.StateMask">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS">
            <summary>
            Describes time information for time conversion routines.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-time_fields
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS.Year">
            <summary>
            Specifies a value from 1601 on.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS.Month">
            <summary>
            Specifies a value from 1 to 12.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS.Day">
            <summary>
            Specifies a value from 1 to 31.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS.Hour">
            <summary>
            Specifies a value from 0 to 23.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS.Minute">
            <summary>
            Specifies a value from 0 to 59.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS.Second">
            <summary>
            Specifies a value from 0 to 59.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS.Milliseconds">
            <summary>
            Specifies a value from 0 to 999.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_FIELDS.Weekday">
            <summary>
            Specifies a value from 0 to 6 (Sunday to Saturday).
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_ZONE_INFORMATION.Bias">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_ZONE_INFORMATION.StandardName">
            WCHAR[32]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_ZONE_INFORMATION.StandardDate">
            SYSTEMTIME->_SYSTEMTIME
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_ZONE_INFORMATION.StandardBias">
            LONG->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_ZONE_INFORMATION.DaylightName">
            WCHAR[32]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_ZONE_INFORMATION.DaylightDate">
            SYSTEMTIME->_SYSTEMTIME
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TIME_ZONE_INFORMATION.DaylightBias">
            LONG->int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFO">
            <summary>
            Contains title bar information.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-titlebarinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFO.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFO.rcTitleBar">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFO.rgstate">
            DWORD[6]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFOEX">
            <summary>
            Expands on the information described in the TITLEBARINFO structure by including the coordinates of each element of the title bar.
            This structure is sent with the WM_GETTITLEBARINFOEX message.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-titlebarinfoex
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFOEX.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFOEX.rcTitleBar">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFOEX.rgstate">
            DWORD[6]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TITLEBARINFOEX.rgrect">
            RECT[6]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION">
            <summary>
            The TOKEN_ACCESS_INFORMATION structure specifies all the information in a token that is necessary to perform an access check.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_access_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.SidHash">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.RestrictedSidHash">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.Privileges">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.AuthenticationId">
            LUID->_LUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.TokenType">
            TOKEN_TYPE->_TOKEN_TYPE
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.ImpersonationLevel">
            SECURITY_IMPERSONATION_LEVEL->_SECURITY_IMPERSONATION_LEVEL
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.MandatoryPolicy">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.Flags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.AppContainerNumber">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.PackageSid">
            PSID->PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.CapabilitiesHash">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.TrustLevelSid">
            PSID->PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ACCESS_INFORMATION.SecurityAttributes">
            PVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_APPCONTAINER_INFORMATION">
            <summary>
            The TOKEN_APPCONTAINER_INFORMATION structure specifies all the information in a token that is necessary for an app container.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_appcontainer_information
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_AUDIT_POLICY">
            <summary>
            The TOKEN_AUDIT_POLICY structure specifies the per user audit policy for a token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_audit_policy
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_CONTROL">
            <summary>
            The TOKEN_CONTROL structure contains information that identifies an access token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_control
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_CONTROL.TokenId">
            LUID->_LUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_CONTROL.AuthenticationId">
            LUID->_LUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_CONTROL.ModifiedId">
            LUID->_LUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_CONTROL.TokenSource">
            TOKEN_SOURCE->_TOKEN_SOURCE
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_DEFAULT_DACL">
            <summary>
            The TOKEN_DEFAULT_DACL structure specifies a discretionary access control list (DACL).
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_default_dacl
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_DEVICE_CLAIMS">
            <summary>
            The TOKEN_DEVICE_CLAIMS structure defines the device claims for the token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_device_claims
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ELEVATION">
            <summary>
            The TOKEN_ELEVATION structure indicates whether a token has elevated privileges.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_elevation
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS">
            <summary>
            The TOKEN_GROUPS structure contains information about the group security identifiers (SIDs) in an access token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_groups
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS.GroupCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS.Groups">
            SID_AND_ATTRIBUTES*[]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES">
            <summary>
            The TOKEN_GROUPS_AND_PRIVILEGES structure contains information about the group security identifiers (SIDs) and privileges in an access token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_groups_and_privileges
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.SidCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.SidLength">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.Sids">
            PSID_AND_ATTRIBUTES->_SID_AND_ATTRIBUTES*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.RestrictedSidCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.RestrictedSidLength">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.RestrictedSids">
            PSID_AND_ATTRIBUTES->_SID_AND_ATTRIBUTES*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.PrivilegeCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.PrivilegeLength">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.Privileges">
            PLUID_AND_ATTRIBUTES->_LUID_AND_ATTRIBUTES*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_GROUPS_AND_PRIVILEGES.AuthenticationId">
            LUID->_LUID
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_LINKED_TOKEN">
            <summary>
            The TOKEN_LINKED_TOKEN structure contains a handle to a token. This token is linked to the token being queried by the GetTokenInformation function or set by the SetTokenInformation function.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_linked_token
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_MANDATORY_LABEL">
            <summary>
            The TOKEN_MANDATORY_LABEL structure specifies the mandatory integrity level for a token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_mandatory_label
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_MANDATORY_POLICY">
            <summary>
            The TOKEN_MANDATORY_POLICY structure specifies the mandatory integrity policy for a token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_mandatory_policy
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_ORIGIN">
            <summary>
            The TOKEN_ORIGIN structure contains information about the origin of the logon session. This structure is used by the GetTokenInformation function.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_origin
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_OWNER">
            <summary>
            The TOKEN_OWNER structure contains the default owner security identifier (SID) that will be applied to newly created objects.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_owner
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_PRIMARY_GROUP">
            <summary>
            The TOKEN_PRIMARY_GROUP structure specifies a group security identifier (SID) for an access token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_primary_group
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_PRIVILEGES">
            <summary>
            The TOKEN_PRIVILEGES structure contains information about a set of privileges for an access token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_privileges
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_PRIVILEGES.PrivilegeCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_PRIVILEGES.Privileges">
            LUID_AND_ATTRIBUTES[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_SOURCE">
            <summary>
            The TOKEN_SOURCE structure identifies the source of an access token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_source
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_SOURCE.SourceName">
            CHAR[8]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_SOURCE.SourceIdentifier">
            LUID->_LUID
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS">
            <summary>
            The TOKEN_STATISTICS structure contains information about an access token.
            An application can retrieve this information by calling the GetTokenInformation function.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_statistics
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.TokenId">
            LUID->_LUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.AuthenticationId">
            LUID->_LUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.ExpirationTime">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.TokenType">
            TOKEN_TYPE->_TOKEN_TYPE
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.ImpersonationLevel">
            SECURITY_IMPERSONATION_LEVEL->_SECURITY_IMPERSONATION_LEVEL
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.DynamicCharged">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.DynamicAvailable">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.GroupCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.PrivilegeCount">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_STATISTICS.ModifiedId">
            LUID->_LUID
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_USER">
            <summary>
            The TOKEN_USER structure identifies the user associated with an access token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_user
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOKEN_USER_CLAIMS">
            <summary>
            The TOKEN_USER_CLAIMS structure defines the user claims for the token.
            https://learn.microsoft.com/en-us/windows/win32/api/winnt/ns-winnt-token_user_claims
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_INPUT">
            <summary>
            Contains information about the touch contact area reported by the touch digitizer.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-touch_hit_testing_input
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_INPUT.pointerId">
            UINT32->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_INPUT.point">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_INPUT.boundingBox">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_INPUT.nonOccludedBoundingBox">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_INPUT.orientation">
            UINT32->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_PROXIMITY_EVALUATION">
            <summary>
            Contains the hit test score that indicates whether the object is the likely target of the touch contact area, relative to other objects that intersect the touch contact area.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-touch_hit_testing_proximity_evaluation
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_PROXIMITY_EVALUATION.score">
            UINT16->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TOUCH_HIT_TESTING_PROXIMITY_EVALUATION.adjustedPoint">
            POINT->tagPOINT
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO">
            <summary>
            Defines the session and the information that the session used to enable the provider.
            This information is returned by EnumerateTraceGuidsEx as part of a TRACE_PROVIDER_INSTANCE_INFO block.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-trace_enable_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO.IsEnabled">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO.Level">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO.Reserved1">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO.LoggerId">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO.EnableProperty">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO.Reserved2">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO.MatchAnyKeyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_ENABLE_INFO.MatchAllKeyword">
            ULONGLONG->unsigned __int64
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_INFO">
            <summary>
            Returned by EnumerateTraceGuidsEx.
            Defines the header to the list of sessions that enabled a provider.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-trace_guid_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_INFO.InstanceCount">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_INFO.Reserved">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_PROPERTIES">
            <summary>
            Returned by EnumerateTraceGuids. Contains information about an event trace provider.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-trace_guid_properties
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_PROPERTIES.Guid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_PROPERTIES.GuidType">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_PROPERTIES.LoggerId">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_PROPERTIES.EnableLevel">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_PROPERTIES.EnableFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_PROPERTIES.IsEnable">
            BOOLEAN->BYTE->unsigned char
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_REGISTRATION">
            <summary>
            Used with RegisterTraceGuids to register event trace classes.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-trace_guid_registration
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_REGISTRATION.Guid">
            LPCGUID->GUID*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_GUID_REGISTRATION.RegHandle">
            HANDLE->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER">
            <summary>
            The TRACE_LOGFILE_HEADER structure contains information about an event tracing session and its events.
            It is the raw data format of the trace information data in the header of an ETW log file.
            It is also a part of the information returned by OpenTrace and provided to the BufferCallback during trace processing.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-trace_logfile_header
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.BufferSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.Union1">
            Anonymous_10c08314_7a7e_48f0_a728_8522bb36d1b6
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.ProviderVersion">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.NumberOfProcessors">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.EndTime">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.TimerResolution">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.MaximumFileSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.LogFileMode">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.BuffersWritten">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.Union2">
            Anonymous_a5f62b8c_5a9c_419b_80ef_85ace1e422a2
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.LoggerName">
            PWCHAR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.LogFileName">
            PWCHAR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.TimeZone">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.BootTime">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.PerfFreq">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.StartTime">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.ReservedFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER.BuffersLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_UNION1.Version">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_UNION1.VersionDetail">
            Anonymous_2edda42b_0f4c_4416_96c9_39112236fe37
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_DETAIL.MajorVersion">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_DETAIL.MinorVersion">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_DETAIL.SubVersion">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_DETAIL.SubMinorVersion">
            UCHAR->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_UNION2.LogInstanceGuid">
            GUID->_GUID
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_UNION2.DUMMYSTRUCTNAME">
            Anonymous_90687aca_daea_4c75_9021_274a20160668
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_DUMMY.StartBuffers">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_DUMMY.PointerSize">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_DUMMY.EventsLost">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_LOGFILE_HEADER_DUMMY.CpuSpeedInMHz">
            ULONG->unsigned int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PERIODIC_CAPTURE_STATE_INFO">
            <summary>
            Used with TraceQueryInformation and TraceSetInformation to get or set information relating to a periodic capture state.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-trace_periodic_capture_state_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PERIODIC_CAPTURE_STATE_INFO.CaptureStateFrequencyInSeconds">
            <summary>
            The frequency of state captures in seconds.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PERIODIC_CAPTURE_STATE_INFO.ProviderCount">
            <summary>
            The number of providers.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PERIODIC_CAPTURE_STATE_INFO.Reserved">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PROVIDER_INSTANCE_INFO">
            <summary>
            Defines an instance of the provider GUID.
            This data is returned from EnumerateTraceGuidsEx when called with the TraceGuidQueryInfo information class.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-trace_provider_instance_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PROVIDER_INSTANCE_INFO.NextOffset">
            <summary>
            Offset, in bytes, from the beginning of this structure to the next TRACE_PROVIDER_INSTANCE_INFO structure.
            The value is zero if there is not another instance info block.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PROVIDER_INSTANCE_INFO.EnableCount">
            <summary>
            Number of TRACE_ENABLE_INFO structures in this block.
            Each structure represents a session that enabled the provider.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PROVIDER_INSTANCE_INFO.Pid">
            <summary>
            Process identifier of the process that registered the provider.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_PROVIDER_INSTANCE_INFO.Flags">
            <summary>
            Can be one of the following flags.
            TRACE_PROVIDER_FLAG_LEGACY:         The provider used RegisterTraceGuids instead of EventRegister to register itself.
            TRACE_PROVIDER_FLAG_PRE_ENABLE:     The provider is not registered; however, one or more sessions have enabled the provider.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRACE_VERSION_INFO">
            <summary>
            Determines the version information of the trace processing API.
            This data is returned from TraceQueryInformation when called with the TraceVersionInfo information class.
            https://learn.microsoft.com/en-us/windows/win32/api/evntrace/ns-evntrace-trace_version_info
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_VERSION_INFO.EtwTraceProcessingVersion">
            <summary>
            The version of the trace processing API on the current system.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRACE_VERSION_INFO.Reserved">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_BASIC_INFORMATION">
            <summary>
            The TRANSACTIONMANAGER_BASIC_INFORMATION structure contains information about a transaction manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_transactionmanager_basic_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_BASIC_INFORMATION.TmIdentity">
            <summary>
            A GUID that KTM has assigned to a transaction manager object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_BASIC_INFORMATION.VirtualClock">
            <summary>
            The virtual clock value that is currently associated with a transaction manager object.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_LOGPATH_INFORMATION">
            <summary>
            The TRANSACTIONMANAGER_LOGPATH_INFORMATION structure contains information about a transaction manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_transactionmanager_logpath_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_LOGPATH_INFORMATION.LogPathLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_LOGPATH_INFORMATION.LogPath">
            WCHAR[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_LOG_INFORMATION">
            <summary>
            The TRANSACTIONMANAGER_LOG_INFORMATION structure contains information about a transaction manager object.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_LOG_INFORMATION.LogIdentity">
            <summary>
            A GUID that KTM uses to identify restart records in a transaction manager object's log stream.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_RECOVERY_INFORMATION">
            <summary>
            The TRANSACTIONMANAGER_RECOVERY_INFORMATION structure contains information about a transaction manager object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_transactionmanager_recovery_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTIONMANAGER_RECOVERY_INFORMATION.LastRecoveredLsn">
            <summary>
            The last log sequence number of the last log record that KTM obtained from CLFS during the most recent recovery operation.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_BASIC_INFORMATION">
            <summary>
            The TRANSACTION_BASIC_INFORMATION structure contains information about a transaction object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_transaction_basic_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_BASIC_INFORMATION.TransactionId">
            <summary>
            A GUID that KTM has assigned to the transaction object. 
            This value is also known as the transaction's unit of work (UOW) identifier.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_BASIC_INFORMATION.State">
            <summary>
            A TRANSACTION_STATE-typed value that specifies the transaction's current state.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_BASIC_INFORMATION.Outcome">
            <summary>
            A TRANSACTION_OUTCOME-typed value that specifies the transaction's outcome (result).
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_ENLISTMENTS_INFORMATION">
            <summary>
            The TRANSACTION_ENLISTMENTS_INFORMATION structure contains information about the enlistments that are associated with a transaction object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_transaction_enlistments_information
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_ENLISTMENTS_INFORMATION.NumberOfEnlistments">
            <summary>
            The number of enlistments that are associated with a transaction object. 
            This is also the number of elements in the array that the EnlistmentPair member specifies.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_ENLISTMENTS_INFORMATION.EnlistmentPair">
            <summary>
            A caller-allocated array of TRANSACTION_ENLISTMENT_PAIR structures.
            </summary>
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_ENLISTMENT_PAIR">
            <summary>
            The TRANSACTION_ENLISTMENT_PAIR structure contains information about an enlistment that is associated with a transaction object.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_transaction_enlistment_pair
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_ENLISTMENT_PAIR.EnlistmentId">
            <summary>
            A GUID that KTM has assigned to the enlistment.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_ENLISTMENT_PAIR.ResourceManagerId">
            <summary>
            A GUID that KTM has assigned to the resource manager that created the enlistment.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_PROPERTIES_INFORMATION.IsolationLevel">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_PROPERTIES_INFORMATION.IsolationFlags">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_PROPERTIES_INFORMATION.Timeout">
            LARGE_INTEGER->_LARGE_INTEGER
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_PROPERTIES_INFORMATION.Outcome">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_PROPERTIES_INFORMATION.DescriptionLength">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.TRANSACTION_PROPERTIES_INFORMATION.Description">
            WCHAR[1]
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.UNICODE_STRING">
            <summary>
            The UNICODE_STRING structure is used to define Unicode strings.
            https://learn.microsoft.com/en-us/windows/win32/api/ntdef/ns-ntdef-_unicode_string
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UNICODE_STRING.Length">
            <summary>
            The length, in bytes, of the string stored in Buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UNICODE_STRING.MaximumLength">
            <summary>
            The length, in bytes, of Buffer.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UNICODE_STRING.Buffer">
            <summary>
            Pointer to a buffer used to contain a string of wide characters.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UNLOAD_DLL_DEBUG_INFO.lpBaseOfDll">
            LPVOID->void*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO">
            <summary>
            Used by UpdateLayeredWindowIndirect to provide position, size, shape, content, and translucency information for a layered window.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-updatelayeredwindowinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.hdcDst">
            HDC->HDC__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.pptDst">
            POINT*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.psize">
            SIZE*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.hdcSrc">
            HDC->HDC__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.pptSrc">
            POINT*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.crKey">
            COLORREF->DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.pblend">
            BLENDFUNCTION*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.dwFlags">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.UPDATELAYEREDWINDOWINFO.prcDirty">
            RECT*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES">
            <summary>
            Contains device properties (Human Interface Device (HID) global items that correspond to HID usages) for any type of HID input device.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-usage_properties
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.level">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.page">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.usage">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.logicalMinimum">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.logicalMaximum">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.unit">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.exponent">
            USHORT->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.count">
            BYTE->unsigned char
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.physicalMinimum">
            INT32->int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USAGE_PROPERTIES.physicalMaximum">
            INT32->int
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.USEROBJECTFLAGS">
            <summary>
            Contains information about a window station or desktop handle.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-userobjectflags
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USEROBJECTFLAGS.fInherit">
            <summary>
            If this member is TRUE, new processes inherit the handle. Otherwise, the handle is not inherited.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USEROBJECTFLAGS.fReserved">
            <summary>
            Reserved for future use. This member must be FALSE.
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.USEROBJECTFLAGS.dwFlags">
             <summary>
             For window stations, this member can contain the following window station attribute.
             WSF_VISIBLE=0x0001L                 Window station has visible display surfaces.
            
             For desktops, the dwFlags member can contain the following value.
             DF_ALLOWOTHERACCOUNTHOOK=0x0001L    Allows processes running in other accounts on the desktop to set hooks in this process.
             </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.VALENTA.ve_valuename">
            LPSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.VALENTA.ve_valuelen">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.VALENTA.ve_valueptr">
            DWORD_PTR->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.VALENTA.ve_type">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.VALENTW.ve_valuename">
            LPSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.VALENTW.ve_valuelen">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.VALENTW.ve_valueptr">
            DWORD_PTR->ULONG_PTR->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.VALENTW.ve_type">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK.Union1">
            Anonymous_0908d3fe_4ea2_419a_bbb2_8dcab6f3aae7
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK.DeviceRoutine">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK.DeviceContext">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK.NumberOfMapRegisters">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK.DeviceObject">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK.CurrentIrp">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK.BufferChainingDpc">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK_UNION.WaitQueueEntry">
            PVOID->void*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK_UNION.Struct1">
            Anonymous_e791549f_c477_4f88_aed7_ccffd2646b44
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK_STRUCT.DmaWaitEntry">
            LIST_ENTRY->_LIST_ENTRY
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK_STRUCT.NumberOfChannels">
            ULONG->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WAIT_CONTEXT_BLOCK_STRUCT.bitvector1">
             SyncCallback : 1
            DmaContext : 1
            ZeroMapRegisters : 1
            Reserved : 9
            NumberOfRemapPages : 20
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW">
            <summary>
            Contains information about the file that is found by the FindFirstFile, FindFirstFileEx, or FindNextFile function.
            https://learn.microsoft.com/en-us/windows/win32/api/minwinbase/ns-minwinbase-win32_find_dataw
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.dwFileAttributes">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.ftCreationTime">
            FILETIME->_FILETIME
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.ftLastAccessTime">
            FILETIME->_FILETIME
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.ftLastWriteTime">
            FILETIME->_FILETIME
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.nFileSizeHigh">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.nFileSizeLow">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.dwReserved0">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.dwReserved1">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.cFileName">
            WCHAR[260]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.cAlternateFileName">
            WCHAR[14]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.dwFileType">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.dwCreatorType">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAW.wFinderFlags">
            WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.dwFileAttributes">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.ftCreationTime">
            FILETIME->_FILETIME
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.ftLastAccessTime">
            FILETIME->_FILETIME
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.ftLastWriteTime">
            FILETIME->_FILETIME
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.nFileSizeHigh">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.nFileSizeLow">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.dwReserved0">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.dwReserved1">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.cFileName">
            WCHAR[260]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.cAlternateFileName">
            WCHAR[14]
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.dwFileType">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.dwCreatorType">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WIN32_FIND_DATAA.wFinderFlags">
            WORD->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO">
            <summary>
            Contains window information.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-windowinfo
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.cbSize">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.rcWindow">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.rcClient">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.dwStyle">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.dwExStyle">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.dwWindowStatus">
            DWORD->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.cxWindowBorders">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.cyWindowBorders">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.atomWindowType">
            ATOM->WORD->unsigned short
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWINFO.wCreatorVersion">
            WORD->unsigned short
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPLACEMENT">
            <summary>
            Contains information about the placement of a window on the screen.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-windowplacement
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPLACEMENT.length">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPLACEMENT.flags">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPLACEMENT.showCmd">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPLACEMENT.ptMinPosition">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPLACEMENT.ptMaxPosition">
            POINT->tagPOINT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPLACEMENT.rcNormalPosition">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPLACEMENT.rcDevice">
            RECT->tagRECT
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPOS.hwnd">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPOS.hwndInsertAfter">
            HWND->HWND__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPOS.x">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPOS.y">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPOS.cx">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPOS.cy">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WINDOWPOS.flags">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.style">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.lpfnWndProc">
            WNDPROC
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.cbClsExtra">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.cbWndExtra">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.hInstance">
            HINSTANCE->HINSTANCE__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.hIcon">
            HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.hCursor">
            HCURSOR->HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.hbrBackground">
            HBRUSH->HBRUSH__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.lpszMenuName">
            LPCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSA.lpszClassName">
            LPCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.style">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.lpfnWndProc">
            WNDPROC
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.cbClsExtra">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.cbWndExtra">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.hInstance">
            HINSTANCE->HINSTANCE__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.hIcon">
            HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.hCursor">
            HCURSOR->HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.hbrBackground">
            HBRUSH->HBRUSH__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.lpszMenuName">
            LPCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSW.lpszClassName">
            LPCWSTR->WCHAR*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX">
            <summary>
            Contains window class information. It is used with the RegisterClassEx and GetClassInfoEx  functions.
            https://learn.microsoft.com/en-us/windows/win32/api/winuser/ns-winuser-wndclassexa
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.cbSize">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.style">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.lpfnWndProc">
            WNDPROC
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.cbClsExtra">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.cbWndExtra">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.hInstance">
            HINSTANCE->HINSTANCE__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.hIcon">
            HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.hCursor">
            HCURSOR->HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.hbrBackground">
            HBRUSH->HBRUSH__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.lpszMenuName">
            LPCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.lpszClassName">
            LPCSTR->CHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEX.hIconSm">
            HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.cbSize">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.style">
            UINT->unsigned int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.lpfnWndProc">
            WNDPROC
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.cbClsExtra">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.cbWndExtra">
            int
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.hInstance">
            HINSTANCE->HINSTANCE__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.hIcon">
            HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.hCursor">
            HCURSOR->HICON->HICON__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.hbrBackground">
            HBRUSH->HBRUSH__*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.lpszMenuName">
            LPCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.lpszClassName">
            LPCWSTR->WCHAR*
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.WNDCLASSEXW.hIconSm">
            HICON->HICON__*
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Structs.XSAVE_CET_U_FORMAT">
            <summary>
            Format for CET_U XSTATE component.
            https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/wdm/ns-wdm-_xsave_cet_u_format
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.XSAVE_CET_U_FORMAT.Ia32CetUMsr">
            ULONG64->unsigned __int64
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Structs.XSAVE_CET_U_FORMAT.Ia32Pl3SspMsr">
            ULONG64->unsigned __int64
        </member>
        <member name="T:Ban3.Infrastructures.NativeLibs.Win32">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Win32.Clipboard">
            <summary>
            Open
            Close
            Empty
            RegisterFormat
            Get
            Set
            GetString
            SetString
            </summary>
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Win32.Power">
            
        </member>
        <member name="F:Ban3.Infrastructures.NativeLibs.Win32.Registry">
            
        </member>
    </members>
</doc>
