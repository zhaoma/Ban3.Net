@model Dictionary<Ban3.Productions.Casino.Contracts.Entities.DistributeCondition, Ban3.Infrastructures.Common.Models.MultiResult<Ban3.Productions.Casino.Contracts.Entities.TimelineRecord>>
@{
    Layout = null;
}

<div class="row grid" data-masonry='{"percentPosition": true }'>
    <div class="col-sm-12 col-md-6 col-lg-4 mb-4">
        <div class="card grayBox">
            <div class="card-header">@Model.Count</div>
            <div class="card-body col">
                @foreach (var kv in Model)
                {
                    if (kv.Value is {Data: { } })
                    {
<div class="btn-group pb-3" role="group" aria-label="Basic checkbox toggle button group">
    @if (kv.Key.Show)
    {
        <input type="checkbox" class="btn-check selectList" id="chk_@kv.Key.Rank" autocomplete="off" checked="checked" value="@kv.Key.Rank">
    }
    else
    {
        <input type="checkbox" class="btn-check selectList" id="chk_@kv.Key.Rank" autocomplete="off" value="@kv.Key.Rank">
    }
    <label class="btn btn-outline-primary" for="chk_@kv.Key.Rank">@kv.Key.Subject <span class="badge bg-warning">@kv.Value.RecordCount</span></label>
</div>
                    }
                }
            </div>
            <div class="hide" id="chartsSection">
                <div class="col-12 pb-3">
                    <div id="chartsContainer" style="height: 600px; width: 100%;">
                    </div>
                </div>
            </div>
        </div> 
    </div>
    @foreach (var kv in Model)
        {
            var tableClass = kv.Key.Show ? "" : "hide";
            if (kv.Value is {Data: { } })
            {
            <div class="col-sm-12 col-md-6 col-lg-4 mb-4 @tableClass" id="dic_@kv.Key.Rank">
                <div class="card grayBox">
                    <div class="card-header">@kv.Key.Subject @kv.Value.RecordCount</div>
                    <div class="card-body col">
                        <table data-pagination="true" class="table table-hover table-dark table-bordered">
                            <thead>
                            <tr>
                                <th class="col-3">Symbol</th>
                                <th class="col-6">From</th>
                                <th class="col-3">Nearly</th>
                            </tr>
                            </thead>
                            <tbody>
                            @foreach (var point in kv.Value.Data.Take(10))
                            {
                                var changePercent = Math.Round(point.Increase(), 2);
                                var amplitude = Math.Round(point.Amplitude(), 2);

                                var className = changePercent > 0
                                    ? "red"
                                    : (changePercent == 0 ? "gray" : "green");

                                <tr class="@className renderChartsButton"
                                    renderElement="chartsContainer"
                                    dataUrl="/data/macd/@point.Code"
                                    renderContainer="chartsSection">
                                    <td>@point.Code</td>
                                    <td>
                                        @point.DailyRecord.Close
                                        <span class="badge">
                                            @point.DailyRecord.Date
                                        </span>
                                        <sub title="涨幅">@Math.Round(changePercent, 2)</sub>
                                        <sup title="振幅">@amplitude</sup>
                                    </td>
                                    <td>@($"{point.NearlyRecord.Close}") <span class="badge" title="天数">@point.DurationDays()</span></td>
                                </tr>
                            }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    }


</div>