@using Ban3.Infrastructures.Common.Extensions
@model IEnumerable<Ban3.Infrastructures.Indicators.Entries.ListRecord> 
@{
    Layout = null;
    var runtime = Ban3.Productions.Casino.Contracts.Entities.StockRealtime.Records;
}
<table data-pagination="true" class="table table-hover  table-bordered">
    <thead>
    <tr>
        <th class="col-3">Symbol</th>
        <th class="col-6">Close</th>
        <th class="col-3">Rank</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var point in Model.OrderBy(o => o.Rank))
    {
        var r = runtime.TryGetValue(point.Symbol, out var p);
        var className =r? p?.ChangePercent > 0 ? "red" : p?.ChangePercent == 0 ? "gray" : "green":"";
            <tr class="@className renderChartsButton"
                renderElement="chartsContainer"
                dataUrl="/data/macd/@point.Code"
                renderContainer="chartsSection">
            <td>@point.Symbol</td>
                <td>@point.Close  <span class="badge">@(p != null ? Math.Round(p.ChangePercent, 2) : "")%</span></td>
                <td>@($"{point.Rank}")  <span class="badge">@point.Value</span></td>
        </tr>
    }
    </tbody>
</table>